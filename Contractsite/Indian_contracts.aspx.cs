using System;
using System.Data;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;
using System.Collections;
using System.Data.Sql;
using System.Net;
using System.IO;
using System.Web.UI.WebControls.Adapters;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Net.Mail;
using System.Globalization; 
using System.Web.Services;
using System.Web.Script.Serialization;
using System.Net.Mime;
using System.Threading;
using System.ComponentModel;
using CrystalDecisions.CrystalReports.Engine;
using CrystalDecisions.Shared;
using System.Windows.Forms;
using System.Collections.Generic;
 
public partial class _Default : System.Web.UI.Page
{
    static string office;
    static string pointsamt, pointstax, poinstcgst, pointssgst,mrgcode;
    string IGSTrate, Interestrate,mcwaiver;
    string Finance_No, documentationfee, IGST_Amount, No_Emi, emiamt, eurorate, loanamtINEuro, monthlyPremiumprotectionplan;
    static string ocompanyname;
    
    static string contractdetailsID;
    public string getdata()
    {
        string htmlstr = "";
        SqlDataReader dr = Queries.LoadAffiliationType(office); //,currencyDropDownList.SelectedItem.Text);
        while (dr.Read())
        {

            int id = dr.GetInt32(0);
            string name = dr.GetString(1);
            double amt = dr.GetDouble(2);
            string addvalue = "dispplayvalue";
            string ca = "ca";

            htmlstr += " <input id=" + ca + "" + id + " type='checkbox' class='hello' name='aamt' onClick="  + addvalue + "() value='" + amt + "'>" + name + "";


        }

        return htmlstr;
    }

    public string LoadFinanceNo(string venue, string type, string financetype)
    {
        string fnumb = null;
        if (financetype == "Pashuram Finance")
        {
            if (type == "Fractional" || type == "Trade-In-Fractionals")
            {
                fnumb = Queries.GetFinanceNum(venue, financetype) + "Z3F";

            }
            else
            {
                fnumb = Queries.GetFinanceNum(venue, financetype) + "Z3";
            }
        }
        else if(financetype == "Crown Finance")
        {
            if (type == "Fractional" || type == "Trade-In-Fractionals")
            {
                fnumb = Queries.GetFinanceNum(venue, financetype);

            }
            else
            {
                fnumb = Queries.GetFinanceNum(venue, financetype);
            }
        }
        return fnumb;
    }
    public void LoadDocuments(string ContractDetails_ID, string office, string Finance_Details, string ContractType, string aftype, string mc, string canxcontno, string companyname, string statename)
    {
        if (mc == "Yes")
        {
            int othersid1 = Queries.ContractNo_OthernamesExistsNone(ContractDetails_ID);
            if (othersid1 == 0)
            {

                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany1GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany2GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany3GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany4GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany1GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany2GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany3GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany4GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }
                            }
                        }

                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany1(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany2(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany3(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany4(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany1(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany2(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany3(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany4(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }
                            }
                        }



                    }
                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }

                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }

                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                    string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
            }
            //check if id exists in othernames
            int othersid = Queries.ContractNo_OthernamesExistsA(ContractDetails_ID);
            if (othersid == 1)
            {
                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany5GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany6GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany7GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany8GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany5GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany6GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany7GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany8GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                        }
                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany5(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany6(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany7(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany8(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany5(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany6(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany7(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany8(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }

                        }
                    }
                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "GOA" || statename == "Goa")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "GOA" || statename == "Goa")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {

                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "GOA" || statename == "Goa")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
            }


            int othersid3 = Queries.ContractNo_OthernamesExistsS(ContractDetails_ID);
            if (othersid3 == 1)
            {
                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany9GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany10GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany11GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany12GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany9GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany10GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany11GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany12GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                        }
                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany9(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany10(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany11(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany12(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany9(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany10(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany11(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany12(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }

                        }
                    }

                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "GOA" || statename == "Goa")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }

                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "GOA" || statename == "Goa")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "GOA" || statename == "Goa")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
            }
            int othersid2 = Queries.ContractNo_OthernamesExistsB(ContractDetails_ID);
            if (othersid2 == 1)
            {
                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany13GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany14GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany15GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany16GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany13GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany14GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany15GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany16GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                        }
                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany13(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany14(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany15(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany16(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany13(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany14(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany15(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany16(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }

                        }
                    }

                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9MCGOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9MC(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
            }
        }
        else if (mc == "No" || mc == "")
        {
            int othersid1 = Queries.ContractNo_OthernamesExistsNone(ContractDetails_ID);
            if (othersid1 == 0)
            {
                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany1GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany2GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany3GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany4GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany1GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany2GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany3GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany4GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                        }
                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany1(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany2(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany3(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany4(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany1(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany2(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany3(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany4(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }

                        }
                    }

                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }

                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        PrintPdfDropDownList.Items.Clear();
                        string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points4(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points5(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points6(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
            }
            //check if id exists in othernames
            int othersid = Queries.ContractNo_OthernamesExistsA(ContractDetails_ID);
            if (othersid == 1)
            {
                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany5GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null) || oldLAno != "N/A")
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany6GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany7GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany8GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany5GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany6GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany7GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany8GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                        }
                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany5(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany6(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany7(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany8(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany5(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany6(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany7(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany8(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }

                        }
                    }

                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "GOA" || statename == "Goa")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }

                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points1(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points2(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points3(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();

                        if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                        {
                            PrintPdfDropDownList.Items.Clear();
                            DataSet ds21 = Queries.LoadPrintPDFFiles_Points1(ContractType, office, club, curr, Finance_Details, aftype, mc);
                            PrintPdfDropDownList.DataSource = ds21;
                            PrintPdfDropDownList.DataTextField = "printname";
                            PrintPdfDropDownList.DataValueField = "printname";
                            PrintPdfDropDownList.AppendDataBoundItems = true;
                            PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                            PrintPdfDropDownList.DataBind();
                        }
                        else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                        {
                            PrintPdfDropDownList.Items.Clear();
                            DataSet ds21 = Queries.LoadPrintPDFFiles_Points2(ContractType, office, club, curr, Finance_Details, aftype, mc);
                            PrintPdfDropDownList.DataSource = ds21;
                            PrintPdfDropDownList.DataTextField = "printname";
                            PrintPdfDropDownList.DataValueField = "printname";
                            PrintPdfDropDownList.AppendDataBoundItems = true;
                            PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                            PrintPdfDropDownList.DataBind();

                        }
                        else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                        {
                            PrintPdfDropDownList.Items.Clear();
                            DataSet ds21 = Queries.LoadPrintPDFFiles_Points3(ContractType, office, club, curr, Finance_Details, aftype, mc);
                            PrintPdfDropDownList.DataSource = ds21;
                            PrintPdfDropDownList.DataTextField = "printname";
                            PrintPdfDropDownList.DataValueField = "printname";
                            PrintPdfDropDownList.AppendDataBoundItems = true;
                            PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                            PrintPdfDropDownList.DataBind();
                        }
                        else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                        {

                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();

                        if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                        {
                            PrintPdfDropDownList.Items.Clear();
                            DataSet ds21 = Queries.LoadPrintPDFFiles_Points1(ContractType, office, club, curr, Finance_Details, aftype, mc);
                            PrintPdfDropDownList.DataSource = ds21;
                            PrintPdfDropDownList.DataTextField = "printname";
                            PrintPdfDropDownList.DataValueField = "printname";
                            PrintPdfDropDownList.AppendDataBoundItems = true;
                            PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                            PrintPdfDropDownList.DataBind();
                        }
                        else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                        {
                            PrintPdfDropDownList.Items.Clear();
                            DataSet ds21 = Queries.LoadPrintPDFFiles_Points2(ContractType, office, club, curr, Finance_Details, aftype, mc);
                            PrintPdfDropDownList.DataSource = ds21;
                            PrintPdfDropDownList.DataTextField = "printname";
                            PrintPdfDropDownList.DataValueField = "printname";
                            PrintPdfDropDownList.AppendDataBoundItems = true;
                            PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                            PrintPdfDropDownList.DataBind();

                        }
                        else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                        {
                            PrintPdfDropDownList.Items.Clear();
                            DataSet ds21 = Queries.LoadPrintPDFFiles_Points3(ContractType, office, club, curr, Finance_Details, aftype, mc);
                            PrintPdfDropDownList.DataSource = ds21;
                            PrintPdfDropDownList.DataTextField = "printname";
                            PrintPdfDropDownList.DataValueField = "printname";
                            PrintPdfDropDownList.AppendDataBoundItems = true;
                            PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                            PrintPdfDropDownList.DataBind();
                        }
                        else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                        {

                        }
                    }
                }
            }


            int othersid3 = Queries.ContractNo_OthernamesExistsS(ContractDetails_ID);
            if (othersid3 == 1)
            {
                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany9GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany10GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany11GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany12GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany9GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany10GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany11GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany12GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                        }
                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany9(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany10(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany11(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany12(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany9(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany10(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany11(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany12(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }

                        }
                    }

                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points10(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points11(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points12(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
            }
            int othersid2 = Queries.ContractNo_OthernamesExistsB(ContractDetails_ID);
            if (othersid2 == 1)
            {
                if (ContractType == "Trade-In-Fractionals" || ContractType == "Fractional")
                {
                    PrintPdfDropDownList.Items.Clear();
                    DataSet dsp = Queries.loadtradeinfractional(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["resort"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        string tradevalue = dsp.Tables[0].Rows[0]["TradeIn_value"].ToString();
                        string oldLAno = dsp.Tables[0].Rows[0]["Open_Loan_AgreementNo"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany13GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany14GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany15GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany16GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany13GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany14GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany15GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany16GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                        }
                        else
                        {
                            if (companyname == "" || companyname == null)
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany13(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany14(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany15(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalNOCompany16(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }
                            else
                            {
                                if ((tradevalue == "" || tradevalue == null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany13(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue == "" || tradevalue == null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();

                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany14(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno == "" || oldLAno == null || oldLAno == "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany15(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();

                                }
                                else if ((tradevalue != "" || tradevalue != null) && (oldLAno != "" || oldLAno != null || oldLAno != "N/A"))
                                {
                                    PrintPdfDropDownList.Items.Clear();
                                    DataSet ds21 = Queries.LoadPrintPDFFiles_FractionalCompany16(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                    PrintPdfDropDownList.DataSource = ds21;
                                    PrintPdfDropDownList.DataTextField = "printname";
                                    PrintPdfDropDownList.DataValueField = "printname";
                                    PrintPdfDropDownList.AppendDataBoundItems = true;
                                    PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                    PrintPdfDropDownList.DataBind();
                                }

                            }

                        }
                    }

                }
                else if (ContractType == "Points")
                {
                    DataSet dsp = Queries.LoadNewPointsDetails(ContractDetails_ID);
                    PrintPdfDropDownList.Items.Clear();
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {


                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Points")
                {
                    DataSet dsp = Queries.LoadTradeinPointsDetails(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["New_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
                else if (ContractType == "Trade-In-Weeks")
                {
                    DataSet dsp = Queries.LoadTradeinWeeksDetails(ContractDetails_ID);
                    if (dsp.Tables[0].Rows.Count == 0) { }
                    else
                    {
                        string club = dsp.Tables[0].Rows[0]["NewPointsW_Club"].ToString();
                        string curr = dsp.Tables[0].Rows[0]["Currency"].ToString();
                        if (statename == "Goa" || statename == "GOA")
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9GOA(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                        else
                        {
                            if ((canxcontno == "" || canxcontno == null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points7(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname == "" || companyname == null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points8(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();

                            }
                            else if ((canxcontno == "" || canxcontno == null) && (companyname != "" || companyname != null))
                            {
                                PrintPdfDropDownList.Items.Clear();
                                DataSet ds21 = Queries.LoadPrintPDFFiles_Points9(ContractType, office, club, curr, Finance_Details, aftype, mc);
                                PrintPdfDropDownList.DataSource = ds21;
                                PrintPdfDropDownList.DataTextField = "printname";
                                PrintPdfDropDownList.DataValueField = "printname";
                                PrintPdfDropDownList.AppendDataBoundItems = true;
                                PrintPdfDropDownList.Items.Insert(0, new ListItem("", ""));
                                PrintPdfDropDownList.DataBind();
                            }
                            else if ((canxcontno != "" || canxcontno != null) && (companyname != "" || companyname != null))
                            {

                            }
                        }
                    }
                }
            }
        }

    }//load documents end



    public void SOR_AdditionalName(string contractdetails_ID)
    {
        // string ContractdetailsID = ContractdetailsIDTextBox.Text;
        string contractno = contractnoTextBox.Text;
     office=Queries.GetOfficeFromCountry(Session["ProfileID"].ToString());
        int ik;
        string sornote = "SOR Details Added";

        string addonnote = "Additional Name Details Added";

        //string iname, iadd, istate, icountry, ipincode;
        //string name, add, state, country, pincode;
        string iname, iadd;//, istate = "", icountry = "", ipincode = "";
        string name, add, state = "", country = "", pincode = "";
        string user = (string)Session["username"];
        if (asornoTextBox.Text == "")
        {
        }
        else
        {
            int num = Convert.ToInt32(asornoTextBox.Text);
            if (SORDropDownList.SelectedItem.Text == "")
            {

            }
            else if (SORDropDownList.SelectedItem.Text == "SOR Name")
            {
                for (ik = 1; ik <= Convert.ToInt32(num); ik++)
                {
                    string id = Queries.GetContractNo_OthernamesID(office);
                    iname = "textBox1_" + ik + "1";
                    name = Request.Form[iname];
                    iadd = "textBox1_" + ik + "2";
                    add = Request.Form[iadd];
                    //istate = "textBox1_" + ik + "3";
                    //state = Request.Form[istate];
                    //icountry = "textBox1_" + ik + "4";
                    //country = Request.Form[icountry];
                    //ipincode = "textBox1_" + ik + "5";
                    //pincode = Request.Form[ipincode];

                    int insertrow = Queries.InsertContractNo_Othernames(id, contractnoTextBox.Text, contractdetails_ID, SORDropDownList.SelectedItem.Text, name.ToUpper(), add.ToUpper(), state.ToUpper(), country.ToUpper(), pincode, "Active", "", DateTime.Now.ToString());
                    string log5in = "SOR Details:" +  "," + "ContractdetailsID: " + contractdetails_ID +  "," + "Contractno: " + contractnoTextBox.Text +  "," + "Type:" + SORDropDownList.SelectedItem.Text +  "," + "Name:" + name.ToUpper() +  "," + "address:" + add.ToUpper();// + "," + "state:" + state.ToUpper() + "," + "country:" + country.ToUpper() + "," + "postcode:" + pincode;
                    int insertlogin = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), contractdetails_ID, log5in, user, DateTime.Now.ToString(), "Indian_contracts.aspx", sornote, "", log5in);
                    int updatesor = Queries.UpdateContractNo_OthernamesID(office);
                }

                asornoTextBox.Text = "";
                 
                int existssor = Queries.ContractIDINSOR_Additional(contractdetails_ID);
                if (existssor == 1)
                {
                    GridView2.Visible = true;
                    DataSet dsor = Queries.LoadContractNo_Othernames(contractdetails_ID);
                    GridView2.DataSource = dsor;
                    GridView2.DataBind();

                }
                else
                {
                    GridView2.Visible = false;
                }

            }
            else if (SORDropDownList.SelectedItem.Text == "Additional Name")
            {
                for (ik = 1; ik <= Convert.ToInt32(num); ik++)
                {
                    string id = Queries.GetContractNo_OthernamesID(office);
                    iname = "textBox1_" + ik + "1";
                    name = Request.Form[iname];
                    iadd = "textBox1_" + ik + "2";
                    add = Request.Form[iadd];
                    //istate = "textBox1_" + ik + "3";
                    //state = Request.Form[istate];
                    //icountry = "textBox1_" + ik + "4";
                    //country = Request.Form[icountry];
                    //ipincode = "textBox1_" + ik + "5";
                    //pincode = Request.Form[ipincode];

                    int insertrow = Queries.InsertContractNo_Othernames(id, contractnoTextBox.Text, contractdetails_ID, SORDropDownList.SelectedItem.Text, name.ToUpper(), add.ToUpper(), state.ToUpper(), country.ToUpper(), pincode, "Active", "", DateTime.Now.ToString());
                    string log5in = "Additional Name Details:" +  "," + "ContractdetailsID: " + contractdetails_ID +  "," + "Contractno: " + contractnoTextBox.Text +  "," + "Type:" + SORDropDownList.SelectedItem.Text +  "," + "Name:" + name.ToUpper() +  "," + "address:" + add.ToUpper();// + "," + "state:" + state.ToUpper() + "," + "country:" + country.ToUpper() + "," + "postcode:" + pincode;
                    int insertlogin = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), contractdetails_ID, log5in, user, DateTime.Now.ToString(), "Indian_contracts.aspx", addonnote, "", log5in);
                    int updatesor = Queries.UpdateContractNo_OthernamesID(office);
                }

                asornoTextBox.Text = "";
                int existssor = Queries.ContractIDINSOR_Additional(contractdetails_ID);
                if (existssor == 1)
                {
                    GridView2.Visible = true;
                    DataSet dsor = Queries.LoadContractNo_Othernames(contractdetails_ID);
                    GridView2.DataSource = dsor;
                    GridView2.DataBind();

                }
                else
                {
                    GridView2.Visible = false;
                }
            }

        }

    }
    public void financebreakup(string noemi, string financeamt, string emiamt, string contractid, string ctype, string contno,string installmentcnt,string oldloanamt)
    {
        int emimonths = Convert.ToInt32(noemi);// (noemiTextBox.Text);
        
       // double principalamt = Convert.ToDouble(financeamt)+ Convert.ToDouble(oldloanamt);// balamtpayableTextBox.Text);
	//double principalamt = Convert.ToDouble(financeamt);
        double emiamt1 = Convert.ToDouble(emiamt);// emiamtTextBox.Text);
        int months = 12;
        int ik;
        string month, fmonth;
        string dt =   DateTime.Parse(dealdateTextBox.Text.Trim()).ToString("MM/dd/yyyy", CultureInfo.InvariantCulture);// "24-04-2019";//

        DateTime ddy = Convert.ToDateTime(dt);
        int ddyr = ddy.Year;

        if (ctype == "Trade-In-Fractionals")
        {
            double principalamt = Convert.ToDouble(financeamt) + Convert.ToDouble(oldloanamt);
            if (currencyDropDownList.SelectedItem.Text == "INR" || currencyDropDownList.SelectedItem.Text == "Rs")
            {
                DataSet dsfin = Queries.LoadFinanceMethodRatesFractional(financemethodDropDownList.SelectedItem.Text, ddyr);

                int interest = Convert.ToInt32(dsfin.Tables[0].Rows[0]["Interest_rate"]); //12;
                for (ik = 1; ik <= emimonths; ik++)
                {

                    //if contractdetails id doesnt exists then
                    int exists = Queries.CheckIDExistsInFinance_Breakup(contractid);
                    if (exists == 1)
                    {
                        //get min principalamt
                        int ink = ik - 1;
                        double pa = Queries.GetMinPrinicipalAmt(contractid);
                        double mi = Queries.GetMinMonthlyPrincipal(contractid, ink, pa);
                        double newba = pa - mi;
                        double Yearly_interest = Math.Round((newba * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        fmonth = Queries.FinanceInstallmentMonthF(contractid);
                        month = Queries.FinanceInstallmentMonthStartdate(contractid);
                        int insert = Queries.InsertFinance_Breakup(contractid, contno, newba, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                    }
                    else
                    {
                        double Yearly_interest = Math.Round((principalamt * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        //get max month from installment table
                        if (installmentcnt == "0" || installmentcnt == "" || installmentcnt == "NaN")
                        {
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewFZeroInstallment(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNewZeroInstallment(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);

                        }
                        else
                        {
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewF(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNew(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                        }
                    }

                }
            }
            else
            {
                //crown finance
            }

        }
        else if (ctype == "Fractional")
        {
            double principalamt = Convert.ToDouble(financeamt);
            if (currencyDropDownList.SelectedItem.Text == "INR" || currencyDropDownList.SelectedItem.Text == "Rs")
            {
                DataSet dsfin = Queries.LoadFinanceMethodRatesFractional(financemethodDropDownList.SelectedItem.Text, ddyr);

                int interest = Convert.ToInt32(dsfin.Tables[0].Rows[0]["Interest_rate"]); //12;
                for (ik = 1; ik <= emimonths; ik++)
                {

                    //if contractdetails id doesnt exists then
                    int exists = Queries.CheckIDExistsInFinance_Breakup(contractid);
                    if (exists == 1)
                    {
                        //get min principalamt
                        int ink = ik - 1;
                        double pa = Queries.GetMinPrinicipalAmt(contractid);
                        double mi = Queries.GetMinMonthlyPrincipal(contractid, ink, pa);
                        double newba = pa - mi;
                        double Yearly_interest = Math.Round((newba * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        fmonth = Queries.FinanceInstallmentMonthF(contractid);
                        month = Queries.FinanceInstallmentMonthStartdate(contractid);
                        int insert = Queries.InsertFinance_Breakup(contractid, contno, newba, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                    }
                    else
                    {
                        double Yearly_interest = Math.Round((principalamt * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        //get max month from installment table
                        if (installmentcnt == "0" || installmentcnt == "" || installmentcnt == "NaN")
                        {
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewFZeroInstallment(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNewZeroInstallment(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);

                        }
                        else
                        {
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewF(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNew(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                        }
                    }

                }
            }
            else
            {
                //crown finance
            }

        }
        else if(ctype == "Trade-In-Points" || ctype == "Trade-In-Weeks")
        {
            double principalamt; 
            if (oldloanamt==""|| oldloanamt==null || oldloanamt == "0")
            {
                principalamt = Convert.ToDouble(financeamt);
            }
            else
            {
                principalamt = Convert.ToDouble(financeamt) + Convert.ToDouble(oldloanamt);
            }
              
            

            if (currencyDropDownList.SelectedItem.Text == "INR" || currencyDropDownList.SelectedItem.Text == "Rs")
            {
                // int interest = 19;
                DataSet dsfin = Queries.LoadFinanceMethodRates(financemethodDropDownList.SelectedItem.Text, ddyr);

                int interest = Convert.ToInt32(dsfin.Tables[0].Rows[0]["Interest_rate"]);
                for (ik = 1; ik <= emimonths; ik++)
                {

                    //if contractdetails id doesnt exists then
                    int exists = Queries.CheckIDExistsInFinance_Breakup(contractid);
                    if (exists == 1)
                    {
                        //get min principalamt
                        int ink = ik - 1;
                        double pa = Queries.GetMinPrinicipalAmt(contractid);
                        double mi = Queries.GetMinMonthlyPrincipal(contractid, ink, pa);
                        double newba = pa - mi;
                        double Yearly_interest = Math.Round((newba * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        fmonth = Queries.FinanceInstallmentMonthF(contractid);
                        month = Queries.FinanceInstallmentMonthStartdate(contractid);
                        int insert = Queries.InsertFinance_Breakup(contractid, contno, newba, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                    }
                    else
                    {
                        double Yearly_interest = Math.Round((principalamt * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        if (installmentcnt == "0" || installmentcnt == "" || installmentcnt == "NaN")
                        {
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewFZeroInstallment(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNewZeroInstallment(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);

                        }
                        else
                        {
                            //get max month from installment table
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewF(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNew(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                        }
                    }

                }
            }
            else
            { //crown finance}
            }
        }//end of trade in contracts
        else
        {

            double principalamt = Convert.ToDouble(financeamt);

            if (currencyDropDownList.SelectedItem.Text == "INR" || currencyDropDownList.SelectedItem.Text == "Rs")
            {
                // int interest = 19;
                DataSet dsfin = Queries.LoadFinanceMethodRates(financemethodDropDownList.SelectedItem.Text, ddyr);

                int interest = Convert.ToInt32(dsfin.Tables[0].Rows[0]["Interest_rate"]);
                for (ik = 1; ik <= emimonths; ik++)
                {

                    //if contractdetails id doesnt exists then
                    int exists = Queries.CheckIDExistsInFinance_Breakup(contractid);
                    if (exists == 1)
                    {
                        //get min principalamt
                        int ink = ik - 1;
                        double pa = Queries.GetMinPrinicipalAmt(contractid);
                        double mi = Queries.GetMinMonthlyPrincipal(contractid, ink, pa);
                        double newba = pa - mi;
                        double Yearly_interest = Math.Round((newba * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        fmonth = Queries.FinanceInstallmentMonthF(contractid);
                        month = Queries.FinanceInstallmentMonthStartdate(contractid);
                        int insert = Queries.InsertFinance_Breakup(contractid, contno, newba, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                    }
                    else
                    {
                        double Yearly_interest = Math.Round((principalamt * interest) / 100);
                        double Monthly_Instalment = emiamt1;
                        double Installments = ik;
                        double Monthly_Interest = Math.Round(Yearly_interest / months);
                        double Monthly_Principal = Math.Round(Monthly_Instalment - Monthly_Interest);
                        if (installmentcnt == "0" || installmentcnt == "" || installmentcnt == "NaN")
                        {
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewFZeroInstallment(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNewZeroInstallment(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);

                        }
                        else
                        {
                            //get max month from installment table
                            fmonth = Queries.FinanceInstallmentMonthStartdateNewF(contractid);
                            month = Queries.FinanceInstallmentMonthStartdateNew(contractid);
                            int insert = Queries.InsertFinance_Breakup(contractid, contno, principalamt, Yearly_interest, Monthly_Principal, Monthly_Interest, Monthly_Instalment, Installments.ToString(), month, fmonth);
                        }
                    }

                }
            }
            else
            { //crown finance}
            }
        }
    }
    protected void Page_Load(object sender, EventArgs e)
    {
        string user = (string)Session["username"];
        if (user == null)
        {
            Response.Redirect("~/WebSite5/production/login.aspx");
        }
        if (!IsPostBack)
        {

            Button7.Visible = false;
            SORDropDownList.Items.Clear();
            SORDropDownList.Items.Add("");
            SORDropDownList.Items.Add("SOR Name");
            SORDropDownList.Items.Add("Additional Name");

            dealdateTextBox.Text = DateTime.Today.ToString("MM/dd/yyyy");// ("dd/MM/yyyy");

            dealstatusDropDownList.Items.Add("DEAL NOT HAPPENED");
           // DataSet dsdeal = Queries.DisplayDealstatus();
            //dealstatusDropDownList.DataSource = dsdeal;
            //dealstatusDropDownList.DataTextField = "status_type";
            //dealstatusDropDownList.DataValueField = "status_type";
            //dealstatusDropDownList.DataBind();

            Session["oProfile_Venue_Country"] = ""; Session["oProfile_Venue"] = ""; Session["oProfile_Group_Venue"] = ""; Session["oProfile_Marketing_Program"] = "";
            Session["oProfile_Agent"] = ""; Session["oProfile_Agent_Code"] = ""; Session["oProfile_Member_Type1"] = ""; Session["oProfile_Member_Number1"] = "";
            Session["oProfile_Member_Type2"] = ""; Session["oProfile_Member_Number2"] = ""; Session["oProfile_Employment_status"] = ""; Session["oProfile_Marital_status"] = "";
            Session["oProfile_NOY_Living_as_couple"] = ""; Session["oOffice"] = ""; Session["oComments"] = ""; Session["oManager"] = "";
            Session["ophid"] = ""; Session["ocard"] = "";

            Session["oProfile_Primary_Title"] = ""; Session["oProfile_Primary_Fname"] = ""; Session["oProfile_Primary_Lname"] = "";
            Session["oProfile_Primary_DOB"] = ""; Session["oProfile_Primary_Nationality"] = ""; Session["oProfile_Primary_Country"] = "";
            Session["opage"] = ""; Session["opdesignation"] = ""; Session["oplang"] = "";

            Session["oProfile_Secondary_Title"] = ""; Session["oProfile_Secondary_Fname"] = ""; Session["oProfile_Secondary_Lname"] = "";
            Session["oProfile_Secondary_DOB"] = ""; Session["oProfile_Secondary_Nationality"] = ""; Session["oProfile_Secondary_Country"] = "";
            Session["osage"] = ""; Session["osdesignation"] = ""; Session["oslang"] = "";

            Session["oSub_Profile1_Title"] = ""; Session["oSub_Profile1_Fname"] = ""; Session["oSub_Profile1_Lname"] = "";
            Session["oSub_Profile1_DOB"] = ""; Session["  oSub_Profile1_Nationality"] = ""; Session["oSub_Profile1_Country"] = "";
            Session["osp1age"] = "";

            Session["oSub_Profile2_Title"] = ""; Session["oSub_Profile2_Fname"] = ""; Session["oSub_Profile2_Lname"] = "";
            Session["oSub_Profile2_DOB"] = ""; Session["  oSub_Profile2_Nationality"] = ""; Session["oSub_Profile2_Country"] = "";
            Session["osp2age"] = "";

            Session["oSub_Profile3_Title"] = ""; Session["oSub_Profile3_Fname"] = ""; Session["oSub_Profile3_Lname"] = "";
            Session["oSub_Profile3_DOB"] = ""; Session["  oSub_Profile3_Nationality"] = ""; Session["oSub_Profile3_Country"] = "";
            Session["osp3age"] = "";

            Session["oSub_Profile4_Title"] = ""; Session["oSub_Profile4_Fname"] = ""; Session["oSub_Profile4_Lname"] = "";
            Session["oSub_Profile4_DOB"] = ""; Session["  oSub_Profile4_Nationality"] = ""; Session["oSub_Profile4_Country"] = "";
            Session["osp4age"] = "";

            Session["oProfile_Address_Line1"] = ""; Session["oProfile_Address_Line2"] = ""; Session["oProfile_Address_State"] = "";
            Session["oProfile_Address_city"] = ""; Session["oProfile_Address_Postcode"] = ""; Session["oProfile_Address_Created_Date"] = "";
            Session["oProfile_Address_Expiry_Date"] = ""; Session["oProfile_Address_Country"] = "";

            Session["oProfile_CorAddress_Line1"] = ""; Session["oProfile_CorAddress_Line2"] = ""; Session["oProfile_CorAddress_State"] = "";
            Session["oProfile_CorAddress_city"] = ""; Session["oProfile_CorAddress_Postcode"] = ""; Session["oProfile_CorAddress_Created_Date"] = "";
            Session["oProfile_Address_Expiry_Date"] = ""; Session["oProfile_CorAddress_Country"] = "";


            Session["oPrimary_CC"] = ""; Session["oPrimary_Mobile"] = ""; Session["oPrimary_Alt_CC"] = "";
            Session["oPrimary_Alternate"] = ""; Session["opriOfficecc"] = ""; Session["opriOfficeno"] = "";

            Session["osecOfficecc"] = ""; Session["osecofficeno"] = ""; Session["oSecondary_CC"] = "";
            Session["oSecondary_Mobile"] = ""; Session["oSecondary_Alt_CC"] = ""; Session["oSecondary_Alternate"] = "";

            Session["oSubprofile1_CC"] = ""; Session["oSubprofile1_Mobile"] = ""; Session["oSubprofile1_Alt_CC"] = ""; Session["oSubprofile1_Alternate"] = "";
            Session["oSubprofile2_CC"] = ""; Session["oSubprofile2_Mobile"] = ""; Session["oSubprofile2_Alt_CC"] = ""; Session["oSubprofile2_Alternate"] = "";

            Session["oSubprofile3_CC"] = ""; Session["oSubprofile3_Mobile"] = ""; Session["oSubprofile3_Alt_CC"] = ""; Session["oSubprofile3_Alternate"] = "";
            Session["oSubprofile4_CC"] = ""; Session["oSubprofile4_Mobile"] = ""; Session["oSubprofile4_Alt_CC"] = ""; Session["oSubprofile4_Alternate"] = "";

            Session["oPrimary_Email"] = ""; Session["oSecondary_Email"] = ""; Session["oSubprofile1_Email"] = "";
            Session["oSubprofile2_Email"] = ""; Session["oSubprofile3_Email"] = ""; Session["oSubprofile4_Email"] = "";

            Session["oPrimary_Email2"] = ""; Session["oSecondary_Email2"] = ""; Session["oSubprofile1_Email2"] = "";
            Session["oSubprofile2_Email2"] = ""; Session["oSubprofile3_Email2"] = ""; Session["oSubprofile4_Email2"] = "";

            Session["oProfile_Stay_ID"] = ""; Session["oProfile_Stay_Resort_Name"] = ""; Session["oProfile_Stay_Resort_Room_Number"] = "";
            Session["oProfile_Stay_Arrival_Date"] = ""; Session["oProfile_Stay_Departure_Date"] = "";

            Session["oTour_Details_Guest_Status"] = ""; Session["oTour_Details_Guest_Sales_Rep"] = ""; Session["oTour_Details_Tour_Date"] = "";
            Session["tourweekno"] = ""; Session["oTour_Details_Sales_Deck_Check_In"] = ""; Session["oTour_Details_Sales_Deck_Check_Out"] = "";
            Session["oTour_Details_Taxi_In_Price"] = ""; Session["oTour_Details_Taxi_In_Ref"] = ""; Session["oTour_Details_Taxi_Out_Price"] = "";
            Session["oTour_Details_Taxi_Out_Ref"] = ""; Session["oComments"] = ""; Session["oregTerms"] = ""; Session["ocomment2"] = "";

            Session["ProfileID"] = ""; Session["ophid"] = ""; Session["ocard"] = ""; Session["oTour_Details_Tour_Date"] = "";

            Session["pancardspell"] = ""; Session["cogstinospell"] = "";

            Session["ProfileID"] = Convert.ToString(Request.QueryString["Profile_ID"]);



            //ProfileID = Convert.ToString(Request.QueryString["Profile_ID"]);

              DataSet ds = Queries.LoadProfielDetailsFull(Session["ProfileID"].ToString());
              profileidTextBox.Text = ds.Tables[0].Rows[0]["Profile_ID"].ToString();
              indateTextBox.Text = ds.Tables[0].Rows[0]["Profile_Date_Of_Insertion"].ToString();
              createdbyTextBox.Text = ds.Tables[0].Rows[0]["Profile_Created_By"].ToString(); 
             // office = ds.Tables[0].Rows[0]["Office"].ToString();
             office= Queries.GetOfficeFromCountry(Session["ProfileID"].ToString());

            officeTextBox.Text= ds.Tables[0].Rows[0]["Office"].ToString();
              Session["ophid"] = ds.Tables[0].Rows[0]["Photo_identity"].ToString();
              Session["ocard"] = ds.Tables[0].Rows[0]["Card_Holder"].ToString();
	       	  companynameTextBox.Text= ds.Tables[0].Rows[0]["Company_Name"].ToString().ToUpper();


            //loading venuecountry on load
              DataSet ds1 = Queries.LoadProfileVenueCountry(Session["ProfileID"].ToString());
              VenueCountryDropDownList.DataSource = ds1;
              VenueCountryDropDownList.DataTextField = "Venue_Country_Name";
              VenueCountryDropDownList.DataValueField = "Venue_Country_Name";
              VenueCountryDropDownList.AppendDataBoundItems = true;
              VenueCountryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Venue_Country"].ToString(), ""));
              VenueCountryDropDownList.DataBind();

              //loading venue on load
              DataSet ds2 = Queries.LoadProfileVenue(Session["ProfileID"].ToString(), VenueCountryDropDownList.SelectedItem.Text );
              VenueDropDownList.DataSource = ds2;
              VenueDropDownList.DataTextField = "Venue_Name";
              VenueDropDownList.DataValueField = "Venue_Name";
              VenueDropDownList.AppendDataBoundItems = true;
              VenueDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Venue"].ToString(), ""));
              VenueDropDownList.DataBind();

            // loading venuegroup on load
            DataSet ds3 = Queries.LoadProfileVenueGroup(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);
              GroupVenueDropDownList.DataSource = ds3;
              GroupVenueDropDownList.DataTextField = "Venue_Group_Name";
              GroupVenueDropDownList.DataValueField = "Venue_Group_Name";
              GroupVenueDropDownList.AppendDataBoundItems = true;
              GroupVenueDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Group_Venue"].ToString(), ""));
              GroupVenueDropDownList.DataBind();

            //loading marketing program on load
            //DataSet ds4 = Queries.LoadProfileMktg(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
            //MarketingProgramDropDownList.DataSource = ds4;
            //MarketingProgramDropDownList.DataTextField = "Marketing_Program_Name";
            //MarketingProgramDropDownList.DataValueField = "Marketing_Program_Name";
            //MarketingProgramDropDownList.AppendDataBoundItems = true;
            //MarketingProgramDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString(), ""));
            //MarketingProgramDropDownList.DataBind();

            if (GroupVenueDropDownList.SelectedItem.Text == "Coldline" || GroupVenueDropDownList.SelectedItem.Text == "COLDLINE")
            {

                DataSet ds4 = Queries.LoadProfileMktg(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
                MarketingProgramDropDownList.DataSource = ds4;
                MarketingProgramDropDownList.DataTextField = "Marketing_Program_Name";
                MarketingProgramDropDownList.DataValueField = "Marketing_Program_Name";
                MarketingProgramDropDownList.AppendDataBoundItems = true;
                MarketingProgramDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString(), ""));
                MarketingProgramDropDownList.DataBind();
            }
            else
            {
                if (ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString() == "")
                {
                    DataSet ds4445 = Queries.LoadMarktOnCode(ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
                    MarketingProgramDropDownList.DataSource = ds4445;
                    MarketingProgramDropDownList.DataTextField = "Marketing_Program_Name";
                    MarketingProgramDropDownList.DataValueField = "Marketing_Program_abbrv";
                    MarketingProgramDropDownList.AppendDataBoundItems = true;
                    MarketingProgramDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString(), ""));
                    MarketingProgramDropDownList.DataBind();

                }
                else
                {
                    if (ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString() == "MBRMKT" && ds.Tables[0].Rows[0]["Lead_Source"].ToString() == "")
                    {
                        DataSet ds4 = Queries.LoadProfileMktg1(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
                        MarketingProgramDropDownList.DataSource = ds4;
                        MarketingProgramDropDownList.DataTextField = "Marketing_Program_Name";
                        MarketingProgramDropDownList.DataValueField = "Marketing_Program_abbrv";
                        MarketingProgramDropDownList.AppendDataBoundItems = true;
                        MarketingProgramDropDownList.Items.Insert(0, new ListItem("CANCELLED MEMBER", ""));
                    
                        MarketingProgramDropDownList.DataBind();
                    }
                    else if(ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString() == "MBRMKT" && ds.Tables[0].Rows[0]["Lead_Source"].ToString() == "MRG")
                    {
                        DataSet ds4 = Queries.LoadProfileMktg1(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
                        MarketingProgramDropDownList.DataSource = ds4;
                        MarketingProgramDropDownList.DataTextField = "Marketing_Program_Name";
                        MarketingProgramDropDownList.DataValueField = "Marketing_Program_abbrv";
                        MarketingProgramDropDownList.AppendDataBoundItems = true;
                        MarketingProgramDropDownList.Items.Insert(0, new ListItem("REVOKED MEMBER", ""));
                        MarketingProgramDropDownList.DataBind();
                    }
                    else if (ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString() == "MBRMKT" && ds.Tables[0].Rows[0]["Lead_Source"].ToString() == "WD")
                    {
                        DataSet ds4 = Queries.LoadProfileMktg1(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
                        MarketingProgramDropDownList.DataSource = ds4;
                        MarketingProgramDropDownList.DataTextField = "Marketing_Program_Name";
                        MarketingProgramDropDownList.DataValueField = "Marketing_Program_abbrv";
                        MarketingProgramDropDownList.AppendDataBoundItems = true;
                        MarketingProgramDropDownList.Items.Insert(0, new ListItem("EXPIRED WD", ""));
                        MarketingProgramDropDownList.DataBind();
                    }
                    else
                    {
                        DataSet ds444 = Queries.LoadMarktOnCode(ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
                        DataSet ds4 = Queries.LoadProfileMktg1(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text);
                        MarketingProgramDropDownList.DataSource = ds4;
                        MarketingProgramDropDownList.DataTextField = "Marketing_Program_Name";
                        MarketingProgramDropDownList.DataValueField = "Marketing_Program_abbrv";
                        MarketingProgramDropDownList.AppendDataBoundItems = true;
                        MarketingProgramDropDownList.Items.Insert(0, new ListItem(ds444.Tables[0].Rows[0]["Marketing_Program_Name"].ToString(), ""));
                        MarketingProgramDropDownList.DataBind();
                    }

                   
                }

            }


            // loading agents on load as per venue group
            if (GroupVenueDropDownList.SelectedItem.Text == "Coldline")
            {
                //     DataSet ds5 = Queries.LoadProfileAgent(ProfileID);
                DataSet ds5 = Queries.LoadProfileAgent1(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);
                AgentDropDownList.DataSource = ds5;
                AgentDropDownList.DataTextField = "agentname";
                AgentDropDownList.DataValueField = "agentname";
                AgentDropDownList.AppendDataBoundItems = true;
                AgentDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Agent"].ToString(), ""));
                AgentDropDownList.DataBind();


            }
            else
            {
                DataSet ds5 = Queries.LoadProfileAgentNotColdline(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);
                AgentDropDownList.DataSource = ds5;
                AgentDropDownList.DataTextField = "Sales_Rep_Name";
                AgentDropDownList.DataValueField = "Sales_Rep_Name";
                AgentDropDownList.AppendDataBoundItems = true;
                AgentDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Agent"].ToString(), ""));
                AgentDropDownList.DataBind();



            }

            // loading To name on load as per venue group
            if (GroupVenueDropDownList.SelectedItem.Text == "Coldline"|| GroupVenueDropDownList.SelectedItem.Text == "COLDLINE")
            {
                // load to11
                DataSet ds5aa = Queries.LoadTOOPCOnVenue11(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);
                TONameDropDownList.DataSource = ds5aa;
                TONameDropDownList.DataTextField = "to_name";
                TONameDropDownList.DataValueField = "to_name";
                TONameDropDownList.AppendDataBoundItems = true;
                TONameDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Agent_Code"].ToString(), ""));
                TONameDropDownList.DataBind();


            }
            else
            {
                // load to12
                DataSet ds5aa = Queries.LoadTOOPCOnVenue12(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);
                TONameDropDownList.DataSource = ds5aa;
                TONameDropDownList.DataTextField = "TO_Manager_Name";
                TONameDropDownList.DataValueField = "TO_Manager_Name";
                TONameDropDownList.AppendDataBoundItems = true;
                TONameDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Agent_Code"].ToString(), ""));
                TONameDropDownList.DataBind();



            }

           




            DataSet dsmg = Queries.LoadProfileManager(Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);
            ManagerDropDownList.DataSource = dsmg;
            ManagerDropDownList.DataTextField = "Manager_Name";
            ManagerDropDownList.DataValueField = "Manager_Name";
            ManagerDropDownList.AppendDataBoundItems = true;
            ManagerDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["manager"].ToString(), ""));
            ManagerDropDownList.DataBind();

 
                if (MarketingProgramDropDownList.SelectedItem.Text=="T/S MEMBER"|| MarketingProgramDropDownList.SelectedItem.Text == "T/S MEMBER RCI" ||MarketingProgramDropDownList.SelectedItem.Text == "FRACTIONAL OWNER"|| MarketingProgramDropDownList.SelectedItem.Text == "FRACTIONAL OWNER RCI"|| MarketingProgramDropDownList.SelectedItem.Text =="Owner" || MarketingProgramDropDownList.SelectedItem.Text == "OWNER"|| MarketingProgramDropDownList.SelectedItem.Text == "Member" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER")
            {
                // loadprofilememebertype
                DataSet dsmgs = Queries.LoadProfileMemberType(Session["ProfileID"].ToString());
                MemType1DropDownList.DataSource = dsmgs;
                MemType1DropDownList.DataTextField = "Member_Type_Name";
                MemType1DropDownList.DataValueField = "Member_Type_Name";
                MemType1DropDownList.AppendDataBoundItems = true;
                MemType1DropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Member_Type1"].ToString(), ""));
                MemType1DropDownList.DataBind();


                Memno1TextBox.Text = ds.Tables[0].Rows[0]["Profile_Member_Number1"].ToString();

                // load profiletype
                DataSet dsmgss = Queries.LoadProfileType(Session["ProfileID"].ToString());
                TypeDropDownList.DataSource = dsmgss;
                TypeDropDownList.DataTextField = "Type_Name";
                TypeDropDownList.DataValueField = "Type_Name";
                TypeDropDownList.AppendDataBoundItems = true;
                TypeDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Member_Number1"].ToString(), ""));
                TypeDropDownList.DataBind();
            }
            else
            {
                // profilemembertype
                DataSet dsmgs = Queries.LoadProfileMemberType(Session["ProfileID"].ToString());
                MemType1DropDownList.DataSource = dsmgs;
                MemType1DropDownList.DataTextField = "Member_Type_Name";
                MemType1DropDownList.DataValueField = "Member_Type_Name";
                MemType1DropDownList.AppendDataBoundItems = true;
                MemType1DropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Member_Type1"].ToString(), ""));
                MemType1DropDownList.DataBind();
                // load profiletype
                DataSet dsmgss = Queries.LoadProfileType(Session["ProfileID"].ToString());
                TypeDropDownList.DataSource = dsmgss;
                TypeDropDownList.DataTextField = "Type_Name";
                TypeDropDownList.DataValueField = "Type_Name";
                TypeDropDownList.AppendDataBoundItems = true;
                TypeDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Member_Number1"].ToString(), ""));
                TypeDropDownList.DataBind();


            }

            // new code added by gaurav //
            DataSet dsLead = Queries.onLoadLeadOffice(Session["ProfileID"].ToString());
            LeadOfficeDropDownList.DataSource = dsLead;
            LeadOfficeDropDownList.DataTextField = "Office";
            LeadOfficeDropDownList.DataValueField = "Office";
            LeadOfficeDropDownList.AppendDataBoundItems = true;
           
            LeadOfficeDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["leadOffice"].ToString(), ""));
            LeadOfficeDropDownList.DataBind();
            //--//


            // new code added by gaurav //
            DataSet  dsSubVenue = Queries.onLoadSubVenue(VenueDropDownList.SelectedItem.Text, GroupVenueDropDownList.SelectedItem.Text, Session["ProfileID"].ToString());
            SubVenueDropDownList.DataSource = dsSubVenue;
            SubVenueDropDownList.DataTextField = "SVenue_India_Name";
            SubVenueDropDownList.DataValueField = "SVenue_India_Name";
            SubVenueDropDownList.AppendDataBoundItems = true;
            SubVenueDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["SubVenue"].ToString(), ""));
            SubVenueDropDownList.DataBind();
            //--//

            DataSet dsptitle = Queries.LoadPrimarySalutation(Session["ProfileID"].ToString(), office);
            PrimaryTitleDropDownList.DataSource = dsptitle;
            PrimaryTitleDropDownList.DataTextField = "Salutation";
            PrimaryTitleDropDownList.DataValueField = "Salutation";
            PrimaryTitleDropDownList.AppendDataBoundItems = true;
            PrimaryTitleDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Primary_Title"].ToString(), ""));
            PrimaryTitleDropDownList.DataBind();
                
            pfnameTextBox.Text = ds.Tables[0].Rows[0]["Profile_Primary_Fname"].ToString();
            plnameTextBox.Text = ds.Tables[0].Rows[0]["Profile_Primary_Lname"].ToString();
            primarydobdatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Primary_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Primary_DOB"].ToString()).ToString("yyyy-MM-dd");
            primaryAge.Text = ds.Tables[0].Rows[0]["Primary_Age"].ToString();
            pdesginationTextBox.Text = ds.Tables[0].Rows[0]["Primary_Designation"].ToString();


            DataSet dspnationality = Queries.LoadPrimaryNationality(Session["ProfileID"].ToString());
            PrimarynationalityDropDownList.DataSource = dspnationality;
            PrimarynationalityDropDownList.DataTextField = "Nationality_Name";
            PrimarynationalityDropDownList.DataValueField = "Nationality_Name";
            PrimarynationalityDropDownList.AppendDataBoundItems = true;
            PrimarynationalityDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Primary_Nationality"].ToString(), ""));
            PrimarynationalityDropDownList.DataBind();

            DataSet dspcountry = Queries.LoadCountryPrimary(Session["ProfileID"].ToString());
            primarycountryDropDownList.DataSource = dspcountry;
            primarycountryDropDownList.DataTextField = "country_name";
            primarycountryDropDownList.DataValueField = "country_name";
            primarycountryDropDownList.AppendDataBoundItems = true;
            primarycountryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Primary_Country"].ToString(), ""));
            primarycountryDropDownList.DataBind();

           

            pemailTextBox.Text = ds.Tables[0].Rows[0]["Primary_Email"].ToString();
            pemail2TextBox.Text = ds.Tables[0].Rows[0]["Primary_Email2"].ToString();

            DataSet dspm = Queries.LoadCountryWithCodePrimaryMobile(Session["ProfileID"].ToString());
            primarymobileDropDownList.DataSource = dspm;
            primarymobileDropDownList.DataTextField = "name";
            primarymobileDropDownList.DataValueField = "name";
            primarymobileDropDownList.AppendDataBoundItems = true;
            primarymobileDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Primary_CC"].ToString(), ""));
            primarymobileDropDownList.DataBind();                     
            
            pmobileTextBox.Text = ds.Tables[0].Rows[0]["Primary_Mobile"].ToString();

            DataSet dspalt = Queries.LoadCountryWithCodePrimaryAlt(ds.Tables[0].Rows[0]["Profile_Primary_Country"].ToString());//( ProfileID);
            primaryalternateDropDownList.DataSource = dspalt;
            primaryalternateDropDownList.DataTextField = "name";
            primaryalternateDropDownList.DataValueField = "name";
            primaryalternateDropDownList.AppendDataBoundItems = true;
            primaryalternateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Primary_Alt_CC"].ToString(), ""));
            primaryalternateDropDownList.DataBind();                      
            palternateTextBox.Text = ds.Tables[0].Rows[0]["Primary_Alternate"].ToString();

            DataSet dspoff = Queries.LoadCountryWithCodePrimaryOffice(ds.Tables[0].Rows[0]["Profile_Primary_Country"].ToString());//(ProfileID);
            pofficecodeDropDownList.DataSource = dspoff;
            pofficecodeDropDownList.DataTextField = "name";
            pofficecodeDropDownList.DataValueField = "name";
            pofficecodeDropDownList.AppendDataBoundItems = true;
            pofficecodeDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Primary_office_cc"].ToString(), ""));
            pofficecodeDropDownList.DataBind();
            pofficenoTextBox.Text = ds.Tables[0].Rows[0]["Primary_office_num"].ToString();

            DataSet dsphome = Queries.LoadCountryWithCodePrimaryOffice(ds.Tables[0].Rows[0]["Profile_Primary_Country"].ToString());//(ProfileID);
            phomecodeDropDownList.DataSource = dsphome;
            phomecodeDropDownList.DataTextField = "name";
            phomecodeDropDownList.DataValueField = "name";
            phomecodeDropDownList.AppendDataBoundItems = true;
            phomecodeDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Primary_home_cc"].ToString(), ""));
            phomecodeDropDownList.DataBind();
            phomenoTextBox.Text = ds.Tables[0].Rows[0]["Primary_home_num"].ToString();



            //secondary details
            DataSet dsstitle = Queries.LoadSecondarySalutation(Session["ProfileID"].ToString(), office);
            secondarytitleDropDownList.DataSource = dsstitle;
            secondarytitleDropDownList.DataTextField = "Salutation";
            secondarytitleDropDownList.DataValueField = "Salutation";
            secondarytitleDropDownList.AppendDataBoundItems = true;
            secondarytitleDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_secondary_Title"].ToString(), ""));
            secondarytitleDropDownList.DataBind();

            sfnameTextBox.Text = ds.Tables[0].Rows[0]["Profile_secondary_Fname"].ToString();
            slnameTextBox.Text = ds.Tables[0].Rows[0]["Profile_secondary_Lname"].ToString();
            secondarydobdatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_secondary_DOB"]);            
            secondaryAge.Text = ds.Tables[0].Rows[0]["Secondary_Age"].ToString();
            sdesignationTextBox.Text = ds.Tables[0].Rows[0]["Secondary_Designation"].ToString();

            DataSet dssnationality = Queries.LoadSecondaryNationality(Session["ProfileID"].ToString());
            secondarynationalityDropDownList.DataSource = dssnationality;
            secondarynationalityDropDownList.DataTextField = "Nationality_Name";
            secondarynationalityDropDownList.DataValueField = "Nationality_Name";
            secondarynationalityDropDownList.AppendDataBoundItems = true;
            secondarynationalityDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_secondary_Nationality"].ToString(), ""));
            secondarynationalityDropDownList.DataBind();

            DataSet dsscountry = Queries.LoadCountrySecondary(Session["ProfileID"].ToString());
            secondarycountryDropDownList.DataSource = dsscountry;
            secondarycountryDropDownList.DataTextField = "country_name";
            secondarycountryDropDownList.DataValueField = "country_name";
            secondarycountryDropDownList.AppendDataBoundItems = true;
            secondarycountryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_secondary_Country"].ToString(), ""));
            secondarycountryDropDownList.DataBind();



            semailTextBox.Text = ds.Tables[0].Rows[0]["secondary_Email"].ToString();
            semail2TextBox.Text = ds.Tables[0].Rows[0]["secondary_Email2"].ToString();

            DataSet dssm = Queries.LoadCountryWithCodeSecondaryMobile(ds.Tables[0].Rows[0]["Profile_secondary_Country"].ToString());//(ProfileID);
            secondarymobileDropDownList.DataSource = dssm;
            secondarymobileDropDownList.DataTextField = "name";
            secondarymobileDropDownList.DataValueField = "name";
            secondarymobileDropDownList.AppendDataBoundItems = true;
            secondarymobileDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["secondary_CC"].ToString(), ""));
            secondarymobileDropDownList.DataBind();

            smobileTextBox.Text = ds.Tables[0].Rows[0]["secondary_Mobile"].ToString();

            DataSet dssalt = Queries.LoadCountryWithCodeSecondaryAlt(ds.Tables[0].Rows[0]["Profile_secondary_Country"].ToString());//(ProfileID);
            secondaryalternateDropDownList.DataSource = dssalt;
            secondaryalternateDropDownList.DataTextField = "name";
            secondaryalternateDropDownList.DataValueField = "name";
            secondaryalternateDropDownList.AppendDataBoundItems = true;
            secondaryalternateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["secondary_Alt_CC"].ToString(), ""));
            secondaryalternateDropDownList.DataBind();
            salternateTextBox.Text = ds.Tables[0].Rows[0]["secondary_Alternate"].ToString();


            DataSet dssoff = Queries.LoadCountryWithCodeSecondaryAlt(ds.Tables[0].Rows[0]["Profile_secondary_Country"].ToString());//(ProfileID);
            sofficecodeDropDownList.DataSource = dssoff;
            sofficecodeDropDownList.DataTextField = "name";
            sofficecodeDropDownList.DataValueField = "name";
            sofficecodeDropDownList.AppendDataBoundItems = true;
            sofficecodeDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Secondary_office_cc"].ToString(), ""));
            sofficecodeDropDownList.DataBind();
            sofficenoTextBox.Text = ds.Tables[0].Rows[0]["Secondary_office_num"].ToString();


            DataSet dsshome = Queries.LoadCountryWithCodeSecondaryAlt(ds.Tables[0].Rows[0]["Profile_secondary_Country"].ToString());//(ProfileID);
            shomecodeDropDownList.DataSource = dssoff;
            shomecodeDropDownList.DataTextField = "name";
            shomecodeDropDownList.DataValueField = "name";
            shomecodeDropDownList.AppendDataBoundItems = true;
            shomecodeDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Secondary_home_cc"].ToString(), ""));
            shomecodeDropDownList.DataBind();
            shomenoTextBox.Text = ds.Tables[0].Rows[0]["Secondary_home_num"].ToString();

            //address
            address1TextBox.Text = ds.Tables[0].Rows[0]["Profile_Address_Line1"].ToString();
            address2TextBox.Text = ds.Tables[0].Rows[0]["Profile_Address_Line2"].ToString();
            //stateTextBox.Text = ds.Tables[0].Rows[0]["Profile_Address_State"].ToString();
            cityTextBox.Text = ds.Tables[0].Rows[0]["Profile_Address_city"].ToString();
            pincodeTextBox.Text = ds.Tables[0].Rows[0]["Profile_Address_Postcode"].ToString();
            livingyrsTextBox.Text = ds.Tables[0].Rows[0]["Profile_NOY_Living_as_couple"].ToString();

            DataSet ds12 = Queries.LoadCountryName();
            AddCountryDropDownList.DataSource = ds12;
            AddCountryDropDownList.DataTextField = "country_name";
            AddCountryDropDownList.DataValueField = "country_name";
            AddCountryDropDownList.AppendDataBoundItems = true;
            AddCountryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Address_Country"].ToString(), ""));
            AddCountryDropDownList.DataBind();

            ccountryDropDownList.DataSource = ds12;
            ccountryDropDownList.DataTextField = "country_name";
            ccountryDropDownList.DataValueField = "country_name";
            ccountryDropDownList.AppendDataBoundItems = true;
            ccountryDropDownList.Items.Insert(0, new ListItem("", ""));
            ccountryDropDownList.DataBind();

            //state Name
            DataSet ds1222 = Queries.LoadStateName(Session["ProfileID"].ToString(), AddCountryDropDownList.SelectedItem.Text);
            StateDropDownList.DataSource = ds1222;
            StateDropDownList.DataTextField = "State_Name";
            StateDropDownList.DataValueField = "State_Name";
            StateDropDownList.AppendDataBoundItems = true;
            StateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Address_State"].ToString(), ""));
            StateDropDownList.DataBind();

            DataSet dsemploy= Queries.LoadEmploymentStatusNotInProfile(Session["ProfileID"].ToString());
            employmentstatusDropDownList.DataSource = dsemploy;
            employmentstatusDropDownList.DataTextField = "Name";
            employmentstatusDropDownList.DataValueField = "Name";
            employmentstatusDropDownList.AppendDataBoundItems = true;
            employmentstatusDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Employment_status"].ToString(), ""));
            employmentstatusDropDownList.DataBind();


            DataSet dsmart = Queries.LoadMaritalStatusNotInProfile(Session["ProfileID"].ToString());
            maritalstatusDropDownList.DataSource = dsmart;
            maritalstatusDropDownList.DataTextField = "MaritalStatus";
            maritalstatusDropDownList.DataValueField = "MaritalStatus";
            maritalstatusDropDownList.AppendDataBoundItems = true;
            maritalstatusDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Profile_Marital_status"].ToString(), ""));
            maritalstatusDropDownList.DataBind();
                     


            DataSet dssp1title = Queries.LoadSub_Profile1Salutation(Session["ProfileID"].ToString(), office);
            sp1titleDropDownList.DataSource = dssp1title;
            sp1titleDropDownList.DataTextField = "Salutation";
            sp1titleDropDownList.DataValueField = "Salutation";
            sp1titleDropDownList.AppendDataBoundItems = true;
            sp1titleDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile1_Title"].ToString(), ""));
            sp1titleDropDownList.DataBind();

            sp1fnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile1_Fname"].ToString();
            sp1lnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile1_Lname"].ToString();

            //secondarydobdatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_secondary_DOB"]);

            sp1dobdatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile1_DOB"]);// Convert.ToDateTime( ds.Tables[0].Rows[0]["Sub_Profile1_DOB"].ToString()).ToString("yyyy-MM-dd");
            subProfile1Age.Text = ds.Tables[0].Rows[0]["Sub_Profile1_Age"].ToString();

            DataSet dssp1nationality = Queries.LoadSub_Profile1Nationality(Session["ProfileID"].ToString());  
            sp1nationalityDropDownList.DataSource = dssp1nationality;
            sp1nationalityDropDownList.DataTextField = "Nationality_Name";
            sp1nationalityDropDownList.DataValueField = "Nationality_Name";
            sp1nationalityDropDownList.AppendDataBoundItems = true;
            sp1nationalityDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile1_Nationality"].ToString(), ""));
            sp1nationalityDropDownList.DataBind();

            DataSet dssp1country = Queries.LoadCountrySP1(Session["ProfileID"].ToString());
            sp1countryDropDownList.DataSource = dssp1country;
            sp1countryDropDownList.DataTextField = "country_name";
            sp1countryDropDownList.DataValueField = "country_name";
            sp1countryDropDownList.AppendDataBoundItems = true;
            sp1countryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile1_Country"].ToString(), ""));
            sp1countryDropDownList.DataBind();



            sp1pemailTextBox.Text = ds.Tables[0].Rows[0]["Subprofile1_Email"].ToString();
            sp1pemail2TextBox.Text = ds.Tables[0].Rows[0]["Subprofile1_Email2"].ToString();

            DataSet dssp1m = Queries.LoadCountryWithCodeSP1Mobile(ds.Tables[0].Rows[0]["Sub_Profile1_Country"].ToString());//(ProfileID);
            sp1mobileDropDownList.DataSource = dssp1m;
            sp1mobileDropDownList.DataTextField = "name";
            sp1mobileDropDownList.DataValueField = "name";
            sp1mobileDropDownList.AppendDataBoundItems = true;
            sp1mobileDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile1_CC"].ToString(), ""));
            sp1mobileDropDownList.DataBind();

            sp1mobileTextBox.Text = ds.Tables[0].Rows[0]["Subprofile1_Mobile"].ToString();

            DataSet dssp1alt = Queries.LoadCountryWithCodeSP1Alt(ds.Tables[0].Rows[0]["Sub_Profile1_Country"].ToString());//(ProfileID);
            sp1alternateDropDownList.DataSource = dssp1alt;
            sp1alternateDropDownList.DataTextField = "name";
            sp1alternateDropDownList.DataValueField = "name";
            sp1alternateDropDownList.AppendDataBoundItems = true;
            sp1alternateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile1_Alt_CC"].ToString(), ""));
            sp1alternateDropDownList.DataBind();
            sp1alternateTextBox.Text = ds.Tables[0].Rows[0]["Subprofile1_Alternate"].ToString();



            DataSet dssp2title = Queries.LoadSub_Profile2Salutation(Session["ProfileID"].ToString(), office);
            sp2titleDropDownList.DataSource = dssp2title;
            sp2titleDropDownList.DataTextField = "Salutation";
            sp2titleDropDownList.DataValueField = "Salutation";
            sp2titleDropDownList.AppendDataBoundItems = true;
            sp2titleDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile2_Title"].ToString(), ""));
            sp2titleDropDownList.DataBind();

            sp2fnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile2_Fname"].ToString();
            sp2lnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile2_Lname"].ToString();
            sp2dobdatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile2_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile2_DOB"].ToString()).ToString("yyyy-MM-dd");
            subProfile2Age.Text = ds.Tables[0].Rows[0]["Sub_Profile2_Age"].ToString();

            DataSet dssp2nationality = Queries.LoadSub_Profile2Nationality(Session["ProfileID"].ToString());
            sp2nationalityDropDownList.DataSource = dssp2nationality;
            sp2nationalityDropDownList.DataTextField = "Nationality_Name";
            sp2nationalityDropDownList.DataValueField = "Nationality_Name";
            sp2nationalityDropDownList.AppendDataBoundItems = true;
            sp2nationalityDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile2_Nationality"].ToString(), ""));
            sp2nationalityDropDownList.DataBind();

            DataSet dssp2country = Queries.LoadCountrySP2(Session["ProfileID"].ToString());
            sp2countryDropDownList.DataSource = dssp2country;
            sp2countryDropDownList.DataTextField = "country_name";
            sp2countryDropDownList.DataValueField = "country_name";
            sp2countryDropDownList.AppendDataBoundItems = true;
            sp2countryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile2_Country"].ToString(), ""));
            sp2countryDropDownList.DataBind();
            sp2pemailTextBox.Text = ds.Tables[0].Rows[0]["Subprofile2_Email"].ToString();
            sp2pemail2TextBox.Text = ds.Tables[0].Rows[0]["Subprofile2_Email2"].ToString();

            DataSet dssp2m = Queries.LoadCountryWithCodeSP2Mobile(ds.Tables[0].Rows[0]["Sub_Profile2_Country"].ToString());//(ProfileID);
            sp2mobileDropDownList.DataSource = dssp2m;
            sp2mobileDropDownList.DataTextField = "name";
            sp2mobileDropDownList.DataValueField = "name";
            sp2mobileDropDownList.AppendDataBoundItems = true;
            sp2mobileDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile2_CC"].ToString(), ""));
            sp2mobileDropDownList.DataBind();

            sp2mobileTextBox.Text = ds.Tables[0].Rows[0]["Subprofile2_Mobile"].ToString();

            DataSet dssp2alt = Queries.LoadCountryWithCodeSP2Alt(ds.Tables[0].Rows[0]["Sub_Profile2_Country"].ToString());//(ProfileID);
            sp2alternateDropDownList.DataSource = dssp2alt;
            sp2alternateDropDownList.DataTextField = "name";
            sp2alternateDropDownList.DataValueField = "name";
            sp2alternateDropDownList.AppendDataBoundItems = true;
            sp2alternateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile2_Alt_CC"].ToString(), ""));
            sp2alternateDropDownList.DataBind();
            sp2alternateTextBox.Text = ds.Tables[0].Rows[0]["Subprofile2_Alternate"].ToString();



            //sub profile 3///
            DataSet dssp3title = Queries.LoadSub_Profile3Salutation(Session["ProfileID"].ToString(), office);
            sp3titleDropDownList.DataSource = dssp3title;
            sp3titleDropDownList.DataTextField = "Salutation";
            sp3titleDropDownList.DataValueField = "Salutation";
            sp3titleDropDownList.AppendDataBoundItems = true;
            sp3titleDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile3_Title"].ToString(), ""));
            sp3titleDropDownList.DataBind();

            sp3fnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile3_Fname"].ToString();
            sp3lnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile3_Lname"].ToString();
           
                sp3dobdatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile3_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile3_DOB"].ToString()).ToString("yyyy-MM-dd");
            
            subProfile3Age.Text = ds.Tables[0].Rows[0]["Sub_Profile3_Age"].ToString();

            DataSet dssp3nationality = Queries.LoadSub_Profile3Nationality(Session["ProfileID"].ToString());
            sp3nationalityDropDownList.DataSource = dssp3nationality;
            sp3nationalityDropDownList.DataTextField = "Nationality_Name";
            sp3nationalityDropDownList.DataValueField = "Nationality_Name";
            sp3nationalityDropDownList.AppendDataBoundItems = true;
            sp3nationalityDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile3_Nationality"].ToString(), ""));
            sp3nationalityDropDownList.DataBind();

            DataSet dssp3country = Queries.LoadCountrySP3(Session["ProfileID"].ToString());
            sp3countryDropDownList.DataSource = dssp3country;
            sp3countryDropDownList.DataTextField = "country_name";
            sp3countryDropDownList.DataValueField = "country_name";
            sp3countryDropDownList.AppendDataBoundItems = true;
            sp3countryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile3_Country"].ToString(), ""));
            sp3countryDropDownList.DataBind();
            sp3pemailTextBox.Text = ds.Tables[0].Rows[0]["Subprofile3_Email"].ToString();
            sp3pemail2TextBox.Text = ds.Tables[0].Rows[0]["Subprofile3_Email2"].ToString();

            DataSet dssp3m = Queries.LoadCountryWithCodeSP3Mobile(ds.Tables[0].Rows[0]["Sub_Profile3_Country"].ToString());//(ProfileID);
            sp3mobileDropDownList.DataSource = dssp3m;
            sp3mobileDropDownList.DataTextField = "name";
            sp3mobileDropDownList.DataValueField = "name";
            sp3mobileDropDownList.AppendDataBoundItems = true;
            sp3mobileDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile3_CC"].ToString(), ""));
            sp3mobileDropDownList.DataBind();

            sp3mobileTextBox.Text = ds.Tables[0].Rows[0]["Subprofile3_Mobile"].ToString();

            DataSet dssp3alt = Queries.LoadCountryWithCodeSP3Alt(ds.Tables[0].Rows[0]["Sub_Profile3_Country"].ToString());//(ProfileID);
            sp3alternateDropDownList.DataSource = dssp3alt;
            sp3alternateDropDownList.DataTextField = "name";
            sp3alternateDropDownList.DataValueField = "name";
            sp3alternateDropDownList.AppendDataBoundItems = true;
            sp3alternateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile3_Alt_CC"].ToString(), ""));
            sp3alternateDropDownList.DataBind();
            sp3alternateTextBox.Text = ds.Tables[0].Rows[0]["Subprofile3_Alternate"].ToString();
            // end//


            //// sub profile 4//
            DataSet dssp4title = Queries.LoadSub_Profile4Salutation(Session["ProfileID"].ToString(), office);
            sp4titleDropDownList.DataSource = dssp4title;
            sp4titleDropDownList.DataTextField = "Salutation";
            sp4titleDropDownList.DataValueField = "Salutation";
            sp4titleDropDownList.AppendDataBoundItems = true;
            sp4titleDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile4_Title"].ToString(), ""));
            sp4titleDropDownList.DataBind();

            sp4fnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile4_Fname"].ToString();
            sp4lnameTextBox.Text = ds.Tables[0].Rows[0]["Sub_Profile4_Lname"].ToString();
          
                sp4dobdatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile4_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile4_DOB"].ToString()).ToString("yyyy-MM-dd");
            
            subProfile4Age.Text = ds.Tables[0].Rows[0]["Sub_Profile4_Age"].ToString();

            DataSet dssp4nationality = Queries.LoadSub_Profile4Nationality(Session["ProfileID"].ToString());
            sp4nationalityDropDownList.DataSource = dssp4nationality;
            sp4nationalityDropDownList.DataTextField = "Nationality_Name";
            sp4nationalityDropDownList.DataValueField = "Nationality_Name";
            sp4nationalityDropDownList.AppendDataBoundItems = true;
            sp4nationalityDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile4_Nationality"].ToString(), ""));
            sp4nationalityDropDownList.DataBind();


            DataSet dssp4country = Queries.LoadCountrySP4(Session["ProfileID"].ToString());
            sp4countryDropDownList.DataSource = dssp4country;
            sp4countryDropDownList.DataTextField = "country_name";
            sp4countryDropDownList.DataValueField = "country_name";
            sp4countryDropDownList.AppendDataBoundItems = true;
            sp4countryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Sub_Profile4_Country"].ToString(), ""));
            sp4countryDropDownList.DataBind();
            sp4pemailTextBox.Text = ds.Tables[0].Rows[0]["Subprofile4_Email"].ToString();
            sp4pemail2TextBox.Text = ds.Tables[0].Rows[0]["Subprofile4_Email2"].ToString();

            DataSet dssp4m = Queries.LoadCountryWithCodeSP4Mobile(ds.Tables[0].Rows[0]["Sub_Profile4_Country"].ToString());//(ProfileID);
            sp4mobileDropDownList.DataSource = dssp4m;
            sp4mobileDropDownList.DataTextField = "name";
            sp4mobileDropDownList.DataValueField = "name";
            sp4mobileDropDownList.AppendDataBoundItems = true;
            sp4mobileDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile4_CC"].ToString(), ""));
            sp4mobileDropDownList.DataBind();

            sp4mobileTextBox.Text = ds.Tables[0].Rows[0]["Subprofile4_Mobile"].ToString();


            DataSet dssp4alt = Queries.LoadCountryWithCodeSP4Alt(ds.Tables[0].Rows[0]["Sub_Profile4_Country"].ToString());//(ProfileID);
            sp4alternateDropDownList.DataSource = dssp4alt;
            sp4alternateDropDownList.DataTextField = "name";
            sp4alternateDropDownList.DataValueField = "name";
            sp4alternateDropDownList.AppendDataBoundItems = true;
            sp4alternateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Subprofile4_Alt_CC"].ToString(), ""));
            sp4alternateDropDownList.DataBind();
            sp4alternateTextBox.Text = ds.Tables[0].Rows[0]["Subprofile4_Alternate"].ToString();
            ////end//
           
            DataSet dsss = Queries.LoadGift(Session["ProfileID"].ToString());


            if (dsss.Tables[0].Rows.Count == 0)
            {

            }
            else
            {
                TextBox13.Text = dsss.Tables[0].Rows[0]["Gift_Voucher_numb"].ToString();
                TextBox22 .Text = dsss.Tables[0].Rows[0]["Gift_Comment"].ToString();
            }
            
            resortTextBox.Text= ds.Tables[0].Rows[0]["Profile_Stay_Resort_Name"].ToString();
            roomnoTextBox.Text = ds.Tables[0].Rows[0]["Profile_Stay_Resort_Room_Number"].ToString();
            arrivaldatedatepicker.Text = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Stay_Arrival_Date"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Stay_Arrival_Date"]).ToShortDateString();
            departuredatedatepicker.Text= String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Stay_Departure_Date"]);// Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Stay_Departure_Date"]).ToShortDateString();
            tourdatedatepicker.Text =  Convert.ToDateTime(ds.Tables[0].Rows[0]["Tour_Details_Tour_Date"]).ToShortDateString();
            Session["oTour_Details_Tour_Date"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Tour_Details_Tour_Date"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Tour_Details_Tour_Date"].ToString()).ToString("yyyy-MM-dd");
           
            timeinTextBox.Text = ds.Tables[0].Rows[0]["Tour_Details_Sales_Deck_Check_In"].ToString();
            timeoutTextBox.Text = ds.Tables[0].Rows[0]["Tour_Details_Sales_Deck_Check_Out"].ToString();
            inpriceTextBox.Text = ds.Tables[0].Rows[0]["Tour_Details_Taxi_In_Price"].ToString();
            inrefTextBox.Text = ds.Tables[0].Rows[0]["Tour_Details_Taxi_In_Ref"].ToString();
            outpriceTextBox.Text= ds.Tables[0].Rows[0]["Tour_Details_Taxi_Out_Price"].ToString();
            outrefTextBox.Text = ds.Tables[0].Rows[0]["Tour_Details_Taxi_Out_Ref"].ToString();
            commentsTextBox.Text= ds.Tables[0].Rows[0]["Comments"].ToString();
	        comment2.Text= ds.Tables[0].Rows[0]["comment2"].ToString();

            cadd1TextBox.Text= ds.Tables[0].Rows[0]["Address_Line1"].ToString();
            cadd2TextBox.Text= ds.Tables[0].Rows[0]["Address_Line2"].ToString();
            DataSet dscor12 = Queries.LoadCountryName();
            ccountryDropDownList.DataSource = dscor12;
            ccountryDropDownList.DataTextField = "country_name";
            ccountryDropDownList.DataValueField = "country_name";
            ccountryDropDownList.AppendDataBoundItems = true;
            ccountryDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Address_Country"].ToString(), ""));
            ccountryDropDownList.DataBind();


            DataSet dscor1222 = Queries.LoadStateName(Session["ProfileID"].ToString(), ccountryDropDownList.SelectedItem.Text);
            cstateDropDownList.DataSource = dscor1222;
            cstateDropDownList.DataTextField = "State_Name";
            cstateDropDownList.DataValueField = "State_Name";
            cstateDropDownList.AppendDataBoundItems = true;
            cstateDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Address_State"].ToString(), ""));
            cstateDropDownList.DataBind();

            ccityTextBox.Text= ds.Tables[0].Rows[0]["Address_city"].ToString();
            cpincodeTextBox.Text = ds.Tables[0].Rows[0]["Address_Postcode"].ToString();


            Session["oProfile_Venue_Country"] = ds.Tables[0].Rows[0]["Profile_Venue_Country"].ToString();
            Session["oProfile_Venue"] = ds.Tables[0].Rows[0]["Profile_Venue"].ToString();
            Session["oProfile_Group_Venue"] = ds.Tables[0].Rows[0]["Profile_Group_Venue"].ToString();
            Session["oProfile_Marketing_Program"] = ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString();
            Session["oProfile_Agent"] = ds.Tables[0].Rows[0]["Profile_Agent"].ToString();
            Session["oProfile_Agent_Code"] = ds.Tables[0].Rows[0]["Profile_Agent_Code"].ToString();
            Session["oProfile_Member_Type1"] = ds.Tables[0].Rows[0]["Profile_Member_Type1"].ToString();
            Session["oProfile_Member_Number1"] = ds.Tables[0].Rows[0]["Profile_Member_Number1"].ToString();
            Session["oProfile_Member_Type2"] = ds.Tables[0].Rows[0]["Profile_Member_Type2"].ToString();
            Session["oProfile_Member_Number2"] = ds.Tables[0].Rows[0]["Profile_Member_Number2"].ToString();
            Session["oProfile_Employment_status"] = ds.Tables[0].Rows[0]["Profile_Employment_status"].ToString();
            Session["oProfile_Marital_status"] = ds.Tables[0].Rows[0]["Profile_Marital_status"].ToString();
            Session["oProfile_NOY_Living_as_couple"] = ds.Tables[0].Rows[0]["Profile_NOY_Living_as_couple"].ToString();
            Session["oOffice"] = ds.Tables[0].Rows[0]["Office"].ToString();
            Session["oComments"] = ds.Tables[0].Rows[0]["Comments"].ToString();
            Session["ocomment2"] = ds.Tables[0].Rows[0]["comment2"].ToString();
            Session["oManager"] = ds.Tables[0].Rows[0]["Manager"].ToString();

            Session["oProfile_Primary_Title"] = ds.Tables[0].Rows[0]["Profile_Primary_Title"].ToString();
            Session["oProfile_Primary_Fname"] = ds.Tables[0].Rows[0]["Profile_Primary_Fname"].ToString();
            Session["oProfile_Primary_Lname"] = ds.Tables[0].Rows[0]["Profile_Primary_Lname"].ToString();
            Session["oProfile_Primary_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Primary_DOB"]);// Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Primary_DOB"].ToString()).ToString("yyyy-MM-dd");
            Session["oProfile_Primary_Nationality"] = ds.Tables[0].Rows[0]["Profile_Primary_Nationality"].ToString();
            Session["oProfile_Primary_Country"] = ds.Tables[0].Rows[0]["Profile_Primary_Country"].ToString();
            Session["opage"] = ds.Tables[0].Rows[0]["Primary_Age"].ToString();
            Session["opdesignation"] = ds.Tables[0].Rows[0]["Primary_Designation"].ToString();
            Session["oplang"] = ds.Tables[0].Rows[0]["Primary_Language"].ToString();

            Session["oProfile_Secondary_Title"] = ds.Tables[0].Rows[0]["Profile_Secondary_Title"].ToString();
            Session["oProfile_Secondary_Fname"] = ds.Tables[0].Rows[0]["Profile_Secondary_Fname"].ToString();
            Session["oProfile_Secondary_Lname"] = ds.Tables[0].Rows[0]["Profile_Secondary_Lname"].ToString();
            Session["oProfile_Secondary_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Secondary_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Secondary_DOB"].ToString()).ToString("yyyy-MM-dd");
            Session["oProfile_Secondary_Nationality"] = ds.Tables[0].Rows[0]["Profile_Secondary_Nationality"].ToString();
            Session["oProfile_Secondary_Country"] = ds.Tables[0].Rows[0]["Profile_Secondary_Country"].ToString();
            Session["osage"] = ds.Tables[0].Rows[0]["Secondary_Age"].ToString();
            Session["osdesignation"] = ds.Tables[0].Rows[0]["Secondary_Designation"].ToString();
            Session["oslang"] = ds.Tables[0].Rows[0]["Secondary_Language"].ToString();


            Session["oSub_Profile1_Title"] = ds.Tables[0].Rows[0]["Sub_Profile1_Title"].ToString();
            Session["oSub_Profile1_Fname"] = ds.Tables[0].Rows[0]["Sub_Profile1_Fname"].ToString();
            Session["oSub_Profile1_Lname"] = ds.Tables[0].Rows[0]["Sub_Profile1_Lname"].ToString();
            Session["oSub_Profile1_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile1_DOB"]);// Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile1_DOB"].ToString()).ToString("yyyy-MM-dd");
            Session["oSub_Profile1_Nationality"] = ds.Tables[0].Rows[0]["Sub_Profile1_Nationality"].ToString();
            Session["oSub_Profile1_Country"] = ds.Tables[0].Rows[0]["Sub_Profile1_Country"].ToString();
            Session["osp1age"] = ds.Tables[0].Rows[0]["Sub_Profile1_Age"].ToString();


            Session["oSub_Profile2_Title"] = ds.Tables[0].Rows[0]["Sub_Profile2_Title"].ToString();
            Session["oSub_Profile2_Fname"] = ds.Tables[0].Rows[0]["Sub_Profile2_Fname"].ToString();
            Session["oSub_Profile2_Lname"] = ds.Tables[0].Rows[0]["Sub_Profile2_Lname"].ToString();
            Session["oSub_Profile2_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile2_DOB"]);// Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile2_DOB"].ToString()).ToString("yyyy-MM-dd");
            Session["oSub_Profile2_Nationality"] = ds.Tables[0].Rows[0]["Sub_Profile2_Nationality"].ToString();
            Session["oSub_Profile2_Country"] = ds.Tables[0].Rows[0]["Sub_Profile2_Country"].ToString();
            Session["osp2age"] = ds.Tables[0].Rows[0]["Sub_Profile2_Age"].ToString();

            Session["oProfile_Address_Line1"] = ds.Tables[0].Rows[0]["Profile_Address_Line1"].ToString();
            Session["oProfile_Address_Line2"] = ds.Tables[0].Rows[0]["Profile_Address_Line2"].ToString();
            Session["oProfile_Address_State"] = ds.Tables[0].Rows[0]["Profile_Address_State"].ToString();
            Session["oProfile_Address_city"] = ds.Tables[0].Rows[0]["Profile_Address_city"].ToString();
            Session["oProfile_Address_Postcode"] = ds.Tables[0].Rows[0]["Profile_Address_Postcode"].ToString();
            Session["oProfile_Address_Created_Date"] = ds.Tables[0].Rows[0]["Profile_Address_Created_Date"].ToString();
            Session["oProfile_Address_Expiry_Date"] = ds.Tables[0].Rows[0]["Profile_Address_Expiry_Date"].ToString();
            Session["oProfile_Address_Country"] = ds.Tables[0].Rows[0]["Profile_Address_Country"].ToString();


            Session["oProfile_CorAddress_Line1"] = ds.Tables[0].Rows[0]["Address_Line1"].ToString();
            Session["oProfile_CorAddress_Line2"] = ds.Tables[0].Rows[0]["Address_Line2"].ToString();
            Session["oProfile_CorAddress_State"] = ds.Tables[0].Rows[0]["Address_State"].ToString();
            Session["oProfile_CorAddress_city"] = ds.Tables[0].Rows[0]["Address_city"].ToString();
            Session["oProfile_CorAddress_Postcode"] = ds.Tables[0].Rows[0]["Address_Postcode"].ToString();
            Session["oProfile_CorAddress_Created_Date"] = ds.Tables[0].Rows[0]["Address_Created_Date"].ToString();
            Session["oProfile_CorAddress_Expiry_Date"] = ds.Tables[0].Rows[0]["Expiry_Date"].ToString();
            Session["oProfile_CorAddress_Country"] = ds.Tables[0].Rows[0]["Address_Country"].ToString();

            Session["oPrimary_CC"] = ds.Tables[0].Rows[0]["Primary_CC"].ToString();
            Session["oPrimary_Mobile"] = ds.Tables[0].Rows[0]["Primary_Mobile"].ToString();
            Session["oPrimary_Alt_CC"] = ds.Tables[0].Rows[0]["Primary_Alt_CC"].ToString();
            Session["oPrimary_Alternate"] = ds.Tables[0].Rows[0]["Primary_Alternate"].ToString();

            Session["oSecondary_CC"] = ds.Tables[0].Rows[0]["Secondary_CC"].ToString();
            Session["oSecondary_Mobile"] = ds.Tables[0].Rows[0]["Secondary_Mobile"].ToString();
            Session["oSecondary_Alt_CC"] = ds.Tables[0].Rows[0]["Secondary_Alt_CC"].ToString();
            Session["oSecondary_Alternate"] = ds.Tables[0].Rows[0]["Secondary_Alternate"].ToString();

            Session["oSubprofile1_CC"] = ds.Tables[0].Rows[0]["Subprofile1_CC"].ToString();
            Session["oSubprofile1_Mobile"] = ds.Tables[0].Rows[0]["Subprofile1_Mobile"].ToString();
            Session["oSubprofile1_Alt_CC"] = ds.Tables[0].Rows[0]["Subprofile1_Alt_CC"].ToString();
            Session["oSubprofile1_Alternate"] = ds.Tables[0].Rows[0]["Subprofile1_Alternate"].ToString();

            Session["oSubprofile2_CC"] = ds.Tables[0].Rows[0]["Subprofile2_CC"].ToString();
            Session["oSubprofile2_Mobile"] = ds.Tables[0].Rows[0]["Subprofile2_Mobile"].ToString();
            Session["oSubprofile2_Alt_CC"] = ds.Tables[0].Rows[0]["Subprofile2_Alt_CC"].ToString();
            Session["oSubprofile2_Alternate"] = ds.Tables[0].Rows[0]["Subprofile2_Alternate"].ToString();
            

            Session["oPrimary_Email"] = ds.Tables[0].Rows[0]["Primary_Email"].ToString();         
            Session["oSecondary_Email"] = ds.Tables[0].Rows[0]["Secondary_Email"].ToString();
            Session["oSubprofile1_Email"] = ds.Tables[0].Rows[0]["Subprofile1_Email"].ToString();
            Session["oSubprofile2_Email"] = ds.Tables[0].Rows[0]["Subprofile2_Email"].ToString();
            Session["oSubprofile3_Email"] = ds.Tables[0].Rows[0]["Subprofile3_Email"].ToString();
            Session["oSubprofile4_Email"] = ds.Tables[0].Rows[0]["Subprofile4_Email"].ToString();

            Session["oPrimary_Email2"] = ds.Tables[0].Rows[0]["Primary_Email2"].ToString();
            Session["oSecondary_Email2"] = ds.Tables[0].Rows[0]["Secondary_Email2"].ToString();
            Session["oSubprofile1_Email2"] = ds.Tables[0].Rows[0]["Subprofile1_Email2"].ToString();
            Session["oSubprofile2_Email2"] = ds.Tables[0].Rows[0]["Subprofile2_Email2"].ToString();
            Session["oSubprofile3_Email2"] = ds.Tables[0].Rows[0]["Subprofile3_Email2"].ToString();
            Session["oSubprofile4_Email2"] = ds.Tables[0].Rows[0]["Subprofile4_Email"].ToString();


            Session["oProfile_Stay_ID"] = ds.Tables[0].Rows[0]["Profile_Stay_ID"].ToString();
            Session["oProfile_Stay_Resort_Name"] = ds.Tables[0].Rows[0]["Profile_Stay_Resort_Name"].ToString();
            Session["oProfile_Stay_Resort_Room_Number"] = ds.Tables[0].Rows[0]["Profile_Stay_Resort_Room_Number"].ToString();
            Session["oProfile_Stay_Arrival_Date"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Stay_Arrival_Date"]);// Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Stay_Arrival_Date"].ToString()).ToString("yyyy-MM-dd");
            Session["oProfile_Stay_Departure_Date"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Stay_Departure_Date"]);// Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Stay_Departure_Date"].ToString()).ToString("yyyy-MM-dd");

            Session["oTour_Details_Guest_Status"] = ds.Tables[0].Rows[0]["Tour_Details_Guest_Status"].ToString();
            Session["oTour_Details_Guest_Sales_Rep"] = ds.Tables[0].Rows[0]["Tour_Details_Guest_Sales_Rep"].ToString();

            Session["oTour_Details_Sales_Deck_Check_In"] = ds.Tables[0].Rows[0]["Tour_Details_Sales_Deck_Check_In"].ToString();
            Session["oTour_Details_Sales_Deck_Check_Out"] = ds.Tables[0].Rows[0]["Tour_Details_Sales_Deck_Check_Out"].ToString();
            Session["oTour_Details_Taxi_In_Price"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_In_Price"].ToString();
            Session["oTour_Details_Taxi_In_Ref"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_In_Ref"].ToString();
            Session["oTour_Details_Taxi_Out_Price"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_Out_Price"].ToString();
            Session["oTour_Details_Taxi_Out_Ref"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_Out_Ref"].ToString();

            pancardnoTextBox.Text = ds.Tables[0].Rows[0]["Primary_ID_Num"].ToString();
            gstinTextBox.Text = ds.Tables[0].Rows[0]["Primary_ID_Num2"].ToString();
            PancardspellTextBox.Text = ds.Tables[0].Rows[0]["Primary_ID_Num"].ToString();

            CoGSTINTextBox.Text= ds.Tables[0].Rows[0]["Primary_ID_Num2"].ToString();


            DataSet dsqual = Queries.LoadGuestStatusInProfile(Session["ProfileID"].ToString());
            guestatusDropDownList.DataSource = dsqual;
            guestatusDropDownList.DataTextField = "Guest_Status_name";
            guestatusDropDownList.DataValueField = "Guest_Status_name";
            guestatusDropDownList.AppendDataBoundItems = true;
            guestatusDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Tour_Details_Guest_Status"].ToString(), ""));
            guestatusDropDownList.DataBind();

            DataSet dstour = Queries.LoadSalesRepsInProfile1(office, Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);
            toursalesrepDropDownList.DataSource = dstour;
            toursalesrepDropDownList.DataTextField = "Sales_Rep_Name";
            toursalesrepDropDownList.DataValueField = "Sales_Rep_Name";
            toursalesrepDropDownList.AppendDataBoundItems = true;
            toursalesrepDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Tour_Details_Guest_Sales_Rep"].ToString(), ""));
            toursalesrepDropDownList.DataBind();

            

            //  load all sales rep based on office
            contsalesrepDropDownList.Items.Clear();
            DataSet ds7 = Queries.LoadSalesRepsInProfile1(office, Session["ProfileID"].ToString(), VenueDropDownList.SelectedItem.Text);// LoadSalesReps(office);
            contsalesrepDropDownList.DataSource = ds7;
            contsalesrepDropDownList.DataTextField = "Sales_Rep_Name";
            contsalesrepDropDownList.DataValueField = "Sales_Rep_Name";
            contsalesrepDropDownList.AppendDataBoundItems = true;
            //contsalesrepDropDownList.Items.Insert(0, new ListItem("", ""));
            contsalesrepDropDownList.Items.Insert(0, new ListItem(ds.Tables[0].Rows[0]["Tour_Details_Guest_Sales_Rep"].ToString(), ""));
            contsalesrepDropDownList.DataBind();

          ///  load TO based on office

            TOManagerDropDownList.Items.Clear();
            DataSet dsto = Queries.LoadTOManagerOnVenue(office, VenueDropDownList.SelectedItem.Text);// LoadTOManager(office);
            TOManagerDropDownList.DataSource = dsto;
            TOManagerDropDownList.DataTextField = "TO_Manager_Name";
            TOManagerDropDownList.DataValueField = "TO_Manager_Name";
            TOManagerDropDownList.AppendDataBoundItems = true;
            TOManagerDropDownList.Items.Insert(0, new ListItem("", ""));
            TOManagerDropDownList.DataBind();

            ButtonUpDropDownList.Items.Clear();
            DataSet dsbu = Queries.LoadButtonUpOnVenue(office, VenueDropDownList.SelectedItem.Text);// LoadButtonUp(office);
            ButtonUpDropDownList.DataSource = dsbu;
            ButtonUpDropDownList.DataTextField = "ButtonUp_Name";
            ButtonUpDropDownList.DataValueField = "ButtonUp_Name";
            ButtonUpDropDownList.AppendDataBoundItems = true;
            ButtonUpDropDownList.Items.Insert(0, new ListItem("", ""));
            ButtonUpDropDownList.DataBind(); 

            
          
            //Contract tab
            //load contract type

            DataSet dsct = Queries.LoadContractType(office);
            contracttypeDropDownList.DataSource = dsct;
            contracttypeDropDownList.DataTextField = "ContractType_name";
            contracttypeDropDownList.DataValueField = "ContractType_name";
            contracttypeDropDownList.AppendDataBoundItems = true;
            contracttypeDropDownList.Items.Insert(0, new ListItem("Choose Contract Type", ""));
            contracttypeDropDownList.DataBind();



            //DataSet dsfc = Queries.LoadFinanceOffice(office);
            //currencyDropDownList.DataSource = dsfc;
            //currencyDropDownList.DataTextField = "Finance_Currency_Name";
            //currencyDropDownList.DataValueField = "Finance_Currency_Name";
            //currencyDropDownList.AppendDataBoundItems = true;
            //currencyDropDownList.Items.Insert(0, new ListItem("", ""));
            //currencyDropDownList.DataBind();

            DataSet dsfc = Queries.LoadCurrencyByCountry(VenueCountryDropDownList.SelectedItem.Text);
            currencyDropDownList.DataSource = dsfc;
            currencyDropDownList.DataTextField = "Currency_Value";
            currencyDropDownList.DataValueField = "Currency_Value";
            currencyDropDownList.AppendDataBoundItems = true;
            currencyDropDownList.Items.Insert(0, new ListItem("", ""));
            currencyDropDownList.DataBind();





            DataSet dspym = Queries.LoadPaymentMethod(office);
            PayMethodDropDownList.DataSource = dspym;
            PayMethodDropDownList.DataTextField = "pay_method_name";
            PayMethodDropDownList.DataValueField = "pay_method_name";
            PayMethodDropDownList.AppendDataBoundItems = true;
            PayMethodDropDownList.Items.Insert(0, new ListItem("Select Payment Method", ""));
            PayMethodDropDownList.DataBind();

            DataSet dsfm = Queries.LoadFinanceMethod(office);
            financemethodDropDownList.DataSource = dsfm;
            financemethodDropDownList.DataTextField = "Finance_Name";
            financemethodDropDownList.DataValueField = "Finance_Name";
            financemethodDropDownList.AppendDataBoundItems = true;
            financemethodDropDownList.Items.Insert(0, new ListItem("", ""));
            financemethodDropDownList.DataBind();

	/*DataSet dsfm = Queries.LoadFinanceMethod(office, currencyDropDownList.SelectedItem.Text);
            financemethodDropDownList.DataSource = dsfm;
            financemethodDropDownList.DataTextField = "Finance_Name";
            financemethodDropDownList.DataValueField = "Finance_Name";
            financemethodDropDownList.AppendDataBoundItems = true;
            financemethodDropDownList.Items.Insert(0, new ListItem("", ""));
            financemethodDropDownList.DataBind();*/

            DataSet dsdm = Queries.LoadDepositPaymentMethod(office);
            depositmethodDropDownList.DataSource = dsdm;
            depositmethodDropDownList.DataTextField = "Deposit_pay_method_name";
            depositmethodDropDownList.DataValueField = "Deposit_pay_method_name";
            depositmethodDropDownList.AppendDataBoundItems = true;
            depositmethodDropDownList.Items.Insert(0, new ListItem("", ""));
            depositmethodDropDownList.DataBind();

            DataSet dsseason = Queries.LoadSeason();
            tnmseasonDropDownList.DataSource = dsseason;
            tnmseasonDropDownList.DataTextField = "season_name";
            tnmseasonDropDownList.DataValueField = "season_name";
            tnmseasonDropDownList.AppendDataBoundItems = true;
            tnmseasonDropDownList.Items.Insert(0, new ListItem("", ""));
            tnmseasonDropDownList.DataBind();

            fwseasonDropDownList.DataSource = dsseason;
            fwseasonDropDownList.DataTextField = "season_name";
            fwseasonDropDownList.DataValueField = "season_name";
            fwseasonDropDownList.AppendDataBoundItems = true;
            fwseasonDropDownList.Items.Insert(0, new ListItem("", ""));
            fwseasonDropDownList.DataBind();

            ftnmseasonDropDownList.DataSource = dsseason;
            ftnmseasonDropDownList.DataTextField = "season_name";
            ftnmseasonDropDownList.DataValueField = "season_name";
            ftnmseasonDropDownList.AppendDataBoundItems = true;
            ftnmseasonDropDownList.Items.Insert(0, new ListItem("", ""));
            ftnmseasonDropDownList.DataBind();


            //load alt or full
            DataSet dsen = Queries.LoadMembershipEntitlement();
            EntitlementPoinDropDownList.DataSource = dsen;
            EntitlementPoinDropDownList.DataTextField = "Entitlement_Name";
            EntitlementPoinDropDownList.DataValueField = "Entitlement_Name";
            EntitlementPoinDropDownList.AppendDataBoundItems = true;
            EntitlementPoinDropDownList.Items.Insert(0, new ListItem("", ""));
            EntitlementPoinDropDownList.DataBind();


            tipmtypeDropDownList.DataSource = dsen;
            tipmtypeDropDownList.DataTextField = "Entitlement_Name";
            tipmtypeDropDownList.DataValueField = "Entitlement_Name";
            tipmtypeDropDownList.AppendDataBoundItems = true;
            tipmtypeDropDownList.Items.Insert(0, new ListItem("", ""));
            tipmtypeDropDownList.DataBind();

            nmembtypeDropDownList.DataSource = dsen;
            nmembtypeDropDownList.DataTextField = "Entitlement_Name";
            nmembtypeDropDownList.DataValueField = "Entitlement_Name";
            nmembtypeDropDownList.AppendDataBoundItems = true;
            nmembtypeDropDownList.Items.Insert(0, new ListItem("", ""));
            nmembtypeDropDownList.DataBind();

            EntitlementFracDropDownList.DataSource = dsen;
            EntitlementFracDropDownList.DataTextField = "Entitlement_Name";
            EntitlementFracDropDownList.DataValueField = "Entitlement_Name";
            EntitlementFracDropDownList.AppendDataBoundItems = true;
            EntitlementFracDropDownList.Items.Insert(0, new ListItem("", ""));
            EntitlementFracDropDownList.DataBind();

            fwentitlementDropDownList.DataSource = dsen;
            fwentitlementDropDownList.DataTextField = "Entitlement_Name";
            fwentitlementDropDownList.DataValueField = "Entitlement_Name";
            fwentitlementDropDownList.AppendDataBoundItems = true;
            fwentitlementDropDownList.Items.Insert(0, new ListItem("", ""));
            fwentitlementDropDownList.DataBind();

            fptsentitlementDropDownList.DataSource = dsen;
            fptsentitlementDropDownList.DataTextField = "Entitlement_Name";
            fptsentitlementDropDownList.DataValueField = "Entitlement_Name";
            fptsentitlementDropDownList.AppendDataBoundItems = true;
            fptsentitlementDropDownList.Items.Insert(0, new ListItem("", ""));
            fptsentitlementDropDownList.DataBind();


            ffentitlementDropDownList.DataSource = dsen;
            ffentitlementDropDownList.DataTextField = "Entitlement_Name";
            ffentitlementDropDownList.DataValueField = "Entitlement_Name";
            ffentitlementDropDownList.AppendDataBoundItems = true;
            ffentitlementDropDownList.Items.Insert(0, new ListItem("", ""));
            ffentitlementDropDownList.DataBind();
            

          
                //load alt or full
                DataSet dsres = Queries.LoadFractionalResort();
                resortDropDownList.DataSource = dsres;
                resortDropDownList.DataTextField = "Contract_Resort_Name";
                resortDropDownList.DataValueField = "Contract_Resort_Name";
                resortDropDownList.AppendDataBoundItems = true;
                resortDropDownList.Items.Insert(0, new ListItem("", ""));
                resortDropDownList.DataBind();
                //weeks
                fwresortDropDownList.DataSource = dsres;
                fwresortDropDownList.DataTextField = "Contract_Resort_Name";
                fwresortDropDownList.DataValueField = "Contract_Resort_Name";
                fwresortDropDownList.AppendDataBoundItems = true;
                fwresortDropDownList.Items.Insert(0, new ListItem("", ""));
                fwresortDropDownList.DataBind();
                //pts
                fptsresortDropDownList.DataSource = dsres;
                fptsresortDropDownList.DataTextField = "Contract_Resort_Name";
                fptsresortDropDownList.DataValueField = "Contract_Resort_Name";
                fptsresortDropDownList.AppendDataBoundItems = true;
                fptsresortDropDownList.Items.Insert(0, new ListItem("", ""));
                fptsresortDropDownList.DataBind();

                ffresortDropDownList.DataSource = dsres;
                ffresortDropDownList.DataTextField = "Contract_Resort_Name";
                ffresortDropDownList.DataValueField = "Contract_Resort_Name";
                ffresortDropDownList.AppendDataBoundItems = true;
                ffresortDropDownList.Items.Insert(0, new ListItem("", ""));
                ffresortDropDownList.DataBind();





           
            DataSet dsfint = Queries.LoadFractionalInterest();
            FractionalInterestDropDownList.DataSource = dsfint;
            FractionalInterestDropDownList.DataTextField = "Contract_Fractional_Int_Name";
            FractionalInterestDropDownList.DataValueField = "Contract_Fractional_Int_Name";
            FractionalInterestDropDownList.AppendDataBoundItems = true;
            FractionalInterestDropDownList.Items.Insert(0, new ListItem("", ""));
            FractionalInterestDropDownList.DataBind();

            //weeks

            fwfractIntDropDownList.DataSource = dsfint;
            fwfractIntDropDownList.DataTextField = "Contract_Fractional_Int_Name";
            fwfractIntDropDownList.DataValueField = "Contract_Fractional_Int_Name";
            fwfractIntDropDownList.AppendDataBoundItems = true;
            fwfractIntDropDownList.Items.Insert(0, new ListItem("", ""));
            fwfractIntDropDownList.DataBind();

            //pts

            fptsfracintDropDownList.DataSource = dsfint;
            fptsfracintDropDownList.DataTextField = "Contract_Fractional_Int_Name";
            fptsfracintDropDownList.DataValueField = "Contract_Fractional_Int_Name";
            fptsfracintDropDownList.AppendDataBoundItems = true;
            fptsfracintDropDownList.Items.Insert(0, new ListItem("", ""));
            fptsfracintDropDownList.DataBind();

            fffractIntDropDownList.DataSource = dsfint;
            fffractIntDropDownList.DataTextField = "Contract_Fractional_Int_Name";
            fffractIntDropDownList.DataValueField = "Contract_Fractional_Int_Name";
            fffractIntDropDownList.AppendDataBoundItems = true;
            fffractIntDropDownList.Items.Insert(0, new ListItem("", ""));
            fffractIntDropDownList.DataBind();

         


        }

       

        DataSet dsoldtype = Queries.LoadOldContractTypeAll();
        oldcontracttypeDropDownList.DataSource = dsoldtype;
        oldcontracttypeDropDownList.DataTextField = "ContractType";
        oldcontracttypeDropDownList.DataValueField = "ContractType";
        oldcontracttypeDropDownList.AppendDataBoundItems = true;
        oldcontracttypeDropDownList.Items.Insert(0, new ListItem("", ""));
        oldcontracttypeDropDownList.DataBind();

        DataSet dscontgrp= Queries.LoadContractGroup();
        contractgroupDropDownList.DataSource = dscontgrp;
        contractgroupDropDownList.DataTextField = "Contract_Group_Name";
        contractgroupDropDownList.DataValueField = "Contract_Group_Name";
        contractgroupDropDownList.AppendDataBoundItems = true;
        contractgroupDropDownList.Items.Insert(0, new ListItem("", ""));
        contractgroupDropDownList.DataBind();

        LoanBUDropDownList.Items.Clear();
        DataSet dslbu = Queries.LoadLoanBUOnVenue(office, VenueDropDownList.SelectedItem.Text);// LoadButtonUp(office);
        LoanBUDropDownList.DataSource = dslbu;
        LoanBUDropDownList.DataTextField = "ButtonUp_Name";
        LoanBUDropDownList.DataValueField = "ButtonUp_Name";
        LoanBUDropDownList.AppendDataBoundItems = true;
        LoanBUDropDownList.Items.Insert(0, new ListItem("", ""));
        LoanBUDropDownList.DataBind();



    }
    public void NextBtn_Click(object sender, EventArgs e)
    {
        office = Queries.GetOfficeFromCountry(Session["ProfileID"].ToString());
        contractdetailsID = Queries.GetContractDetails_Indian_ID(office);// officeTextBox.Text);
        //ContractdetailsIDTextBox.Text = contractdetailsID;
        string bu6 = null;
        int i;
        string inst = "Installment No";
        string iamt, idate, ia, idt;
        // string dt =   DateTime.Parse(dealdateTextBox.Text.Trim()).ToString("MM/dd/yyyy", CultureInfo.InvariantCulture);//;// 
        int dealwkno = 34;//Queries.GetWkNumber(Convert.ToDateTime(dt));

        string dealdate1 = "27-08-2019";  //Convert.ToDateTime(dealdateTextBox.Text).ToString("dd-MM-yyyy");// "24-04-2019";
       // DateTime ddy = Convert.ToDateTime(dt);
        int ddyr = 2019;

        string updownoption;
        string user = (string)Session["username"];// "Caroline";
        string propertyfee, memberfee, membercgst, membersgst, Payment_Method, No_Installments, Installment_Amount;

        string venuecountry = VenueCountryDropDownList.SelectedItem.Text;
        string venue = VenueDropDownList.SelectedItem.Text;
        string venuegroup = GroupVenueDropDownList.SelectedItem.Text;
        string nationality = PrimarynationalityDropDownList.SelectedItem.Text;
        string ctno = null;
        string contractno = null;
        string contractgroup = contractgroupDropDownList.SelectedItem.Text;
        string contractvenue = Request.Form[contractvenueDropDownList.UniqueID]; //contractvenueDropDownList.SelectedItem.Text;
        string ReturnHomeDate = ReturnHomeDateTextBox.Text;
        if (upCheckBox.Checked)
        {
            updownoption = "Upgrade";
        }         
       else if (downCheckBox.Checked)
        {
            updownoption = "Downgrade";
        }
        else
        {
            updownoption = "";
        }
        

        if (financeradiobuttonlist.SelectedIndex == -1)
        {

        }
        else
        {

            string contracttype = contracttypeDropDownList.SelectedItem.Text;
            string profileid = Session["ProfileID"].ToString();// profileidTextBox.Text;
            string Finance_Details_Id = Queries.GetFinance_Details_Indian_ID(office);// officeTextBox.Text);// GetFinance_Details_Indian();
            string financeradio = financeradiobuttonlist.SelectedItem.Text;
            string currency = currencyDropDownList.SelectedItem.Text;
            string Affiliate_Type = AffiliationvalueTextBox.Text;
            string Total_Price_Including_Tax = totalfinpriceIntaxTextBox.Text;
            string Initial_Deposit_Percent = intialdeppercentTextBox.Text;
            string Initial_Deposit_Amount = initaldepamtTextBox.Text;
            string Balance_Payable = baldepamtTextBox.Text;
            string Total_Inital_Deposit = firstdepamtTextBox.Text;
            string Initial_Deposit_Balance, foreigncurrency;
            string Finance_Type = financemethodDropDownList.SelectedItem.Text;
            string Bal_Amount_Payable = balamtpayableTextBox.Text, fbal;
            string loanbu = Request.Form[LoanBUDropDownList.UniqueID];
            string oldLANo;
            if (woldLoanAgreementTextBox.Text=="" || woldLoanAgreementTextBox.Text==null || woldLoanAgreementTextBox.Text=="0")
            {
                oldLANo = "N/A";
            }
            else
            {
                oldLANo = woldLoanAgreementTextBox.Text;
            }
            
            if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
            {
                Initial_Deposit_Balance = "0";
            }
            else
            {
                Initial_Deposit_Balance = balinitialdepamtTextBox.Text;
            }


            if (PayMethodDropDownList.SelectedIndex == 0)
            {
                Payment_Method = "";
            }
            else
            {
                Payment_Method = PayMethodDropDownList.SelectedItem.Text;
            }

            if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
            {
                No_Installments = "0";
            }
            else
            {
                No_Installments = NoinstallmentTextBox.Text;
            }



            if (installmentamtTextBox.Text == "" || installmentamtTextBox.Text == "0" || installmentamtTextBox.Text == "NaN")
            {
                Installment_Amount = "0";
            }
            else
            {
                Installment_Amount = installmentamtTextBox.Text;

            }

            if (foreigncurrencyTextBox.Text == "" || foreigncurrencyTextBox.Text == "0" || foreigncurrencyTextBox.Text == "NaN")
            {
                foreigncurrency = "60";
            }
            else
            {
                foreigncurrency = foreigncurrencyTextBox.Text;
            }


            if (companynameTextBox.Text == "" || companynameTextBox.Text == null)
            {

            }
            else
            {
                //update
                string ncompanyname = companynameTextBox.Text.ToUpper().Replace("'", "''");
                if (String.Compare(Session["ocompanyname"].ToString(), ncompanyname) != 0)
                {
                    int update = Queries.UpdateProfileCompanyName(Session["ProfileID"].ToString(), ncompanyname);
                    string log3 = "Company Name changed from:" + Session["ocompanyname"].ToString() + " " + "to" + ncompanyname;
                    int insertlog3 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Company Name Updated", Session["ocompanyname"].ToString(), ncompanyname);


                }
                else
                { }
            }


            if (BUCheckBox.Checked == true)
            {
                bu6 = "Yes";
            }
            else
            {
                bu6 = "No";

            }


            if (mcRadioButtonList.Checked == true)
            {
                mcwaiver = "Yes";
            }
            else
            {
                mcwaiver = "No";

            }

            string contractnote = "Contract Created";
            string type1 = "New Fractional"; string type2 = "New Points"; string type3 = "Trade In Points"; string type4 = "Trade In Weeks";
            string type5 = "Trade In Fractionals(Points)"; string type6 = "Trade In Fractionals(Weeks)"; string type7 = "Trade In Fractionals(Fractional)";
            string contractteamnote = "Contract Details Added";
            string financedetailsnote = "Finance Details Added";
            string crmnote = "Contract CRM Details Added";
            string PAnote = "Contract Purchase Agreement Details Added";
            string contractreceiptnote = "Contract Receipt Details Added";
            string tradeinnote = "Trade in Details Added";
            string newpointsnote = "New Points Details Added";
            string fractnote = "New Fractional Details Added";
            string installmentnote = "Installments Details Added";


            if (contracttype == "Fractional")
            {
                if (financeradio == "Finance")
                {
                    if (Finance_Type == "Pashuram Finance")
                    {
                        //IGSTrate = "18%";
                        // Interestrate = "11%";
                        DataSet dsfmr = Queries.LoadFinanceMethodRatesFractional(Finance_Type, ddyr);
                        IGSTrate = dsfmr.Tables[0].Rows[0]["IGST_Rate"].ToString() + "%";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = igstamtTextBox.Text;
                        No_Emi = noemiTextBox.Text;
                        emiamt = emiamtTextBox.Text;
                        eurorate = "0";
                        loanamtINEuro = "0";
                        monthlyPremiumprotectionplan = "0";
                    }
                    else if(Finance_Type == "Crown Finance")
                    {
                        No_Emi = noemiTextBox.Text;
                        DataSet dsfmr = Queries.LoadCrownFinanceMethodRatesFractional(Finance_Type, ddyr, No_Emi);
                        IGSTrate = "0";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = "0";                      
                        emiamt = emiamtTextBox.Text;
                        eurorate = eurorateTextBox.Text;
                        loanamtINEuro = loanamtINEuroTextBox.Text;
                        monthlyPremiumprotectionplan = monthlyPremiumprotectionplanTextBox.Text;
                    }
                    else
                    {
                        IGSTrate = "0";
                        Interestrate = "0";
                    }
                   
                  
                }
                else if (financeradio == "Non Finance")
                {

                    Finance_No = "0";
                    documentationfee = "0";
                    IGST_Amount = "0";
                    No_Emi = "0";
                    emiamt = "0";
                    IGSTrate = "0";
                    Interestrate = "0";
                    eurorate = "0";
                    loanamtINEuro = "0";
                    monthlyPremiumprotectionplan = "0";
                }
                string resort = resortDropDownList.SelectedItem.Text;
                string yr = ffirstyrTextBox.Text;                
                string commencedate= "01-01-" + yr;
                string expirydate = "12-31-" + flastyrTextBox.Text;
                string cur = currencyDropDownList.SelectedItem.Text;
                string res = testresTextBox.Text;
                string farr = FractionalInterestDropDownList.SelectedItem.Text;
                //lease back saved on mcfeestextbox

                //get mc charges
                DataSet dsmc = Queries.LoadMCChartfractional(resort, yr, cur, farr, res);
                if (dsmc.Tables[0].Rows.Count == 0)
                {
                    propertyfee = "TBA";
                    memberfee = "TBA";
                    membercgst = "TBA";
                    membersgst = "TBA";

                }
                else
                {
                    propertyfee = dsmc.Tables[0].Rows[0]["Property_fee"].ToString();
                    memberfee = dsmc.Tables[0].Rows[0]["Member_fee"].ToString();
                    membercgst = dsmc.Tables[0].Rows[0]["Member_CGST"].ToString();
                    membersgst = dsmc.Tables[0].Rows[0]["Member_SGST"].ToString();
                }

                int occyr = Convert.ToInt32(ffirstyrTextBox.Text) - 1;

                string mcstartdate = Queries.LoadMC_PaymentDate(occyr); // "11/1/" + occyr;
                string regcollterm, regcollamt;
                if (AffiliationvalueTextBox.Text == "Registry Collection")
                {
                    regcollterm = regcollectiontermTextBox.Text;
                    regcollamt = regcollamtTextBox.Text;
                }
                else
                {
                    regcollterm = "";
                    regcollamt = "0";
                }
               

                if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                {

                    contractno = Queries.GetFractionalContractNoAmb(venue, resort);
                    int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[resortDropDownList.UniqueID]);
                }
                else
                {
                    contractno = Queries.GetFractionalContractNo(venue, resort);
                    int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[resortDropDownList.UniqueID]);
                }
                //get the last id from selected club
                int insertcontractdetails = Queries.InsertContractDetails_Indian(contractno, profileid, contsalesrepDropDownList.SelectedItem.Text, TOManagerDropDownList.SelectedItem.Text, ButtonUpDropDownList.SelectedItem.Text, dealdate1, dealstatusDropDownList.SelectedItem.Text, DateTime.Now.ToString(), "", contracttypeDropDownList.SelectedItem.Text, mcwaiver, financeradiobuttonlist.SelectedItem.Text, contractremarkTextBox.Text, pancardnoTextBox.Text.ToUpper(), adharcardTextBox.Text.ToUpper(), propertyfee, mcstartdate, memberfee, membercgst, membersgst, CanxContractNoTextBox.Text, contractdetailsID, "", loanbu,
                    gstinTextBox.Text.ToUpper(), companypanoTextBox.Text.ToUpper(), dealwkno.ToString(), "", "", contractcommentTextBox.Text, user, bu6, updownoption,expirydate,commencedate,contractgroup,contractvenue, ReturnHomeDate);
                //update
                int updateGetContractDetails_Indian_ID = Queries.UpdateContractDetails_Indian_ID(office);// officeTextBox.Text);
                string log1 = "Contract Created:" + "with Contract # : " + contractno +  "," + "for profile ID:" + profileid +  "," + "SalesRep:" + contsalesrepDropDownList.SelectedItem.Text +  "," + "TO Manager:" + TOManagerDropDownList.SelectedItem.Text +  "," + "Button Up:" + ButtonUpDropDownList.SelectedItem.Text +  "," + "Deal Date:" + dealdate1 +  "," + "Deal Status:" + dealstatusDropDownList.SelectedItem.Text +  "," + "Contract Created DAte:" + DateTime.Now.ToShortDateString() +  "," + "" + "Contract type:" + contracttypeDropDownList.SelectedItem.Text +  "," + "MC Waiver Applicable:" + mcwaiver +  "," + "Mode:" + financeradiobuttonlist.SelectedItem.Text +  "," + "Remark:" + "" +  "," + "Pancard:" + pancardnoTextBox.Text +  "," + "Adhar card:" + adharcardTextBox.Text +  "," +
                    "Property fee:" + propertyfee +  "," + "MC First Yr:" + mcstartdate +  "," + "Memberfee:" + memberfee + memberfee +  "," + "Canx Contract No:" + CanxContractNoTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Canx Date:" + "" +  "," + "Loan BU Officer:" + loanbu +  "," + "GSTIN No:" + gstinTextBox.Text +  "," + "Co. Pan No:" + companypanoTextBox.Text +  "," + "Week no:" + dealwkno +  "," + "Deck no:" + "" +  "," +
                    "Deck details:" + "" +  "," + "Contract Comment:" + contractcommentTextBox.Text +  "," + "Contract Created by :" + user +  "," + "Bu After 6pm:" + bu6 +  "," + "Selected Option:" + updownoption +  "," + "Commence date:" + commencedate +  "," + "Expiry date:" + expirydate +  "," + "Contract Group:" + contractgroup +  "," + "Contract Venue:" + contractvenue +  "," + "Return Home Date:" + ReturnHomeDate;
            
                int insertlog1 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractnote + "-" + type1, "", log1);



                int cteamdetails = Queries.InsertContractTeamDetails(contractdetailsID, "", "No", "No", "No", DateTime.Now.ToString(), user, "", "");
                string logctd = "Contract team Details:" + "contractdetailsID:" + contractdetailsID + "," + "Rep Report: No " + "," + "To Report: No" + "," +
                     "SMS: No" + "," + "Created by:" + user + "," + "created date:" + DateTime.Now.ToString() + "," + "updated by:" + "" + "," + "Updated date:" + "";
                int insertlogctd = Queries.InsertContractLogs_India(profileid, contractdetailsID, logctd, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractteamnote, "", logctd);

                string ContractFractionalIndian_ID = Queries.GetContract_Fractional_Indian_ID(office);// officeTextBox.Text);// GetContract_Fractional_Indian();
                int insertfractional = Queries.InsertContract_Fractional_Indian(ContractFractionalIndian_ID, profileid, contractno, resortDropDownList.SelectedItem.Text, testresnoTextBox.Text, testresTextBox.Text, FractionalInterestDropDownList.SelectedItem.Text, EntitlementFracDropDownList.SelectedItem.Text, ffirstyrTextBox.Text, ftenureTextBox.Text, flastyrTextBox.Text, MCFeesTextBox.Text, propertyfee, contractdetailsID);
                int updatefract = Queries.UpdateContract_Fractional_Indian_ID(office);// officeTextBox.Text);
                string log2 = "Fractional Details:" +   "ContractFractionalIndian_ID:" + ContractFractionalIndian_ID +  "," + "profileid:" + profileid +  "," + "contractno:" + contractno +  "," + "Resort:" + resortDropDownList.SelectedItem.Text +  "," + "Residence No:" + testresnoTextBox.Text +  "," + "Residence type:" + testresTextBox.Text +  "," +
                    "Fractional Interest:" + FractionalInterestDropDownList.SelectedItem.Text +  "," + "Entitlement:" + EntitlementFracDropDownList.SelectedItem.Text +  "," + "1st Yr Occ:" + ffirstyrTextBox.Text +  "," + "Tenure:" + ftenureTextBox.Text +  "," + "last Yr Occ:" + flastyrTextBox.Text +  "," + "Lease Back:" + MCFeesTextBox.Text +  "," + "Profperty fee:" + propertyfee +  "," + "ContractDetailsID:" + contractdetailsID;
                int insertlog2 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log2, user, DateTime.Now.ToString(), "Indian_contracts.aspx", fractnote, "", log2);



                if (financeradio == "Finance")
                {
                    //get the finance no 
                    Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);

                }
                else
                {
                    Finance_No = "";
                }

                int insertpointsfinancedetails = Queries.InsertFinance_Details_Indian(Finance_Details_Id, profileid, contractno, financeradio, currency, Affiliate_Type, Total_Price_Including_Tax, Initial_Deposit_Percent, Initial_Deposit_Amount, Balance_Payable, Total_Inital_Deposit, Initial_Deposit_Balance, Bal_Amount_Payable, Payment_Method, No_Installments.ToString(), Installment_Amount, Finance_Type, Finance_No, IGSTrate, Interestrate, documentationfee, IGST_Amount, No_Emi, emiamt, "", oldLANo, regcollterm, regcollamt, contractdetailsID, baladepamtdateTextBox.Text,"0", eurorate, loanamtINEuro, monthlyPremiumprotectionplan,"");
                int updatefinanceid = Queries.UpdateFinance_Details_Indian_ID(office);// officeTextBox.Text);
                if (financeradio == "Finance")
                {
                    int updatefinanceno = Queries.UpdateFinanceNo(VenueDropDownList.SelectedItem.Text, Finance_Type, contracttypeDropDownList.SelectedItem.Text);
                }
                else { }

                string Contract_Fractional_PA_Id = Queries.GetContract_Fractional_PA_Indian_ID(office);// officeTextBox.Text);// GetContract_Fractional_PA_Indian();

                if (fractionalbalduedateTextBox.Text == "" || fractionalbalduedateTextBox.Text == null || fractionalbalduedateTextBox.Text == "NaN")
                {
                    fbal = "";
                }
                else
                {
                    fbal = fractionalbalduedateTextBox.Text;
                }
                string convertvolume, converttax, convertadminfee, convertdeposit,converttotalvolume;
                DataSet exrds = Queries.LoadExchange_Rate();
                string dollarrate = exrds.Tables[0].Rows[0]["ERates_USD"].ToString();
                if (currencyDropDownList.SelectedItem.Text == "INR")
                {
                    if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertvolume = valueamt.ToString();
                    }
                    if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertadminfee = valueamt.ToString();
                    }
                     if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
                       
                        double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        converttax = valueamt.ToString();
                    }
                    if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertdeposit = valueamt.ToString();
                    }
                  
                        if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                        {
                            converttotalvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            converttotalvolume = valueamt.ToString();
                         }
                }
                else
                {
                    if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text), 0);
                        convertvolume = valueamt.ToString();
                    }
                    if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text), 0);
                        convertadminfee = valueamt.ToString();
                    }
                    if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
             
                        double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text) , 0);
                        converttax = valueamt.ToString();
                    }
                    
                    if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text), 0);
                        convertdeposit = valueamt.ToString();
                    }
                    if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                    {
                        converttotalvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text), 0);
                        converttotalvolume = valueamt.ToString();
                    }

                }
                int insertpointsPA = Queries.InsertContract_Fractional_PA_Indian(Contract_Fractional_PA_Id, profileid, contractno, AdmissionFeesTextBox.Text, AdministrationFeesTextBox.Text, fcgstTextBox.Text, fsgstTextBox.Text, TotalPurchasePriceTextBox.Text, Total_Price_Including_Tax, fractionaldepositTextBox.Text, fractionalbalanceTextBox.Text, fbal, remarksTextBox.Text, "", "", contractdetailsID, "", "", "", "", "", "", "", "", convertvolume, convertadminfee, converttax, convertdeposit,FTotalTaxTextBox.Text, converttotalvolume,dollarrate);
                string log4 = "Fractional PA Details:" +"Fractional_PA_Id:" + Contract_Fractional_PA_Id +  "," + "Profile:" + profileid +  "," + "Contract no:" + contractno +  "," + "Trade in value:" + "" +  "," + "Total Value:" + "" +  "," + "AdmissionFees:" + AdmissionFeesTextBox.Text +  "," + " AdministrationFees:" + AdministrationFeesTextBox.Text +  "," +
                    "Total tax:" + FTotalTaxTextBox.Text +  "," + "CGST:" + fcgstTextBox.Text +  "," + "SGST:" + fsgstTextBox.Text +  "," + "total Purchase price:" + TotalPurchasePriceTextBox.Text +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                    "Deposit Amt:" + fractionaldepositTextBox.Text +  "," + "balance:" + fractionalbalanceTextBox.Text +  "," + "Balance due dates:" + fbal +  "," + "Remarks:" + remarksTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," +
                    "Converted Vol:" + convertvolume +  "," + "Converted Admin fee:" + convertadminfee +  "," + "Converted Tax:" + converttax +  "," + "Converted Deposit:" + convertdeposit+","+"Total Volume(USD):"+ converttotalvolume+","+"Exchange Rate:"+dollarrate;
                int insertlog4 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log4, user, DateTime.Now.ToString(), "Indian_contracts.aspx", PAnote, "", log4);
                int updatefractpa = Queries.UpdateContract_Fractional_PA_Indian_ID(office);// officeTextBox.Text);


                if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                {
                    if (financeradio == "Finance")
                    {

                        if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else
                        {
                            //get max installmentdate n update finance startdate
                            int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        }

                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text,"0");

                    }
                }
                else
                {
                    for (i = 1; i <= Convert.ToInt32(No_Installments); i++)
                    {
                        string installemnt_No = inst + " " + i;
                        ia = "textBox_" + i + "1";
                        iamt = Request.Form[ia];
                        idt = "textBox_" + i + "2";
                        idate = Request.Form[idt];

                        string insinvoice = Queries.GetInstallmentInvoiceNo(office);
                        int FinanceInvoice = Queries.InsertContract_Installments_Indian(profileid, contractno, installemnt_No, iamt, idate, insinvoice, contractdetailsID, depositmethodDropDownList.SelectedItem.Text);
                        int update = Queries.UpdateInstallmentInvoiceNo(office);
                        string log5 = "Installment Details:"   + "Profile id: " + profileid +  "," + "Contractno: " + contractno +  "," + "Installment #:" + installemnt_No +  "," + "Installment Amt:" + iamt +  "," + "Installment Date:" + idate +  "," +
                              "Invoice #:" + insinvoice +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Payment Mode:" + depositmethodDropDownList.SelectedItem.Text;
                        int insertlog5 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", installmentnote, "", log5);


                    }
                    if (financeradio == "Finance")
                    {
                        //get max installmentdate n update finance startdate
                        int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        string log3 = "Finance Details:"   + " Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," +
                            "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," +
                            "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," + "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," +
                            "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," + "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + Queries.GetFinanceMonth(contractno) +  "," +
                            "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," + "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," + "Old loan amt:" + "0" +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan;
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);
                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text,"0");
                    }
                    else if (financeradio == "Non Finance")
                    {
                        string log3 = "Finance Details:"   + " Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," +
                                                  "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," +
                                                  "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," + "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," +
                                                  "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," + "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + "" +  "," +
                                                  "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," + "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," + "Old loan amt:" + "0" +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan;
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);


                    }

                }

                int crmdetails = Queries.InsertCRM_details(profileid, contractdetailsID, PrgmsrcTextBox.Text, RefByTextBox.Text, "", DateTime.Now.ToString(), "", user, "", "Active");
                string logc = "CRM Details:"   + "Profile id:" + profileid +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Program Src: " + PrgmsrcTextBox.Text +  "," +
                                   "Referred by:" + RefByTextBox.Text +  "," + "Comment:" + "" +  "," + "Created by:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "User:" + user +  "," + "Updated by:" + "" +  "," + "status:" + "Active";
                int insertlogc = Queries.InsertContractLogs_India(profileid, contractdetailsID, logc, user, DateTime.Now.ToString(), "Indian_contracts.aspx", crmnote, "", logc);

                //generate receipt               
                DataSet dsrecp = Queries.LoadIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                int CurrentYear = DateTime.Today.Year;
                int PreviousYear = DateTime.Today.Year - 1;
                int NextYear = DateTime.Today.Year + 1;
                string PreYear = PreviousYear.ToString();
                string NexYear = NextYear.ToString();
                string CurYear = CurrentYear.ToString();
                int cyr = Convert.ToInt32(CurYear) % 100;
                int tpyr = Convert.ToInt32(PreYear) % 100;
                int nxyr = Convert.ToInt32(NexYear) % 100;
                string FinYear = null;
                string supplyplace = dsrecp.Tables[0].Rows[0]["SupplyPlace"].ToString();
                string state = dsrecp.Tables[0].Rows[0]["State"].ToString();
                string statecode = dsrecp.Tables[0].Rows[0]["StateCode"].ToString();
                string productcode = "PRESTIGE ROYAL RESIDENCES";
                string usdproductcode = "KARMA ROYAL RESIDENCES";
                string SAC = "996311";
                string GSTpercent = "9%";
                string receipttype = "Deposit";
                double floodcess = 0;
                if (DateTime.Today.Month > 3)
                {
                    //  FinYear = cyr + "-" + nxyr;
                    FinYear = CurrentYear + "-" + nxyr;
                }
                else
                {
                    //FinYear = tpyr + "-" + cyr;
                    FinYear = PreviousYear + "-" + cyr;

                }
                if (intialdeppercentTextBox.Text == "" || intialdeppercentTextBox.Text == "NaN" || intialdeppercentTextBox.Text == "0" || intialdeppercentTextBox.Text == null)
                { }
               else { 

                string invoiceno = dsrecp.Tables[0].Rows[0]["ReceiptStart"].ToString() + "/" + FinYear + "/" + dsrecp.Tables[0].Rows[0]["ReceiptGen_Code"].ToString();

                //calculate gst on intial dep    
                if (frpdoldamtTextBox.Text == "" || frpdoldamtTextBox.Text == "NaN" || frpdoldamtTextBox.Text == "0" || frpdoldamtTextBox.Text == null)
                {
                    if (currencyDropDownList.SelectedItem.Text == "INR")
                    {
                        double indeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                        double gst = Math.Round(indeposit / 118 * 18 / 2);
                        double taxableamt = Math.Round(indeposit / 118 * 100);
                            if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                            {
                                floodcess = Math.Round(taxableamt * 0.01);

                            }
                            else
                            {
                                floodcess = 0;
                            }
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(), depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype,indeposit.ToString(), totaldeposit.ToString(),"0", floodcess.ToString());
                            string logr = "Invoice Details:" +   "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," + "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," +
                                "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + indeposit.ToString() +  "," + "Total Deposit(USD):" + totaldeposit.ToString() +  "," + "Previous Amt:" + "0"+"," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                        //update receiptgen no
                        int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                        int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);

                    }
                    else
                    {
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                        double currentrate = Convert.ToDouble(foreigncurrency);
                        double indeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) * currentrate);
                        double gst = 0;
                        double taxableamt = 0;
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) , 0);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, usdproductcode,SAC,taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(),GSTpercent , gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), intialdeppercentTextBox.Text, receipttype,intialdeppercentTextBox.Text, totaldeposit.ToString(), "0", floodcess.ToString());
                            string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                    "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                    "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," + "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," +
                                    "Actual Amt:" + intialdeppercentTextBox.Text +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + intialdeppercentTextBox.Text +  "," + "Total Deposit in USD: " + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                        //update receiptgen no
                        int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                        int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);



                    }
                }
                else
                {
                    if (currencyDropDownList.SelectedItem.Text == "INR")
                    {
                        double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                        double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                        double indeposit = fulldeposit - oldamt;
                        double gst = Math.Round(indeposit / 118 * 18 / 2);
                        double taxableamt = Math.Round(indeposit / 118 * 100);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                        double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), 
                               supplyplace,state, statecode,productcode,SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(),GSTpercent , gst.ToString(), 
                                indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, fulldeposit.ToString(), totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());

                            string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() + "," +
                                 "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," +
                                 "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," +
                                 "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                        //update receiptgen no
                        int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                        int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                    }
                    else
                    {
                        double currentrate = Convert.ToDouble(foreigncurrency);
                        double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                        double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                        double indeposit1 = fulldeposit - oldamt;
                        double indeposit = Math.Round(Convert.ToDouble(indeposit1) * currentrate);
                        double gst = 0;
                        double taxableamt = 0;
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                        int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(),
                           supplyplace, state, statecode, usdproductcode, SAC, taxableamt.ToString(), taxableamt.ToString(),GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(),indeposit1.ToString(),receipttype,fulldeposit.ToString(),totaldeposit.ToString(),oldamt.ToString(), floodcess.ToString());
                            string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," +
                                   "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," +
                                   "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," + "Actual Amt:" + indeposit1.ToString() +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);// officeTextBox.Text);
                        //update receiptgen no
                        int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                        int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);

                    }
                }
             }

                SOR_AdditionalName(contractdetailsID);
                LoadDocuments(contractdetailsID, office, financeradiobuttonlist.SelectedItem.Text, contracttypeDropDownList.SelectedItem.Text, Affiliate_Type, mcwaiver, CanxContractNoTextBox.Text, companynameTextBox.Text, StateDropDownList.SelectedItem.Text);
                Button7.Visible = true;
                string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";

                ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);
                contractnoTextBox.Text = contractno;
                contractnoTextBox.ReadOnly = true;

                CreateButton.Visible = false;




            }//fractional contract type

            else if (contracttype == "Points")
            {
                if (financeradio == "Finance")
                {
                    if (Finance_Type == "Pashuram Finance")
                    {
                        DataSet dsfmr = Queries.LoadFinanceMethodRates(Finance_Type, ddyr);
                        IGSTrate = dsfmr.Tables[0].Rows[0]["IGST_Rate"].ToString() + "%";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = igstamtTextBox.Text;
                        No_Emi = noemiTextBox.Text;
                        emiamt = emiamtTextBox.Text;
                        eurorate = "0";
                        loanamtINEuro = "0";
                        monthlyPremiumprotectionplan = "0";
                    }
                    else if (Finance_Type == "Crown Finance")
                    {
                        No_Emi = noemiTextBox.Text;
                        DataSet dsfmr = Queries.LoadCrownFinanceMethodRates(Finance_Type, ddyr, No_Emi);
                        IGSTrate = "0";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = "0";
                        emiamt = emiamtTextBox.Text;
                        eurorate = eurorateTextBox.Text;
                        loanamtINEuro = loanamtINEuroTextBox.Text;
                        monthlyPremiumprotectionplan = monthlyPremiumprotectionplanTextBox.Text;
                    }

                    else
                    {
                        IGSTrate = "0";
                        Interestrate = "0";
                    }
                  
                   
                }
                else if (financeradio == "Non Finance")
                {

                    Finance_No = "0";
                    documentationfee = "0";
                    IGST_Amount = "0";
                    No_Emi = "0";
                    emiamt = "0";
                    IGSTrate = "0";
                    Interestrate = "0";
                    eurorate = "0";
                    loanamtINEuro = "0";
                    monthlyPremiumprotectionplan = "0";
                }

                string pointsclub = Request.Form[pointsclubDropDownList.UniqueID];
                //get mc charges
                DataSet dsmc = Queries.LoadMCChart(pointsclub, firstyrTextBox.Text, currencyDropDownList.SelectedItem.Text);
                if (dsmc.Tables[0].Rows.Count == 0)
                {
                    propertyfee = "TBA";
                    memberfee = "TBA";
                    membercgst = "TBA";
                    membersgst = "TBA";

                }
                else
                {
                    propertyfee = dsmc.Tables[0].Rows[0]["Property_fee"].ToString();
                    memberfee = dsmc.Tables[0].Rows[0]["Member_fee"].ToString();
                    membercgst = dsmc.Tables[0].Rows[0]["Member_CGST"].ToString();
                    membersgst = dsmc.Tables[0].Rows[0]["Member_SGST"].ToString();
                }

                string commencedate = "01-01-" + firstyrTextBox.Text;
                string expirydate = "12-31-" + lastyrTextBox.Text;
                int occyr = Convert.ToInt32(firstyrTextBox.Text) - 1;
                string mcstartdate = Queries.LoadMC_PaymentDate(occyr); // "11/1/" + occyr;
                string ptenure = tenureTextBox.Text;
                if (PrimarynationalityDropDownList.SelectedItem.Text == "Indian" || PrimarynationalityDropDownList.SelectedItem.Text == "INDIAN" || PrimarynationalityDropDownList.SelectedItem.Text == "OCI" || PrimarynationalityDropDownList.SelectedItem.Text == "PIO")
                {
                    if (venue == "North Goa" || venue == "NORTH GOA")
                    {

                        if (venuegroup == "Coldline" || venuegroup == "COLDLINE")
                        {
                            ctno = Queries.GetTimeshareContractNoIndian(venue, pointsclub, venuegroup);
                            //get the preferred lang of profile
                            DataSet dslang = Queries.LoadProfile_PrimaryLang(Session["ProfileID"].ToString());
                            string preferredlang = dslang.Tables[0].Rows[0]["Primary_Language"].ToString();
                            if (preferredlang.StartsWith("Hindi"))
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W" + "E";
                                    }

                                }
                            }//preferred lang-hindi
                            else
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//else of tenure

                            }//else of preferred lang

                        }//if veneugrp
                        else
                        {
                            if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                            {
                                ctno = Queries.GetTimeshareContractNoIndian_CancelledMember(venue, pointsclub, venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//if canx mem


                            else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                            {
                                ctno = Queries.GetTimeshareContractNoIndian_MemberAmb(venue, pointsclub, venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//else member amb n gc
                            else
                            {
                                ctno = Queries.GetTimeshareContractNoIndian(venue, pointsclub, venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//else tenure


                            }//else of mktgf rgrms 


                        }//else veneugrp

                    }//if venue
                    else
                    {
                        if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                        {
                            ctno = Queries.GetTimeshareContractNoIndian_CancelledMember(venue, pointsclub, venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//else of canx mem
                        else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                        {
                            ctno = Queries.GetTimeshareContractNoIndian_MemberAmb(venue, pointsclub, venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//else memb amb n gc
                        else
                        {
                            ctno = Queries.GetTimeshareContractNoIndian(venue, pointsclub, venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//else tenure


                        }//else mktg prgms

                    }//else venue
                    int updatecontno = Queries.UpdateContractNoInd(VenueDropDownList.SelectedItem.Text, Request.Form[pointsclubDropDownList.UniqueID]);
                }//if nationality =indian n oci n pio
                else
                {
                    if (venue == "North Goa" || venue == "NORTH GOA")
                    {

                        if (venuegroup == "Coldline" || venuegroup == "COLDLINE")
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian(venue, pointsclub, venuegroup);
                            //get the preferred lang of profile
                            DataSet dslang = Queries.LoadProfile_PrimaryLang(Session["ProfileID"].ToString());
                            string preferredlang = dslang.Tables[0].Rows[0]["Primary_Language"].ToString();
                            if (preferredlang.StartsWith("Hindi"))
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W" + "E";
                                    }

                                }
                            }//preferred lang-hindi
                            else
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }

                            }//else preferred lang

                        }//if veneugrp
                        else
                        {
                            if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian_CancelledMember(venue, pointsclub, venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }
                            else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian_MemberAmb(venue, pointsclub, venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//else MarketingProgramDropDownList
                            else
                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian(venue, pointsclub, venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }


                            }


                        }//else veneugrp

                    }//if venue
                    else
                    {
                        if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian_CancelledMember(venue, pointsclub, venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }
                        else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian_MemberAmb(venue, pointsclub, venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//else MarketingProgramDropDownList
                        else
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian(venue, pointsclub, venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }


                        }

                    }//else venue
                    int updatecontno = Queries.UpdateContractNoNInd(VenueDropDownList.SelectedItem.Text, pointsclub);

                }


                int insertcontractdetails = Queries.InsertContractDetails_Indian(contractno, profileid, contsalesrepDropDownList.SelectedItem.Text, TOManagerDropDownList.SelectedItem.Text, ButtonUpDropDownList.SelectedItem.Text, dealdate1, dealstatusDropDownList.SelectedItem.Text, DateTime.Now.ToString(), "", contracttypeDropDownList.SelectedItem.Text, mcwaiver, financeradiobuttonlist.SelectedItem.Text, contractremarkTextBox.Text, pancardnoTextBox.Text.ToUpper(), adharcardTextBox.Text.ToUpper(), propertyfee, mcstartdate, memberfee, membercgst, membersgst, CanxContractNoTextBox.Text, contractdetailsID, "", loanbu, gstinTextBox.Text.ToUpper(), companypanoTextBox.Text.ToUpper(), dealwkno.ToString(), "", "", contractcommentTextBox.Text, user , bu6, updownoption,expirydate,commencedate,contractgroup,contractvenue, ReturnHomeDate);
                //update
                int updateGetContractDetails_Indian_ID = Queries.UpdateContractDetails_Indian_ID(office);
                 string log1 = "Contract Created:" +   "Contract # : " + contractno +  "," + "profile ID:" + profileid +  "," + "SalesRep:" + contsalesrepDropDownList.SelectedItem.Text +  "," + "TO Manager:" + TOManagerDropDownList.SelectedItem.Text +  "," + "Button Up:" + ButtonUpDropDownList.SelectedItem.Text +  "," + "Deal Date:" + dealdate1 +  "," + "Deal Status:" + dealstatusDropDownList.SelectedItem.Text +  "," + "Contract Created Date:" + DateTime.Now.ToShortDateString() +  "," + "" + "Contract type:" + contracttypeDropDownList.SelectedItem.Text +  "," + "MC Waiver Applicable:" + mcwaiver +  "," + "Mode:" + financeradiobuttonlist.SelectedItem.Text +  "," + "Remark:" + "" +  "," +
                     "Pancard:" + pancardnoTextBox.Text +  "," + "Adhar card:" + adharcardTextBox.Text +  "," + "Property fee:" + propertyfee +  "," + "MC First Yr:" + mcstartdate +  "," + "Memberfee:" + memberfee +  "," + "Canx Contract No:" + CanxContractNoTextBox.Text +  "," +
                     "contractdetailsID:" + contractdetailsID +  "," + "Canx Date:" + "" +  "," + "Loan BU Officer:" + loanbu +  "," + "GSTIN No:" + gstinTextBox.Text +  "," + "Co. Pan No:" + companypanoTextBox.Text +  "," + "Week no:" + dealwkno +  "," + "Deck no:" + "" +  "," + "Deck details:" + "" +  "," + "Contract comment:" + contractcommentTextBox.Text +  "," +
                     "Contract Created by :" + user +  "," + "Bu After 6pm:" + bu6 +  "," + "Selected Option:" + updownoption +  "," + "Commence date:" + commencedate +  "," + "Expiry date:" + expirydate +  "," + "Contract Group:" + contractgroup +  "," + "Contract Venue:" + contractvenue +  "," + "Return Home Date:" + ReturnHomeDate;
               
                int insertlog1 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractnote + "-" + type2, "", log1);


                int cteamdetails = Queries.InsertContractTeamDetails(contractdetailsID, "", "No","No", "No", DateTime.Now.ToString(), user, "", "");
                string logctd = "Contract team Details:" +  "contractdetailsID:" + contractdetailsID +  "," + "Rep Report: No "+  "," + "To Report: No"+  "," +
                     "SMS: No" +  "," + "Created by:" + user +  "," + "created date:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "Updated date:" + "";
                int insertlogctd = Queries.InsertContractLogs_India(profileid, contractdetailsID, logctd, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractteamnote, "", logctd);


                if (financeradio=="Finance")
                {
                    Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);
                    //update contractno n finance no 
                   
                }
                else
                {
                    Finance_No = "";
                }
              
                int insertpointsfinancedetails = Queries.InsertFinance_Details_Indian(Finance_Details_Id, profileid, contractno, financeradio, currency, Affiliate_Type, Total_Price_Including_Tax, Initial_Deposit_Percent, Initial_Deposit_Amount, Balance_Payable, Total_Inital_Deposit, Initial_Deposit_Balance, Bal_Amount_Payable, Payment_Method, No_Installments.ToString(), Installment_Amount, Finance_Type, Finance_No, IGSTrate, Interestrate, documentationfee, IGST_Amount, No_Emi, emiamt,"", oldLANo,"0","0", contractdetailsID, baladepamtdateTextBox.Text, "0", eurorate, loanamtINEuro, monthlyPremiumprotectionplan,"");
                int updatefinanceid = Queries.UpdateFinance_Details_Indian_ID(office);
                if (financeradio == "Finance")
                {
                    int updatefinanceno = Queries.UpdateFinanceNo(VenueDropDownList.SelectedItem.Text, Finance_Type, contracttypeDropDownList.SelectedItem.Text);
                }
                else { }
                //points contract
                string ContractPoints_ID = Queries.GetContract_Points_Indian_ID(office);
                int insertpoints = Queries.InsertContract_Points_Indian(ContractPoints_ID, profileid, contractno, pointsclub, newpointsrightTextBox.Text, EntitlementPoinDropDownList.SelectedItem.Text, totalptrightsTextBox.Text, firstyrTextBox.Text, tenureTextBox.Text, lastyrTextBox.Text, nopersonsTextBox.Text, contractdetailsID);
                int updatepointgeno = Queries.UpdateContract_Points_Indian_ID(office);
                string log2 = "New Points Details:" +  "Points ID:" + ContractPoints_ID +  "," + "Profileid:" + profileid +  "," + "ContractNo:" + contractno +  "," + "Club:" + pointsclub +  "," +
                    "New Points:" + newpointsrightTextBox.Text +  "," + "Entitlement:" + EntitlementPoinDropDownList.SelectedItem.Text +  "," + "total Points Right:" + totalptrightsTextBox.Text +  "," + "1st Yr Occ:" + firstyrTextBox.Text +  "," +
                    "Tenure:" + tenureTextBox.Text +  "," + "Last Yr Occ:" + lastyrTextBox.Text +  "," + "No.Persons:" + nopersonsTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID;
                int insertlog2 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log2, user, DateTime.Now.ToString(), "Indian_contracts.aspx", newpointsnote, "", log2);




                string Contract_PA_Id = Queries.GetContract_PA_Indian_ID(office);
                string balpa;
                if (balancedueTextBox.Text == "" || balancedueTextBox.Text == null || balancedueTextBox.Text == "NaN")
                {
                    balpa = "";
                }
                else
                {
                    balpa = balancedueTextBox.Text;
                }
                if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                {
                    if (financeradio == "Finance")
                    {

                        if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else
                        {
                            //get max installmentdate n update finance startdate
                            int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        }

                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text,"0");

                    }
                }
                else
                {
                    for (i = 1; i <= Convert.ToInt32(No_Installments); i++)
                    {
                        string installemnt_No = inst + " " + i;
                        ia = "textBox_" + i + "1";
                        iamt = Request.Form[ia];
                        idt = "textBox_" + i + "2";
                        idate = Request.Form[idt];
                        string insinvoice = Queries.GetInstallmentInvoiceNo(office);
                        int FinanceInvoice = Queries.InsertContract_Installments_Indian(profileid, contractno, installemnt_No, iamt, idate,insinvoice, contractdetailsID,depositmethodDropDownList.SelectedItem.Text);
                        //update instalmentno
                        int update = Queries.UpdateInstallmentInvoiceNo(office);
                        string log5 = "Installment Details:" +   "Profile id: " + profileid +  "," + "Contractno: " + contractno +  "," + "Installment #:" + installemnt_No +  "," + "Installment Amt:" + iamt +  "," +
                            "Installment Date:" + idate +  "," + "Invoice no:" + insinvoice +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Payment Mode:" + depositmethodDropDownList.SelectedItem.Text;
                        int insertlog5 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", installmentnote, "", log5);

                    }
                    if (financeradio == "Finance")
                    {
                        //get max installmentdate n update finance startdate
                        int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        string log3 = "Finance Details:" +  " Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                             "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," +
                             "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," +
                             "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + Queries.GetFinanceMonth(contractno) +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + "0" +  "," + "RegistryCollection Amt:" + "0" +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," +
                             "Old loan amt:" + "0" +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan+","+"Open LA No:"+"";
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);
                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text,"0");

                    }
                    else if (financeradio == "Non Finance")
                    {
                        string log3 = "Finance Details:" + " Finance ID:" + Finance_Details_Id + "," + "Profile id:" + profileid + "," + "Contractno:" + contractno + "," + "Mode:" + financeradio + "," + "Currency:" + currency + "," + "Affiliation:" + Affiliate_Type + "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax + "," + "Initial Deposit" + Initial_Deposit_Percent + "," +
                              "Depsoit Amt:" + Initial_Deposit_Amount + "," + "Bal Payable if less than 10%:" + Balance_Payable + "," + "Total Initial Deposit:" + Total_Inital_Deposit + "," + "Deposit Bal:" + Initial_Deposit_Balance + "," + "Bal Amt.:" + Bal_Amount_Payable + "," + "Payment Method:" + Payment_Method + "," + "No. Installment:" + No_Installments.ToString() + "," + "Installment Amt.:" + Installment_Amount + "," +
                              "Finance type:" + Finance_Type + "," + "Finance No:" + Finance_No + "," + "IGST Rate:" + IGSTrate + "," + "Interest rate:" + Interestrate + "," + "Documentation fee:" + documentationfee + "," + "IGST Amt:" + IGST_Amount + "," + "No. EMI:" + No_Emi + "," + "Emai Amt:" + emiamt + "," + "Finance Start month:" + "" + "," + "Old Loan Agreement No:" + oldLANo + "," + "RegistryCollection term:" + "0" + "," +
                              "RegistryCollection Amt:" + "0" + "," + "contractdetailsID:" + contractdetailsID + "," + "bal Dep Date:" + baladepamtdateTextBox.Text + "," + "Old loan amt:" + "0" + "," + "Euro Rate applicable:" + eurorate + "," + "Loan Amt in Euro:" + loanamtINEuro + "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan + "," + "Open LA No:" + "";
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);


                    }
                }

                string convertvolume, converttax, convertadminfee, convertdeposit, converttotalvolume;
                DataSet exrds = Queries.LoadExchange_Rate();
                string dollarrate = exrds.Tables[0].Rows[0]["ERates_USD"].ToString();
                if (currencyDropDownList.SelectedItem.Text == "INR")
                {
                    if (newpointsTextBox.Text == "" || newpointsTextBox.Text == null || newpointsTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(newpointsTextBox.Text) / Convert.ToDouble(dollarrate),0);
                        convertvolume = valueamt.ToString();
                    }
                    if (adminfeeTextBox.Text == "" || adminfeeTextBox.Text == null || adminfeeTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(adminfeeTextBox.Text) /Convert.ToDouble(dollarrate),0);
                        convertadminfee = valueamt.ToString();
                    }
                  
                    if (TotalTaxTextBox.Text == "" || TotalTaxTextBox.Text == null || TotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
                       
                        double valueamt = Math.Round(Convert.ToDouble(TotalTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        converttax = valueamt.ToString();
                    }
                    if (depositTextBox.Text == "" || depositTextBox.Text == null || depositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(depositTextBox.Text)/ Convert.ToDouble(dollarrate),0);
                        convertdeposit = valueamt.ToString();
                    }
                    if (totalpriceInTaxTextBox.Text == "" || totalpriceInTaxTextBox.Text == null || totalpriceInTaxTextBox.Text == "NaN")
                    {
                        converttotalvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totalpriceInTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        converttotalvolume = valueamt.ToString();
                    }
                }
                else
                {
                    if (totpurchpriceTextBox.Text == "" || totpurchpriceTextBox.Text == null || totpurchpriceTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt =  Math.Round(Convert.ToDouble(totpurchpriceTextBox.Text),0);
                        convertvolume = valueamt.ToString();
                    }
                    if (adminfeeTextBox.Text == "" || adminfeeTextBox.Text == null || adminfeeTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(adminfeeTextBox.Text),0);
                        convertadminfee = valueamt.ToString();
                    }
                  
                    if (TotalTaxTextBox.Text == "" || TotalTaxTextBox.Text == null || TotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
                         
                        double valueamt = Math.Round(Convert.ToDouble(TotalTaxTextBox.Text), 0);
                        converttax = valueamt.ToString();
                    }
                    if (depositTextBox.Text == "" || depositTextBox.Text == null || depositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(depositTextBox.Text),0);
                        convertdeposit = valueamt.ToString();
                    }
                    if (totalpriceInTaxTextBox.Text == "" || totalpriceInTaxTextBox.Text == null || totalpriceInTaxTextBox.Text == "NaN")
                    {
                        converttotalvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totalpriceInTaxTextBox.Text), 0);
                        converttotalvolume = valueamt.ToString();
                    }
                    
                }
                int insertpointsPA = Queries.InsertContract_PA_Indian(Contract_PA_Id, profileid, contractno, newpointsTextBox.Text, conversionfeeTextBox.Text, adminfeeTextBox.Text, totpurchpriceTextBox.Text, cgstTextBox.Text, sgstTextBox.Text, Total_Price_Including_Tax, depositTextBox.Text, balanceTextBox.Text, balpa, remarksTextBox.Text, contractdetailsID, "", "", "", "", "", "", "", "", convertvolume, convertadminfee, converttax, convertdeposit, TotalTaxTextBox.Text, converttotalvolume, dollarrate);
                int updatepageno = Queries.UpdateContract_PA_Indian_ID(office);
                string log4 = "New Points PA:" +  "PA_ID:" + Contract_PA_Id +  "," + "Profileid:" + profileid +  "," + "ContractNo:" + contractno +  "," + "New Points:" + newpointsTextBox.Text +  "," + "Conversion Fee:" + conversionfeeTextBox.Text +  "," + "Admin Fee:" + adminfeeTextBox.Text +  "," + "Total Purchase price:" + totpurchpriceTextBox.Text +  "," +
                     "Total Tax:" + TotalTaxTextBox.Text +  "," + "CGST:" + cgstTextBox.Text +  "," + "SGST:" + sgstTextBox.Text +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Deposit Amt:" + depositTextBox.Text +  "," + "balance Amt:" + balanceTextBox.Text +  "," + "Balance Due date:" + balpa +  "," +
                     "Remark:" + remarksTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Converted Vol:" + convertvolume +  "," + "Converted Admin fee:" + convertadminfee +  "," + "Converted Tax:" + converttax +  "," + "Converted Deposit:" + convertdeposit +  "," + "TotalTax:" + TotalTaxTextBox.Text+","+"Total Volume(USD):"+ converttotalvolume+","+"Exchange rate:"+ dollarrate;
                int insertlog4 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log4, user, DateTime.Now.ToString(), "Indian_contracts.aspx", PAnote, "", log4);



                int crmdetails = Queries.InsertCRM_details(profileid, contractdetailsID, PrgmsrcTextBox.Text, RefByTextBox.Text, "", DateTime.Now.ToString(), "", user, "", "Active");
                string logc = "CRM Details:" +  "," + "Profile id:" + profileid +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Program Src: " + PrgmsrcTextBox.Text +  "," + "Referred by:" + RefByTextBox.Text +  "," +
                     "Comment:" + "" +  "," + "Created by:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "User:" + user +  "," + "Updated by:" + "" +  "," + "status:" + "Active";
                int insertlogc = Queries.InsertContractLogs_India(profileid, contractdetailsID, logc, user, DateTime.Now.ToString(), "Indian_contracts.aspx", crmnote, "", logc);
                //generate receipt               
                DataSet dsrecp = Queries.LoadIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                int CurrentYear = DateTime.Today.Year;
                int PreviousYear = DateTime.Today.Year - 1;
                int NextYear = DateTime.Today.Year + 1;
                string PreYear = PreviousYear.ToString();
                string NexYear = NextYear.ToString();
                string CurYear = CurrentYear.ToString();
                int cyr = Convert.ToInt32(CurYear) % 100;
                string cyr1 = cyr.ToString("yy");
                int tpyr = Convert.ToInt32(PreYear) % 100;
                int nxyr = Convert.ToInt32(NexYear) % 100;
                string FinYear = null;
                string supplyplace = dsrecp.Tables[0].Rows[0]["SupplyPlace"].ToString();
                string state = dsrecp.Tables[0].Rows[0]["State"].ToString();
                string statecode = dsrecp.Tables[0].Rows[0]["StateCode"].ToString();
                string productcode = "SALE OF POINTS (HOLIDAY OWNERSHIP)";      
                string SAC = "996311";
                string GSTpercent = "9%";
                string receipttype = "Deposit";

                double floodcess = 0;

                if (DateTime.Today.Month > 3)
                {
                    //  FinYear = cyr + "-" + nxyr;
                    FinYear = CurrentYear + "-" + nxyr;
                }
                else
                {
                    //FinYear = tpyr + "-" + cyr;
                    FinYear = PreviousYear + "-" + cyr;

                }
                string invoiceno = dsrecp.Tables[0].Rows[0]["ReceiptStart"].ToString() + "/" + FinYear + "/" + dsrecp.Tables[0].Rows[0]["ReceiptGen_Code"].ToString();
                if (intialdeppercentTextBox.Text == "" || intialdeppercentTextBox.Text == "NaN" || intialdeppercentTextBox.Text == "0" || intialdeppercentTextBox.Text == null)
                {
                }
                else
                {
                    //calculate gst on intial dep    
                    if (pdoldamtTextBox.Text == "" || pdoldamtTextBox.Text == "NaN" || pdoldamtTextBox.Text == "0" || pdoldamtTextBox.Text == null)
                    {
                        if (currencyDropDownList.SelectedItem.Text == "INR")
                        {
                            double indeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double gst = Math.Round(indeposit / 118 * 18 / 2);
                            double taxableamt = Math.Round(indeposit / 118 * 100);
                            if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                            {
                                floodcess = Math.Round(taxableamt * 0.01);

                            }
                            else
                            {
                                floodcess = 0;
                            }

                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode , SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype,indeposit.ToString(),totaldeposit.ToString(),"0", floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +    "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                  "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                  "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," + "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," +
                                  "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + indeposit.ToString() +  "," + "Total Deposit(USD):" + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();

                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                        }
                        else
                        {
                            double currentrate = Convert.ToDouble(foreigncurrency);

                            double indeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) * currentrate);
                            double gst = 0;
                            double taxableamt = 0;
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);                            
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace,state,statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(), depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "INR", currentrate.ToString(), DateTime.Now.ToShortDateString(), intialdeppercentTextBox.Text, "Deposit", intialdeppercentTextBox.Text, totaldeposit.ToString(), "0", floodcess.ToString());

                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +    "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                              "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                              "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," + "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," +
                              "Actual Amt:" + intialdeppercentTextBox.Text +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + intialdeppercentTextBox.Text +  "," + "Total Deposit in USD: " + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                        }


                    }
                    else
                    {
                        if (currencyDropDownList.SelectedItem.Text == "INR")
                        {
                            double oldamt = Convert.ToDouble(pdoldamtTextBox.Text);
                            double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double indeposit = fulldeposit - oldamt;
                            double gst = Math.Round(indeposit / 118 * 18 / 2);
                            double taxableamt = Math.Round(indeposit / 118 * 100);
                            if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                            {
                                floodcess =  Math.Round(taxableamt * 0.01);

                            }
                            else
                            {
                                floodcess = 0;
                            }

                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(),GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(), depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, fulldeposit.ToString(), totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +   "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() + "," +
                                "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," +
                                "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," +
                                "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                        }
                        else
                        {
                            double currentrate = Convert.ToDouble(foreigncurrency);
                            double oldamt = Convert.ToDouble(pdoldamtTextBox.Text);
                            double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double indeposit1 = fulldeposit - oldamt;
                            double indeposit = Math.Round(Convert.ToDouble(indeposit1) * currentrate);
                            double gst = 0;
                            double taxableamt = 0;
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(), depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "INR", currentrate.ToString(), DateTime.Now.ToShortDateString(), indeposit1.ToString(),receipttype , intialdeppercentTextBox.Text, totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +   "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," +
                                "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," +
                                "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," + "Actual Amt:" + indeposit1.ToString() +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                        }

                    }
                }

                SOR_AdditionalName(contractdetailsID);
                LoadDocuments(contractdetailsID, office, financeradiobuttonlist.SelectedItem.Text, contracttypeDropDownList.SelectedItem.Text, Affiliate_Type, mcwaiver, CanxContractNoTextBox.Text, companynameTextBox.Text, StateDropDownList.SelectedItem.Text);
                Button7.Visible = true;
                string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";


                ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);
                contractnoTextBox.Text = contractno;
                contractnoTextBox.ReadOnly = true;
                CreateButton.Visible = false;

            }//points contract


            else if (contracttype == "Trade-In-Points")
            {
                if (financeradio == "Finance")
                {
                    if (Finance_Type == "Pashuram Finance")
                    { 
                        DataSet dsfmr = Queries.LoadFinanceMethodRates(Finance_Type, ddyr);
                        IGSTrate = dsfmr.Tables[0].Rows[0]["IGST_Rate"].ToString() + "%";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = igstamtTextBox.Text;
                        No_Emi = noemiTextBox.Text;
                        emiamt = emiamtTextBox.Text;
                        eurorate = "0";
                        loanamtINEuro = "0";
                        monthlyPremiumprotectionplan = "0";
                    }
                    else if (Finance_Type == "Crown Finance")
                    {
                        No_Emi = noemiTextBox.Text;
                        DataSet dsfmr = Queries.LoadCrownFinanceMethodRates(Finance_Type, ddyr, No_Emi);
                        IGSTrate = "0";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = "0";
                        emiamt = emiamtTextBox.Text;
                        eurorate = eurorateTextBox.Text;
                        loanamtINEuro = loanamtINEuroTextBox.Text;
                        monthlyPremiumprotectionplan = monthlyPremiumprotectionplanTextBox.Text;
                    }
                    else
                    {
                        IGSTrate = "0";
                        Interestrate = "0";
                    }
                
                }
                else if (financeradio == "Non Finance")
                {

                    Finance_No = "0";
                    documentationfee = "0";
                    IGST_Amount = "0";
                    No_Emi = "0";
                    emiamt = "0";
                    IGSTrate = "0";
                    Interestrate = "0";
                    eurorate = "0";
                    loanamtINEuro = "0";
                    monthlyPremiumprotectionplan = "0";
                }
                DataSet dsmc = Queries.LoadMCChart(Request.Form[ntipclubDropDownList.UniqueID], tipfirstyrTextBox.Text, currencyDropDownList.SelectedItem.Text);

                if (dsmc.Tables[0].Rows.Count == 0)
                {
                    propertyfee = "TBA";
                    memberfee = "TBA";
                    membercgst = "TBA";
                    membersgst = "TBA";

                }
                else
                {
                    propertyfee = dsmc.Tables[0].Rows[0]["Property_fee"].ToString();
                    memberfee = dsmc.Tables[0].Rows[0]["Member_fee"].ToString();
                    membercgst = dsmc.Tables[0].Rows[0]["Member_CGST"].ToString();
                    membersgst = dsmc.Tables[0].Rows[0]["Member_SGST"].ToString();
                }
                string commencedate = "01-01-" + tipfirstyrTextBox.Text;
                string expirydate = "12-31-" + tiplastyrTextBox.Text;
                int occyr = Convert.ToInt32(tipfirstyrTextBox.Text) - 1;
                string mcstartdate = Queries.LoadMC_PaymentDate(occyr); // "11/1/" + occyr;
                string ptenure = tiptenureTextBox.Text;

                if (PrimarynationalityDropDownList.SelectedItem.Text == "Indian" || PrimarynationalityDropDownList.SelectedItem.Text == "INDIAN" || PrimarynationalityDropDownList.SelectedItem.Text == "OCI" || PrimarynationalityDropDownList.SelectedItem.Text == "PIO")
                {
                    if (venue == "North Goa" || venue == "NORTH GOA")
                    {

                        if (venuegroup == "Coldline" || venuegroup == "COLDLINE")
                        {
                            ctno = Queries.GetTimeshareContractNoIndian(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            //get the preferred lang of profile
                            DataSet dslang = Queries.LoadProfile_PrimaryLang(Session["ProfileID"].ToString());
                            string preferredlang = dslang.Tables[0].Rows[0]["Primary_Language"].ToString();
                            if (preferredlang.StartsWith("Hindi"))
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno +"H"+ "W" + "E";
                                    }

                                }
                            }//preferred lang-hindi
                            else
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }

                            }//else preferred lang

                        }//if veneugrp
                        else
                        {
                            if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                            {
                                ctno = Queries.GetTimeshareContractNoIndian_CancelledMember(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//canx mem


                            else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                            {
                                ctno = Queries.GetTimeshareContractNoIndian_MemberAmb(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//else mem amb n gc
                            else
                            {
                                ctno = Queries.GetTimeshareContractNoIndian(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }


                            }//else mktg prgms


                        }//else veneugrp

                    }//if venue
                    else
                    {
                        if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                        {
                            ctno = Queries.GetTimeshareContractNoIndian_CancelledMember(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//canx mem
                        else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                        {
                            ctno = Queries.GetTimeshareContractNoIndian_MemberAmb(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//else mem amb n gc
                        else
                        {
                            ctno = Queries.GetTimeshareContractNoIndian(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }


                        }//else mktg prgm

                    }//else venue
                    int updatecontno = Queries.UpdateContractNoInd(VenueDropDownList.SelectedItem.Text, Request.Form[ntipclubDropDownList.UniqueID]);
                }//if nationality=indian oci pio
                else
                {
                    if (venue == "North Goa" || venue == "NORTH GOA")
                    {

                        if (venuegroup == "Coldline" || venuegroup == "COLDLINE")
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            //get the preferred lang of profile
                            DataSet dslang = Queries.LoadProfile_PrimaryLang(Session["ProfileID"].ToString());
                            string preferredlang = dslang.Tables[0].Rows[0]["Primary_Language"].ToString();
                            if (preferredlang.StartsWith("Hindi"))
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }
                            }//preferred lang-hindi
                            else
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }

                            }//if preferred lang

                        }//if veneugrp
                        else
                        {
                            if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian_CancelledMember(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }
                            else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian_MemberAmb(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//else MarketingProgramDropDownList
                            else
                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }


                            }


                        }//else veneugrp

                    }//if venue
                    else
                    {
                        if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian_CancelledMember(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }
                        else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian_MemberAmb(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//else MarketingProgramDropDownList
                        else
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian(venue, Request.Form[ntipclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }


                        }

                    }//else venue
                    int updatecontno = Queries.UpdateContractNoNInd(VenueDropDownList.SelectedItem.Text, Request.Form[ntipclubDropDownList.UniqueID]);

                }


                int insertcontractdetails = Queries.InsertContractDetails_Indian(contractno, profileid, contsalesrepDropDownList.SelectedItem.Text, TOManagerDropDownList.SelectedItem.Text, ButtonUpDropDownList.SelectedItem.Text, dealdate1, dealstatusDropDownList.SelectedItem.Text, DateTime.Now.ToString(), "", contracttypeDropDownList.SelectedItem.Text, mcwaiver, financeradiobuttonlist.SelectedItem.Text, contractremarkTextBox.Text, pancardnoTextBox.Text.ToUpper(), adharcardTextBox.Text.ToUpper(), propertyfee, mcstartdate, memberfee, membercgst, membersgst, CanxContractNoTextBox.Text, contractdetailsID, "", loanbu, gstinTextBox.Text.ToUpper(), companypanoTextBox.Text.ToUpper(), dealwkno.ToString(), "", "", contractcommentTextBox.Text, user , bu6,updownoption,expirydate,commencedate,contractgroup,contractvenue, ReturnHomeDate);
                //update
                int updateGetContractDetails_Indian_ID = Queries.UpdateContractDetails_Indian_ID(office);
                string log1 = "Contract Created:" + "Contract # : " + contractno +  "," + "profile ID:" + profileid +  "," + "SalesRep:" + contsalesrepDropDownList.SelectedItem.Text +  "," + "TO Manager:" + TOManagerDropDownList.SelectedItem.Text +  "," + "Button Up:" + ButtonUpDropDownList.SelectedItem.Text +  "," + "Deal Date:" + dealdate1 +  "," + "Deal Status:" + dealstatusDropDownList.SelectedItem.Text +  "," + "Contract Created Date:" + DateTime.Now.ToShortDateString() +  "," + "" + "Contract type:" + contracttypeDropDownList.SelectedItem.Text +  "," + "MC Waiver Applicable:" + mcwaiver +  "," + "Mode:" + financeradiobuttonlist.SelectedItem.Text +  "," + "Remark:" + "" +  "," +
                                    "Pancard:" + pancardnoTextBox.Text +  "," + "Adhar card:" + adharcardTextBox.Text +  "," + "Property fee:" + propertyfee +  "," + "MC First Yr:" + mcstartdate +  "," + "Memberfee:" + memberfee +  "," + "Canx Contract No:" + CanxContractNoTextBox.Text +  "," +
                                    "contractdetailsID:" + contractdetailsID +  "," + "Canx Date:" + "" +  "," + "Loan BU Officer:" + loanbu +  "," + "GSTIN No:" + gstinTextBox.Text +  "," + "Co. Pan No:" + companypanoTextBox.Text +  "," + "Week no:" + dealwkno +  "," + "Deck no:" + "" +  "," + "Deck details:" + "" +  "," + "Contract comment:" + contractcommentTextBox.Text +  "," +
                                    "Contract Created by :" + user +  "," + "Bu After 6pm:" + bu6 +  "," + "Selected Option:" + updownoption +  "," + "Commence date:" + commencedate +  "," + "Expiry date:" + expirydate +  "," + "Contract Group:" + contractgroup +  "," + "Contract Venue:" + contractvenue +  "," + "Return Home Date:" + ReturnHomeDate;
                int insertlog1 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractnote + "-" + type3, "", log1);



                int cteamdetails = Queries.InsertContractTeamDetails(contractdetailsID, "", "No", "No", "No", DateTime.Now.ToString(), user, "", "");
                string logctd = "Contract team Details:" + "contractdetailsID:" + contractdetailsID + "," + "Rep Report: No " + "," + "To Report: No" + "," +
                     "SMS: No" + "," + "Created by:" + user + "," + "created date:" + DateTime.Now.ToString() + "," + "updated by:" + "" + "," + "Updated date:" + "";
                int insertlogctd = Queries.InsertContractLogs_India(profileid, contractdetailsID, logctd, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractteamnote, "", logctd);

                string oldmemtype;
                if(tpoldmtypeTextBox.Text==""|| tpoldmtypeTextBox.Text==null)
                {
                    oldmemtype = "N/A";
                }
                else
                {
                    oldmemtype = tpoldmtypeTextBox.Text;
                }
                string ContractTradeInPoint_ID = Queries.GetContract_Trade_In_Points_Indian_ID(office);
                int inserttradeinpoints = Queries.InsertContract_Trade_In_Points_Indian(ContractTradeInPoint_ID, profileid, contractno, tipresortTextBox.Text.ToUpper(), tipnopointsTextBox.Text, tipcontnoTextBox.Text.ToUpper(), tipptsvalueTextBox.Text, Request.Form[ntipclubDropDownList.UniqueID], tipnewpointsTextBox.Text, tipmtypeDropDownList.SelectedItem.Text, tiptotalpointsTextBox.Text, tipfirstyrTextBox.Text, tiptenureTextBox.Text, tiplastyrTextBox.Text, tipnopersonsTextBox.Text, contractdetailsID, tipactualptsvalueTextBox.Text, oldmemtype.ToUpper());
                int updatetipgeno = Queries.UpdateContract_Trade_In_Points_Indian_ID(office);
                string log2 = "Trade In Points:" +   "Tradeinpoints id:" + ContractTradeInPoint_ID +  "," + "Profile:" + profileid +  "," + "Contractno:" + contractno +  "," + "Resort:" + tipresortTextBox.Text.ToUpper() +  "," + "Points:" + tipnopointsTextBox.Text +  "," +
                      "Cont.No:" + tipcontnoTextBox.Text.ToUpper() +  "," + "Points Value:" + tipptsvalueTextBox.Text +  "," + "Club:" + Request.Form[ntipclubDropDownList.UniqueID] +  "," + "New Points:" + tipnewpointsTextBox.Text +  "," + "Entitlement:" + tipmtypeDropDownList.SelectedItem.Text +  "," +
                      "Total Points:" + tiptotalpointsTextBox.Text +  "," + "1st Yr Occ:" + tipfirstyrTextBox.Text +  "," + "Tenure:" + tiptenureTextBox.Text +  "," + "Last Yr Occ:" + tiplastyrTextBox.Text +  "," + "No.persons:" + tipnopersonsTextBox.Text +  "," + "Actual points value:" + tipactualptsvalueTextBox.Text +  "," + "Old Membership type:" + oldmemtype.ToUpper() +  "," + "contractdetailsID:" + contractdetailsID;
                int insertlog2 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log2, user, DateTime.Now.ToString(), "Indian_contracts.aspx", tradeinnote, "", log2);


                string oldLoanAmountTIP;
                if(tiploanamtTextBox.Text==""|| tiploanamtTextBox.Text=="NaN"|| tiploanamtTextBox.Text==null)
                {
                    oldLoanAmountTIP = "0";
                }
                else
                {
                    oldLoanAmountTIP= tiploanamtTextBox.Text;
                }
                string openLAno;
                if(OpenLAnoPTextBox.Text==""|| OpenLAnoPTextBox.Text=="NaN"|| OpenLAnoPTextBox.Text==null)
                {
                    openLAno = "";
                }
                else
                {
                    openLAno = OpenLAnoPTextBox.Text;
                }

                if (financeradio == "Finance")
                {
                    //get the finance no 
                    Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);
                   
                }
                else
                {
                    Finance_No = "";
                }
                int insertpointsfinancedetails = Queries.InsertFinance_Details_Indian(Finance_Details_Id, profileid, contractno, financeradio, currency, Affiliate_Type, Total_Price_Including_Tax, Initial_Deposit_Percent, Initial_Deposit_Amount, Balance_Payable, Total_Inital_Deposit, Initial_Deposit_Balance, Bal_Amount_Payable, Payment_Method, No_Installments.ToString(), Installment_Amount, Finance_Type, Finance_No, IGSTrate, Interestrate, documentationfee, IGST_Amount, No_Emi, emiamt,"", oldLANo, "0", "0", contractdetailsID, baladepamtdateTextBox.Text, oldLoanAmountTIP, eurorate, loanamtINEuro, monthlyPremiumprotectionplan, openLAno);
                int updatefinanceid = Queries.UpdateFinance_Details_Indian_ID(office);
                if (financeradio == "Finance")
                {

                    //update contractno n finance no 
                    int updatefinanceno = Queries.UpdateFinanceNo(VenueDropDownList.SelectedItem.Text, Finance_Type, contracttypeDropDownList.SelectedItem.Text);
                }
                else
                { }

                if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                {
                    if (financeradio == "Finance")
                    {

                        if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else
                        {
                            //get max installmentdate n update finance startdate
                            int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        }

                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text,oldLoanAmountTIP);

                    }
                }
                else
                {
                    for (i = 1; i <= Convert.ToInt32(No_Installments); i++)
                    {
                        string installemnt_No = inst + " " + i;
                        ia = "textBox_" + i + "1";
                        iamt = Request.Form[ia];
                        idt = "textBox_" + i + "2";
                        idate = Request.Form[idt];

                        string insinvoice = Queries.GetInstallmentInvoiceNo(office);
                        int FinanceInvoice = Queries.InsertContract_Installments_Indian(profileid, contractno, installemnt_No, iamt, idate, insinvoice, contractdetailsID,depositmethodDropDownList.SelectedItem.Text );
                        //update instalmentno
                        int update = Queries.UpdateInstallmentInvoiceNo(office);
                         string log5 = "Installment Details:" +   "Profile id: " + profileid +  "," + "Contractno: " + contractno +  "," + "Installment #:" + installemnt_No +  "," + "Installment Amt:" + iamt +  "," +
                            "Installment Date:" + idate +  "," + "Invoice no:" + insinvoice +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Payment Mode:" + depositmethodDropDownList.SelectedItem.Text;
                        int insertlog5 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", installmentnote, "", log5);



                    }

                    if (financeradio == "Finance")
                    {
                        //get max installmentdate n update finance startdate
                        int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        string log3 = "Finance Details:" +  " Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                            "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," +
                            "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," +
                            "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + Queries.GetFinanceMonth(contractno) +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + "0" +  "," + "RegistryCollection Amt:" + "0" +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," +
                            "Old loan amt:" + oldLoanAmountTIP +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan+","+"Open LA No:"+ openLAno;
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);


                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldLoanAmountTIP);
                    }
                    else if (financeradio == "Non Finance")
                    {
                        string log3 = "Finance Details:" +  " Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Initial Deposit" + Initial_Deposit_Percent +  "," +
                          "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," + "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," +
                          "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," + "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + "" +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + "0" +  "," +
                          "RegistryCollection Amt:" + "0" +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," + "Old loan amt:" + oldLoanAmountTIP +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan + "," + "Open LA No:" + openLAno;
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);

                    }
                }

                string Contract_PA_Id = Queries.GetContract_PA_Indian_ID(office);
                string balpa;
                if (balancedueTextBox.Text == "" || balancedueTextBox.Text == null || balancedueTextBox.Text == "NaN")
                {
                    balpa = "";
                }
                else
                {
                    balpa = balancedueTextBox.Text;
                }
                string uoldvolume, uoldtax, uoldadminfee, uolddeposit;
                string convertvolume, converttax, convertadminfee, convertdeposit, converttotalvolume;
                DataSet exrds = Queries.LoadExchange_Rate();
                string dollarrate = exrds.Tables[0].Rows[0]["ERates_USD"].ToString();
                if (currencyDropDownList.SelectedItem.Text == "INR")
                {
                    if (tipoldvolumeTextBox.Text == "" || tipoldvolumeTextBox.Text == null || tipoldvolumeTextBox.Text == "NaN")
                    {
                        uoldvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tipoldvolumeTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uoldvolume = valueamt.ToString();
                    }

                    if (tipoldadminTextBox.Text == "" || tipoldadminTextBox.Text == null || tipoldadminTextBox.Text == "NaN")
                    {
                        uoldadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tipoldadminTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uoldadminfee = valueamt.ToString();

                    }

                    if (tipoldtaxTextBox.Text == "" || tipoldtaxTextBox.Text == null || tipoldtaxTextBox.Text == "NaN")
                    {
                        uoldtax = "0";
                    }
                    else
                    {

                        double valueamt = Math.Round(Convert.ToDouble(tipoldtaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uoldtax = valueamt.ToString();

                    }

                    if (tipoldepositTextBox.Text == "" || tipoldepositTextBox.Text == null || tipoldepositTextBox.Text == "NaN")
                    {
                        uolddeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tipoldepositTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uolddeposit = valueamt.ToString();
                    }

                    if (conversionfeeTextBox.Text == "" || conversionfeeTextBox.Text == null || conversionfeeTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(conversionfeeTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertvolume = valueamt.ToString();
                    }
                    if (adminfeeTextBox.Text == "" || adminfeeTextBox.Text == null || adminfeeTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(adminfeeTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertadminfee = valueamt.ToString();
                    }
                    if (TotalTaxTextBox.Text == "" || TotalTaxTextBox.Text == null || TotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
                      
                        double valueamt = Math.Round(Convert.ToDouble(TotalTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        converttax = valueamt.ToString();
                    }
                  
                    if (depositTextBox.Text == "" || depositTextBox.Text == null || depositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(depositTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertdeposit = valueamt.ToString();
                    }
                    if (totalpriceInTaxTextBox.Text == "" || totalpriceInTaxTextBox.Text == null || totalpriceInTaxTextBox.Text == "NaN")
                    {
                        converttotalvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totalpriceInTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        converttotalvolume = valueamt.ToString();
                    }

                }//inr if block
                else
                {
                    if (tipoldvolumeTextBox.Text == "" || tipoldvolumeTextBox.Text == null || tipoldvolumeTextBox.Text == "NaN")
                    {
                        uoldvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tipoldvolumeTextBox.Text), 0);
                        uoldvolume = valueamt.ToString();
                    }
                    if (tipoldadminTextBox.Text == "" || tipoldadminTextBox.Text == null || tipoldadminTextBox.Text == "NaN")
                    {
                        uoldadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tipoldadminTextBox.Text), 0);
                        uoldadminfee = valueamt.ToString();

                    } 
                    if (tipoldtaxTextBox.Text == "" || tipoldtaxTextBox.Text == null || tipoldtaxTextBox.Text == "NaN")
                    {
                        uoldtax = "0";
                    }
                    else
                    {

                        double valueamt = Math.Round(Convert.ToDouble(tipoldtaxTextBox.Text), 0);
                        uoldtax = valueamt.ToString();

                    }
                    if (tipoldepositTextBox.Text == "" || tipoldepositTextBox.Text == null || tipoldepositTextBox.Text == "NaN")
                    {
                        uolddeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tipoldepositTextBox.Text), 0);
                        uolddeposit = valueamt.ToString();
                    }
                    if (totpurchpriceTextBox.Text == "" || totpurchpriceTextBox.Text == null || totpurchpriceTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totpurchpriceTextBox.Text), 0);
                        convertvolume = valueamt.ToString();
                    }
                    if (adminfeeTextBox.Text == "" || adminfeeTextBox.Text == null || adminfeeTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(adminfeeTextBox.Text), 0);
                        convertadminfee = valueamt.ToString();
                    }
                 
                    if (TotalTaxTextBox.Text == "" || TotalTaxTextBox.Text == null || TotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(TotalTaxTextBox.Text), 0);
                        converttax = valueamt.ToString();
                    }
                    if (depositTextBox.Text == "" || depositTextBox.Text == null || depositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(depositTextBox.Text), 0);
                        convertdeposit = valueamt.ToString();
                    }
                    if (totalpriceInTaxTextBox.Text == "" || totalpriceInTaxTextBox.Text == null || totalpriceInTaxTextBox.Text == "NaN")
                    {
                        converttotalvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totalpriceInTaxTextBox.Text), 0);
                        converttotalvolume = valueamt.ToString();
                    }

                }

                int insertpointsPA = Queries.InsertContract_PA_Indian(Contract_PA_Id, profileid, contractno, newpointsTextBox.Text, conversionfeeTextBox.Text, adminfeeTextBox.Text, totpurchpriceTextBox.Text, cgstTextBox.Text, sgstTextBox.Text, Total_Price_Including_Tax, depositTextBox.Text, balanceTextBox.Text, balpa, remarksTextBox.Text, contractdetailsID, tipoldvolumeTextBox.Text, tipoldadminTextBox.Text, tipoldtaxTextBox.Text, tipoldepositTextBox.Text, uoldvolume, uoldtax, uoldadminfee, uolddeposit,convertvolume,convertadminfee,converttax,convertdeposit,TotalTaxTextBox.Text, converttotalvolume, dollarrate);
                int updatepageno = Queries.UpdateContract_PA_Indian_ID(office);
                string log4 = "Trade in Points PA:" +  "PA_ID:" + Contract_PA_Id +  "," + "Profileid:" + profileid +  "," + "ContractNO:" + contractno +  "," + "New Points:" + newpointsTextBox.Text +  "," + "Conversion Fee:" + conversionfeeTextBox.Text +  "," + "Admin Fee:" + adminfeeTextBox.Text +  "," + "Total Purchase price:" + totpurchpriceTextBox.Text +  "," + "Total Tax:" + TotalTaxTextBox.Text +  "," + "CGST:" + cgstTextBox.Text +  "," +
                    "SGST:" + sgstTextBox.Text +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Deposit Amt:" + depositTextBox.Text +  "," + "balance Amt:" + balanceTextBox.Text +  "," + "Balance Due date:" + balpa +  "," + "remark:" + remarksTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Old Volume:" + tipoldvolumeTextBox.Text +  "," + "Old Admin fee:" + tipoldadminTextBox.Text +  "," +
                    "Old Total Tax:" + tipoldtaxTextBox.Text +  "," + "Old Deposit:" + tipoldepositTextBox.Text +  "," + "Converted Vol:" + convertvolume +  "," + "Converted Admin fee:" + convertadminfee +  "," + "Converted Tax:" + converttax +  "," + "Converted Deposit:" + convertdeposit + "," + "Total Volume(USD):" + converttotalvolume + "," + "Exchange rate:" + dollarrate;
                int insertlog4 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log4, user, DateTime.Now.ToString(), "Indian_contracts.aspx", PAnote, "", log4);



                int crmdetails = Queries.InsertCRM_details(profileid, contractdetailsID, PrgmsrcTextBox.Text, RefByTextBox.Text, "", DateTime.Now.ToString(), "", user, "", "Active");
                string logc = "CRM Details:" +  "Profile id:" + profileid +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Program Src: " + PrgmsrcTextBox.Text +  "," + "Referred by:" + RefByTextBox.Text +  "," +
                                 "Comment:" + "" +  "," + "Created by:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "User:" + user +  "," + "Updated by:" + "" +  "," + "status:" + "Active";
                int insertlogc = Queries.InsertContractLogs_India(profileid, contractdetailsID, logc, user, DateTime.Now.ToString(), "Indian_contracts.aspx", crmnote, "", logc);

                //generate receipt               
                DataSet dsrecp = Queries.LoadIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                int CurrentYear = DateTime.Today.Year;
                int PreviousYear = DateTime.Today.Year - 1;
                int NextYear = DateTime.Today.Year + 1;
                string PreYear = PreviousYear.ToString();
                string NexYear = NextYear.ToString();
                string CurYear = CurrentYear.ToString();
                int cyr = Convert.ToInt32(CurYear) % 100;
                string cyr1 = cyr.ToString("yy");
                int tpyr = Convert.ToInt32(PreYear) % 100;
                int nxyr = Convert.ToInt32(NexYear) % 100;
                string FinYear = null;
                string supplyplace = dsrecp.Tables[0].Rows[0]["SupplyPlace"].ToString();
                string state = dsrecp.Tables[0].Rows[0]["State"].ToString();
                string statecode = dsrecp.Tables[0].Rows[0]["StateCode"].ToString();
                string productcode = "SALE OF POINTS (HOLIDAY OWNERSHIP)";                
                string SAC = "996311";
                string GSTpercent = "9%";
                string receipttype = "Deposit";
                double floodcess = 0;
               
                if (DateTime.Today.Month > 3)
                {
                    
                    FinYear = CurrentYear + "-" + nxyr;
                }
                else
                {
                   
                    FinYear = PreviousYear + "-" + cyr;

                }
                string invoiceno = dsrecp.Tables[0].Rows[0]["ReceiptStart"].ToString() + "/" + FinYear + "/" + dsrecp.Tables[0].Rows[0]["ReceiptGen_Code"].ToString();
                if (intialdeppercentTextBox.Text == "" || intialdeppercentTextBox.Text == "NaN" || intialdeppercentTextBox.Text == "0" || intialdeppercentTextBox.Text == null)
                {
                }
                else
                {
                    //calculate gst on intial dep                 
                    if (pdoldamtTextBox.Text == "" || pdoldamtTextBox.Text == "NaN" || pdoldamtTextBox.Text == "0" || pdoldamtTextBox.Text == null)
                    {
                        if (currencyDropDownList.SelectedItem.Text == "INR")
                        {
                            double indeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double gst = Math.Round(indeposit / 118 * 18 / 2);
                            double taxableamt = Math.Round(indeposit / 118 * 100);
                            if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                            {
                                floodcess =   Math.Round(taxableamt * 0.01);

                            }
                            else
                            {
                                floodcess = 0;
                            }

                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode , SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "",receipttype, indeposit.ToString(), totaldeposit.ToString(), "0", floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" + "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                               "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                               "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," + "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," +
                               "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + indeposit.ToString() +  "," + "Total Deposit(USD):" + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                        }
                        else
                        {
                            
                            double currentrate = Convert.ToDouble(foreigncurrency);
                            double indeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) * currentrate);
                            double gst = 0;
                            double taxableamt = 0;

                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), intialdeppercentTextBox.Text, receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), "0", floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" + "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                 "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                 "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," + "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," +
                                 "Actual Amt:" + intialdeppercentTextBox.Text +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + intialdeppercentTextBox.Text +  "," + "Total Deposit in USD: " + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                        }

                    }
                    else
                    {
                        if (currencyDropDownList.SelectedItem.Text == "INR")
                        {
                            double oldamt = Convert.ToDouble(pdoldamtTextBox.Text);
                            double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double indeposit = fulldeposit - oldamt;
                            double gst = Math.Round(indeposit / 118 * 18 / 2);
                            double taxableamt = Math.Round(indeposit / 118 * 100);
                            if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                            {
                                floodcess =  Math.Round(taxableamt * 0.01);

                            }
                            else
                            {
                                floodcess = 0;
                            }

                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() + "," +
                                   "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," +
                                   "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," +
                                   "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                        }
                        else
                        {
                            double currentrate = Convert.ToDouble(foreigncurrency);
                            double oldamt = Convert.ToDouble(pdoldamtTextBox.Text);
                            double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double indeposit1 = fulldeposit - oldamt;
                            double indeposit = Math.Round(Convert.ToDouble(indeposit1) * currentrate);
                            double gst = 0;
                            double taxableamt = 0;
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), indeposit1.ToString(), receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +   "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," +
                                   "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," +
                                   "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," + "Actual Amt:" + indeposit1.ToString() +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                        }

                    }
                }
                SOR_AdditionalName(contractdetailsID);
                LoadDocuments(contractdetailsID, office, financeradiobuttonlist.SelectedItem.Text, contracttypeDropDownList.SelectedItem.Text, Affiliate_Type, mcwaiver, CanxContractNoTextBox.Text, companynameTextBox.Text, StateDropDownList.SelectedItem.Text);
                Button7.Visible = true;
                string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";


                ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);
                contractnoTextBox.ReadOnly = true;
                contractnoTextBox.Text = contractno;
                CreateButton.Visible = false;

            }//trade in points

            else if (contracttype == "Trade-In-Weeks")
            {
                if (financeradio == "Finance")
                {
                    if (Finance_Type == "Pashuram Finance")
                    {
                        
                        DataSet dsfmr = Queries.LoadFinanceMethodRates(Finance_Type, ddyr);
                        IGSTrate = dsfmr.Tables[0].Rows[0]["IGST_Rate"].ToString() + "%";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = igstamtTextBox.Text;
                        No_Emi = noemiTextBox.Text;
                        emiamt = emiamtTextBox.Text;
                        eurorate = "0";
                        loanamtINEuro = "0";
                        monthlyPremiumprotectionplan = "0";
                    }
                    else if (Finance_Type == "Crown Finance")
                    {
                        No_Emi = noemiTextBox.Text;
                        DataSet dsfmr = Queries.LoadCrownFinanceMethodRates(Finance_Type, ddyr, No_Emi);
                        IGSTrate = "0";
                        Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                        documentationfee = findocfeeTextBox.Text;
                        IGST_Amount = "0";
                        emiamt = emiamtTextBox.Text;
                        eurorate = eurorateTextBox.Text;
                        loanamtINEuro = loanamtINEuroTextBox.Text;
                        monthlyPremiumprotectionplan = monthlyPremiumprotectionplanTextBox.Text;
                    }
                    else
                    {
                        IGSTrate = "0";
                        Interestrate = "0";
                    }
                 
                   
                }
                else if (financeradio == "Non Finance")
                {

                    Finance_No = "0";
                    documentationfee = "0";
                    IGST_Amount = "0";
                    No_Emi = "0";
                    emiamt = "0";
                    IGSTrate = "0";
                    Interestrate = "0";
                    eurorate = "0";
                    loanamtINEuro = "0";
                    monthlyPremiumprotectionplan = "0";
                }
                DataSet dsmc = Queries.LoadMCChart(Request.Form[nmclubDropDownList.UniqueID], nmfirstyrTextBox.Text, currencyDropDownList.SelectedItem.Text);

                if (dsmc.Tables[0].Rows.Count == 0)
                {
                    propertyfee = "TBA";
                    memberfee = "TBA";
                    membercgst = "TBA";
                    membersgst = "TBA";

                }
                else
                {
                    propertyfee = dsmc.Tables[0].Rows[0]["Property_fee"].ToString();
                    memberfee = dsmc.Tables[0].Rows[0]["Member_fee"].ToString();
                    membercgst = dsmc.Tables[0].Rows[0]["Member_CGST"].ToString();
                    membersgst = dsmc.Tables[0].Rows[0]["Member_SGST"].ToString();
                }
                string commencedate = "01-01-" + nmfirstyrTextBox.Text;
                string expirydate = "12-31-" + nmlastyrTextBox.Text;

                int occyr = Convert.ToInt32(nmfirstyrTextBox.Text) - 1;
                string mcstartdate = Queries.LoadMC_PaymentDate(occyr); // "11/1/" + occyr;
                string ptenure = nmtenureTextBox.Text;

                if (PrimarynationalityDropDownList.SelectedItem.Text == "Indian" || PrimarynationalityDropDownList.SelectedItem.Text == "INDIAN" || PrimarynationalityDropDownList.SelectedItem.Text == "OCI" || PrimarynationalityDropDownList.SelectedItem.Text == "PIO")
                {
                    if (venue == "North Goa" || venue == "NORTH GOA")
                    {

                        if (venuegroup == "Coldline" || venuegroup == "COLDLINE")
                        {
                            ctno = Queries.GetTimeshareContractNoIndian(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            //get the preferred lang of profile
                            DataSet dslang = Queries.LoadProfile_PrimaryLang(Session["ProfileID"].ToString());
                            string preferredlang = dslang.Tables[0].Rows[0]["Primary_Language"].ToString();
                            if (preferredlang.StartsWith("Hindi"))
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }
                            }//preferred lang-hindi
                            else
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }

                            }//else preferred lang

                        }//if veneugrp
                        else
                        {
                            if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                            {
                                ctno = Queries.GetTimeshareContractNoIndian_CancelledMember(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }


                            else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                            {
                                ctno = Queries.GetTimeshareContractNoIndian_MemberAmb(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//else MarketingProgramDropDownList
                            else
                            {
                                ctno = Queries.GetTimeshareContractNoIndian(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }


                            }


                        }//else veneugrp

                    }//if venue
                    else
                    {
                        if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                        {
                            ctno = Queries.GetTimeshareContractNoIndian_CancelledMember(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }
                        else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                        {
                            ctno = Queries.GetTimeshareContractNoIndian_MemberAmb(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//else mem amb n gc
                        else
                        {
                            ctno = Queries.GetTimeshareContractNoIndian(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }


                        }

                    }//else venue
                    int updatecontno = Queries.UpdateContractNoInd(VenueDropDownList.SelectedItem.Text, Request.Form[nmclubDropDownList.UniqueID]);
                }//if nationality
                else
                {
                    if (venue == "North Goa" || venue == "NORTH GOA")
                    {

                        if (venuegroup == "Coldline" || venuegroup == "COLDLINE")
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            //get the preferred lang of profile
                            DataSet dslang = Queries.LoadProfile_PrimaryLang(Session["ProfileID"].ToString());
                            string preferredlang = dslang.Tables[0].Rows[0]["Primary_Language"].ToString();
                            if (preferredlang.StartsWith("Hindi"))
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "H" + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }
                            }//preferred lang-hindi
                            else
                            {
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }

                            }//if preferred lang

                        }//if veneugrp
                        else
                        {
                            if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian_CancelledMember(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }
                            else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian_MemberAmb(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }//ptenure

                            }//else mem amb n gc
                            else
                            {
                                ctno = Queries.GetTimeshareContractNoNonIndian(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                                if (ptenure == "30")
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "(" + ptenure + ")";
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E" + "(" + ptenure + ")";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                    }
                                }
                                else
                                {
                                    if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno;
                                    }
                                    else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                    {
                                        contractno = ctno + "E";
                                    }
                                    else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                    {
                                        contractno = ctno + "W" + "E";
                                    }

                                }


                            }


                        }//else veneugrp

                    }//if venue
                    else
                    {
                        if (MarketingProgramDropDownList.SelectedItem.Text == "CANCELLED MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "Cancelled Member" || MarketingProgramDropDownList.SelectedItem.Text == "Member Marketing" || MarketingProgramDropDownList.SelectedItem.Text == "MEMBER MARKETING")
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian_CancelledMember(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }
                        else if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")

                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian_MemberAmb(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }//ptenure

                        }//else MarketingProgramDropDownList
                        else
                        {
                            ctno = Queries.GetTimeshareContractNoNonIndian(venue, Request.Form[nmclubDropDownList.UniqueID], venuegroup);
                            if (ptenure == "30")
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "(" + ptenure + ")";
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E" + "(" + ptenure + ")";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E" + "(" + ptenure + ")";
                                }
                            }
                            else
                            {
                                if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno;
                                }
                                else if ((!AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == false))
                                {
                                    contractno = ctno + "E";
                                }
                                else if ((AffiliationvalueTextBox.Text.Contains("Emerald")) && (mcRadioButtonList.Checked == true))
                                {
                                    contractno = ctno + "W" + "E";
                                }

                            }


                        }

                    }//else venue
                    int updatecontno = Queries.UpdateContractNoNInd(VenueDropDownList.SelectedItem.Text, Request.Form[nmclubDropDownList.UniqueID]);

                }


                int insertcontractdetails = Queries.InsertContractDetails_Indian(contractno, profileid, contsalesrepDropDownList.SelectedItem.Text, TOManagerDropDownList.SelectedItem.Text, ButtonUpDropDownList.SelectedItem.Text, dealdate1, dealstatusDropDownList.SelectedItem.Text, DateTime.Now.ToString(), "", contracttypeDropDownList.SelectedItem.Text, mcwaiver, financeradiobuttonlist.SelectedItem.Text, contractremarkTextBox.Text, pancardnoTextBox.Text.ToUpper(), adharcardTextBox.Text.ToUpper(), propertyfee, mcstartdate, memberfee, membercgst, membersgst, CanxContractNoTextBox.Text, contractdetailsID, "", loanbu, gstinTextBox.Text.ToUpper(), companypanoTextBox.Text.ToUpper(), dealwkno.ToString(), "", "", contractcommentTextBox.Text, user , bu6,updownoption,expirydate,commencedate,contractgroup,contractvenue, ReturnHomeDate);
                int updateGetContractDetails_Indian_ID = Queries.UpdateContractDetails_Indian_ID(office);
                string log1 = "Contract Created:" +   "Contract # : " + contractno +  "," + "profile ID:" + profileid +  "," + "SalesRep:" + contsalesrepDropDownList.SelectedItem.Text +  "," + "TO Manager:" + TOManagerDropDownList.SelectedItem.Text +  "," + "Button Up:" + ButtonUpDropDownList.SelectedItem.Text +  "," + "Deal Date:" + dealdate1 +  "," + "Deal Status:" + dealstatusDropDownList.SelectedItem.Text +  "," + "Contract Created Date:" + DateTime.Now.ToShortDateString() +  "," + "" + "Contract type:" + contracttypeDropDownList.SelectedItem.Text +  "," + "MC Waiver Applicable:" + mcwaiver +  "," + "Mode:" + financeradiobuttonlist.SelectedItem.Text +  "," + "Remark:" + "" +  "," +
                   "Pancard:" + pancardnoTextBox.Text +  "," + "Adhar card:" + adharcardTextBox.Text +  "," + "Property fee:" + propertyfee +  "," + "MC First Yr:" + mcstartdate +  "," + "Memberfee:" + memberfee +  "," + "Canx Contract No:" + CanxContractNoTextBox.Text +  "," +
                   "contractdetailsID:" + contractdetailsID +  "," + "Canx Date:" + "" +  "," + "Loan BU Officer:" + loanbu +  "," + "GSTIN No:" + gstinTextBox.Text +  "," + "Co. Pan No:" + companypanoTextBox.Text +  "," + "Week no:" + dealwkno +  "," + "Deck no:" + "" +  "," + "Deck details:" + "" +  "," + "Contract comment:" + contractcommentTextBox.Text +  "," +
                   "Contract Created by :" + user +  "," + "Bu After 6pm:" + bu6 +  "," + "Selected Option:" + updownoption +  "," + "Commence date:" + commencedate +  "," + "Expiry date:" + expirydate +  "," + "Contract Group:" + contractgroup +  "," + "Contract Venue:" + contractvenue +  "," + "Return Home Date:" + ReturnHomeDate;
                int insertlog1 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractnote + "-" + type4, "", log1);



                int cteamdetails = Queries.InsertContractTeamDetails(contractdetailsID, "", "No", "No", "No", DateTime.Now.ToString(), user, "", "");
                string logctd = "Contract team Details:" + "contractdetailsID:" + contractdetailsID + "," + "Rep Report: No " + "," + "To Report: No" + "," +
                     "SMS: No" + "," + "Created by:" + user + "," + "created date:" + DateTime.Now.ToString() + "," + "updated by:" + "" + "," + "Updated date:" + "";
                int insertlogctd = Queries.InsertContractLogs_India(profileid, contractdetailsID, logctd, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractteamnote, "", logctd);
                string oldmemtype;
                if (twoldmtypeTextBox.Text == "" || twoldmtypeTextBox.Text == null)
                {
                    oldmemtype = "N/A";
                }
                else
                {
                    oldmemtype = twoldmtypeTextBox.Text;
                }

                string ContractTradeInWeeks_ID = Queries.GetContract_Trade_In_Weeks_Indian_ID(office);// GetContract_Trade_In_Points_Indian();
                int inserttradeinweeks = Queries.InsertContract_Trade_In_Weeks_Indian(ContractTradeInWeeks_ID, profileid, contractno, tnmresortTextBox.Text.ToUpper(), tnmapttypeTextBox.Text.ToUpper(), tnmseasonDropDownList.SelectedItem.Text, nmnowksTextBox.Text.ToUpper(), nmcontrcinoTextBox.Text.ToUpper(), nmpointsvalueTextBox.Text, Request.Form[nmclubDropDownList.UniqueID], nmnewpointsrightsTextBox.Text, nmembtypeDropDownList.SelectedItem.Text, nmtotalpointsTextBox.Text, nmfirstyrTextBox.Text, nmtenureTextBox.Text, nmlastyrTextBox.Text, nmnopersonsTextBox.Text, contractdetailsID,oldmemtype.ToUpper(), actualptsvaluewTextBox.Text);
                int updatetiwgeno = Queries.UpdateContract_Trade_In_Weeks_Indian_ID(office);
                string log2 = "Trade in weeks details:" +   "tradeinweeks id:" + ContractTradeInWeeks_ID +  "," + "Profile id:" + profileid +  "," + "ContractNo:" + contractno +  "," + "Resort:" + tnmresortTextBox.Text.ToUpper() +  "," + "Apt Type:" + tnmapttypeTextBox.Text.ToUpper() +  "," + "Season:" + tnmseasonDropDownList.SelectedItem.Text +  "," + "No Wks:" + nmnowksTextBox.Text.ToUpper() +  "," + "Cont.No:" + nmcontrcinoTextBox.Text.ToUpper() +  "," +
                     "Old Membership type" + oldmemtype.ToUpper() +  "," + "PointsValue:" + nmpointsvalueTextBox.Text + "," + "Actual Points Value:" + actualptsvaluewTextBox.Text + "," + "Club:" + Request.Form[nmclubDropDownList.UniqueID] +  "," + "New Points:" + nmnewpointsrightsTextBox.Text +  "," + "Entitlement:" + nmembtypeDropDownList.SelectedItem.Text +  "," + "Total Points:" + nmtotalpointsTextBox.Text +  "," +
                     "1st Yr Occ:" + nmfirstyrTextBox.Text +  "," + "Tenure:" + nmtenureTextBox.Text +  "," + "Last Yr Occ:" + nmlastyrTextBox.Text +  "," + "No.persons:" + nmnopersonsTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID;
                int insertlog2 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log2, user, DateTime.Now.ToString(), "Indian_contracts.aspx", tradeinnote, "", log2);


                string oldLoanAmountTIW;
                if (tiwloanamtTextBox.Text == "" || tiwloanamtTextBox.Text == "NaN" || tiwloanamtTextBox.Text == null)
                {
                    oldLoanAmountTIW = "0";
                }
                else
                {
                    oldLoanAmountTIW = tiwloanamtTextBox.Text;
                }

                string openLANo;
                if (OpenLAnoWTextBox.Text == "" || OpenLAnoWTextBox.Text == "NaN" || OpenLAnoWTextBox.Text == null)
                {
                    openLANo = "";
                }
                else
                {
                    openLANo = OpenLAnoWTextBox.Text;
                }

                if (financeradio == "Finance")
                {
                    //get the finance no 
                    Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);
                 
                }
                else
                {
                    Finance_No = "";
                }
                int insertpointsfinancedetails = Queries.InsertFinance_Details_Indian(Finance_Details_Id, profileid, contractno, financeradio, currency, Affiliate_Type, Total_Price_Including_Tax, Initial_Deposit_Percent, Initial_Deposit_Amount, Balance_Payable, Total_Inital_Deposit, Initial_Deposit_Balance, Bal_Amount_Payable, Payment_Method, No_Installments.ToString(), Installment_Amount, Finance_Type, Finance_No, IGSTrate, Interestrate, documentationfee, IGST_Amount, No_Emi, emiamt, "0", oldLANo, "", "0", contractdetailsID, baladepamtdateTextBox.Text, oldLoanAmountTIW, eurorate, loanamtINEuro, monthlyPremiumprotectionplan, openLANo);
                int updatefinanceid = Queries.UpdateFinance_Details_Indian_ID(office);

                if (financeradio == "Finance")
                {
                    int updatefinanceno = Queries.UpdateFinanceNo(VenueDropDownList.SelectedItem.Text, Finance_Type, contracttypeDropDownList.SelectedItem.Text);
                }
                else { }
                if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                {
                    if (financeradio == "Finance")
                    {

                        if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                        {
                            int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                        }
                        else
                        {
                            //get max installmentdate n update finance startdate
                            int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        }

                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text,oldLoanAmountTIW);

                    }
                }
                else
                {

                    for (i = 1; i <= Convert.ToInt32(No_Installments); i++)
                    {
                        string installemnt_No = inst + " " + i;
                        ia = "textBox_" + i + "1";
                        iamt = Request.Form[ia];
                        idt = "textBox_" + i + "2";
                        idate = Request.Form[idt];

                        string insinvoice = Queries.GetInstallmentInvoiceNo(office);
                        int FinanceInvoice = Queries.InsertContract_Installments_Indian(profileid, contractno, installemnt_No, iamt, idate, insinvoice, contractdetailsID,depositmethodDropDownList.SelectedItem.Text);
                        //update instalmentno
                        int update = Queries.UpdateInstallmentInvoiceNo(office);
                        string log5 = "Installment Details:" +  "Profile id: " + profileid +  "," + "Contractno: " + contractno +  "," + "Installment #:" + installemnt_No +  "," + "Installment Amt:" + iamt +  "," +
                           "Installment Date:" + idate +  "," + "Invoice no:" + insinvoice +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Payment Mode:" + depositmethodDropDownList.SelectedItem.Text;
                        int insertlog5 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", installmentnote, "", log5);


                    }


                    if (financeradio == "Finance")
                    {
                        //get max installmentdate n update finance startdate
                        int updatefin = Queries.UpdatefinanceStartdate(contractno);
                        string log3 = "Finance Details:" +   "Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                                                    "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," +
                                                    "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," +
                                                    "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + Queries.GetFinanceMonth(contractno) +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + "0" +  "," + "RegistryCollection Amt:" + "0" +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," +
                                                    "Old loan amt:" + oldLoanAmountTIW +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan;
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);
                        financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldLoanAmountTIW);
                    }
                    else if (financeradio == "Non Finance")
                    {
                        string log3 = "Finance Details:" +  "Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Initial Deposit" + Initial_Deposit_Percent +  "," +
                          "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," + "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," +
                          "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," + "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + "" +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + "0" +  "," +
                          "RegistryCollection Amt:" + "0" +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," + "Old loan amt:" + oldLoanAmountTIW +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan;
                        int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);

                    }
                }

                string Contract_PA_Id = Queries.GetContract_PA_Indian_ID(office);
                string balpa;
                if (balancedueTextBox.Text == "" || balancedueTextBox.Text == null || balancedueTextBox.Text == "NaN")
                {
                    balpa = "";
                }
                else
                {
                    balpa = balancedueTextBox.Text;
                }
                string uoldvolume, uoldtax, uoldadminfee, uolddeposit;
                string convertvolume, converttax, convertadminfee, convertdeposit, converttotalvolume;
                DataSet exrds = Queries.LoadExchange_Rate();
                string dollarrate = exrds.Tables[0].Rows[0]["ERates_USD"].ToString();
                if (currencyDropDownList.SelectedItem.Text == "INR")
                {
                    if (tiwoldvolumeTextBox.Text == "" || tiwoldvolumeTextBox.Text == null || tiwoldvolumeTextBox.Text == "NaN")
                    {
                        uoldvolume = "0";
                    }
                    else
                    {
                        double valueamt =Math.Round(Convert.ToDouble(tipoldvolumeTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uoldvolume = valueamt.ToString();
                    }
                    if (tiwoldadminTextBox.Text == "" || tiwoldadminTextBox.Text == null || tiwoldadminTextBox.Text == "NaN")
                    {
                        uoldadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tiwoldadminTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uoldadminfee = valueamt.ToString();

                    }
                    if (tiwoldtaxTextBox.Text == "" || tiwoldtaxTextBox.Text == null || tiwoldtaxTextBox.Text == "NaN")
                    {
                        uoldtax = "0";
                    }
                    else
                    {

                        double valueamt = Math.Round(Convert.ToDouble(tiwoldtaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uoldtax = valueamt.ToString();

                    }
                    if (tiwoldepositTextBox.Text == "" || tiwoldepositTextBox.Text == null || tiwoldepositTextBox.Text == "NaN")
                    {
                        uolddeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tiwoldepositTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        uolddeposit = valueamt.ToString();
                    }

                    if (conversionfeeTextBox.Text == "" || conversionfeeTextBox.Text == null || conversionfeeTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(conversionfeeTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertvolume = valueamt.ToString();
                    }
                    if (adminfeeTextBox.Text == "" || adminfeeTextBox.Text == null || adminfeeTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(adminfeeTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertadminfee = valueamt.ToString();
                    }
                  
                    if (TotalTaxTextBox.Text == "" || TotalTaxTextBox.Text == null || TotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
                        
                        double valueamt = Math.Round(Convert.ToDouble(TotalTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        converttax = valueamt.ToString();
                    }
                    if (depositTextBox.Text == "" || depositTextBox.Text == null || depositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(depositTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        convertdeposit = valueamt.ToString();
                    }
                    if (totalpriceInTaxTextBox.Text == "" || totalpriceInTaxTextBox.Text == null || totalpriceInTaxTextBox.Text == "NaN")
                    {
                        converttotalvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totalpriceInTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                        converttotalvolume = valueamt.ToString();
                    }
                }
                else
                {
                    if (tiwoldvolumeTextBox.Text == "" || tiwoldvolumeTextBox.Text == null || tiwoldvolumeTextBox.Text == "NaN")
                    {
                        uoldvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tipoldvolumeTextBox.Text), 0);
                        uoldvolume = valueamt.ToString();
                    }
                    if (tiwoldadminTextBox.Text == "" || tiwoldadminTextBox.Text == null || tiwoldadminTextBox.Text == "NaN")
                    {
                        uoldadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tiwoldadminTextBox.Text), 0);
                        uoldadminfee = valueamt.ToString();

                    }
                    if (tiwoldtaxTextBox.Text == "" || tiwoldtaxTextBox.Text == null || tiwoldtaxTextBox.Text == "NaN")
                    {
                        uoldtax = "0";
                    }
                    else
                    {

                        double valueamt = Math.Round(Convert.ToDouble(tiwoldtaxTextBox.Text), 0);
                        uoldtax = valueamt.ToString();

                    }
                    if (tiwoldepositTextBox.Text == "" || tiwoldepositTextBox.Text == null || tiwoldepositTextBox.Text == "NaN")
                    {
                        uolddeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(tiwoldepositTextBox.Text), 0);
                        uolddeposit = valueamt.ToString();
                    }

                    if (totpurchpriceTextBox.Text == "" || totpurchpriceTextBox.Text == null || totpurchpriceTextBox.Text == "NaN")
                    {
                        convertvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totpurchpriceTextBox.Text), 0);
                        convertvolume = valueamt.ToString();
                    }
                    if (adminfeeTextBox.Text == "" || adminfeeTextBox.Text == null || adminfeeTextBox.Text == "NaN")
                    {
                        convertadminfee = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(adminfeeTextBox.Text), 0);
                        convertadminfee = valueamt.ToString();
                    }
                   
                    if (TotalTaxTextBox.Text == "" || TotalTaxTextBox.Text == null || TotalTaxTextBox.Text == "NaN")
                    {
                        converttax = "0";
                    }
                    else
                    {
                        
                        double valueamt = Math.Round(Convert.ToDouble(TotalTaxTextBox.Text), 0);
                        converttax = valueamt.ToString();
                    }
                    if (depositTextBox.Text == "" || depositTextBox.Text == null || depositTextBox.Text == "NaN")
                    {
                        convertdeposit = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(depositTextBox.Text), 0);
                        convertdeposit = valueamt.ToString();
                    }
                    if (totalpriceInTaxTextBox.Text == "" || totalpriceInTaxTextBox.Text == null || totalpriceInTaxTextBox.Text == "NaN")
                    {
                        converttotalvolume = "0";
                    }
                    else
                    {
                        double valueamt = Math.Round(Convert.ToDouble(totalpriceInTaxTextBox.Text), 0);
                        converttotalvolume = valueamt.ToString();
                    }
                }
                int insertpointsPA = Queries.InsertContract_PA_Indian(Contract_PA_Id, profileid, contractno, newpointsTextBox.Text, conversionfeeTextBox.Text, adminfeeTextBox.Text, totpurchpriceTextBox.Text, cgstTextBox.Text, sgstTextBox.Text, Total_Price_Including_Tax, depositTextBox.Text, balanceTextBox.Text, balpa, remarksTextBox.Text, contractdetailsID, tiwoldvolumeTextBox.Text, tiwoldadminTextBox.Text, tiwoldtaxTextBox.Text, tiwoldepositTextBox.Text, uoldvolume, uoldtax, uoldadminfee, uolddeposit, convertvolume, convertadminfee ,converttax, convertdeposit,TotalTaxTextBox.Text, converttotalvolume, dollarrate);
                int updatepageno = Queries.UpdateContract_PA_Indian_ID(office);
                string log4 = "Trade In Weeks PA:" +   "PA_ID:" + Contract_PA_Id +  "," + "Profileid:" + profileid +  "," + "ContractNo:" + contractno +  "," + "New Points:" + newpointsTextBox.Text +  "," + "Conversion Fee:" + conversionfeeTextBox.Text +  "," + "Admin Fee:" + adminfeeTextBox.Text +  "," + "Total Purchase price:" + totpurchpriceTextBox.Text +  "," +
                 "Total Tax:" + TotalTaxTextBox.Text +  "," + "CGST:" + cgstTextBox.Text +  "," + "SGST:" + sgstTextBox.Text +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Deposit Amt:" + depositTextBox.Text +  "," + "balance Amt:" + balanceTextBox.Text +  "," + "Balance Due date:" + balpa +  "," +
                 "Remark:" + remarksTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Converted Vol:" + convertvolume +  "," + "Converted Admin fee:" + convertadminfee +  "," + "Converted Tax:" + converttax +  "," + "Converted Deposit:" + convertdeposit +  "," + "TotalTax:" + TotalTaxTextBox.Text + "," + "Total Volume(USD):" + converttotalvolume + "," + "Exchange rate:" + dollarrate;
                int insertlog4 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log4, user, DateTime.Now.ToString(), "Indian_contracts.aspx", PAnote, "", log4);


                int crmdetails = Queries.InsertCRM_details(profileid, contractdetailsID, PrgmsrcTextBox.Text, RefByTextBox.Text, "", DateTime.Now.ToString(), "", user, "", "Active");
                string logc = "CRM Details:" +   "Profile id:" + profileid +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Program Src: " + PrgmsrcTextBox.Text +  "," + "Referred by:" + RefByTextBox.Text +  "," +
                                                  "Comment:" + "" +  "," + "Created by:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "User:" + user +  "," + "Updated by:" + "" +  "," + "status:" + "Active";
                int insertlogc = Queries.InsertContractLogs_India(profileid, contractdetailsID, logc, user, DateTime.Now.ToString(), "Indian_contracts.aspx", crmnote, "", logc);

                //generate receipt               
                DataSet dsrecp = Queries.LoadIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                int CurrentYear = DateTime.Today.Year;
                int PreviousYear = DateTime.Today.Year - 1;
                int NextYear = DateTime.Today.Year + 1;
                string PreYear = PreviousYear.ToString();
                string NexYear = NextYear.ToString();
                string CurYear = CurrentYear.ToString();
                int cyr = Convert.ToInt32(CurYear) % 100;
                string cyr1 = cyr.ToString("yy");
                int tpyr = Convert.ToInt32(PreYear) % 100;
                int nxyr = Convert.ToInt32(NexYear) % 100;
                string FinYear = null;
                string supplyplace = dsrecp.Tables[0].Rows[0]["SupplyPlace"].ToString();
                string state = dsrecp.Tables[0].Rows[0]["State"].ToString();
                string statecode = dsrecp.Tables[0].Rows[0]["StateCode"].ToString();
                string productcode = "SALE OF POINTS (HOLIDAY OWNERSHIP)";
                string SAC = "996311";
                string GSTpercent = "9%";
                string receipttype = "Deposit";
                double floodcess = 0; 
               

                if (DateTime.Today.Month > 3)
                {
                    //  FinYear = cyr + "-" + nxyr;
                    FinYear = CurrentYear + "-" + nxyr;
                }
                else
                {
                    //FinYear = tpyr + "-" + cyr;
                    FinYear = PreviousYear + "-" + cyr;

                }
                string invoiceno = dsrecp.Tables[0].Rows[0]["ReceiptStart"].ToString() + "/" + FinYear + "/" + dsrecp.Tables[0].Rows[0]["ReceiptGen_Code"].ToString();

                if (intialdeppercentTextBox.Text == "" || intialdeppercentTextBox.Text == "NaN" || intialdeppercentTextBox.Text == "0" || intialdeppercentTextBox.Text == null)
                {
                }
                else
                {
                    //calculate gst on intial dep    
                    if (pdoldamtTextBox.Text == "" || pdoldamtTextBox.Text == "NaN" || pdoldamtTextBox.Text == "0" || pdoldamtTextBox.Text == null)
                    {
                        if (currencyDropDownList.SelectedItem.Text == "INR")
                        {
                            double indeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double gst = Math.Round(indeposit / 118 * 18 / 2);
                            double taxableamt = Math.Round(indeposit / 118 * 100);
                            if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                            {
                                floodcess =   Math.Round(taxableamt * 0.01);

                            }
                            else
                            {
                                floodcess = 0;
                            }
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(),GSTpercent, gst.ToString(),GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, indeposit.ToString(), totaldeposit.ToString(), "0", floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +    "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                               "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                               "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," + "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," +
                               "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + indeposit.ToString() +  "," + "Total Deposit(USD):" + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                        }
                        else
                        {
                            double currentrate = Convert.ToDouble(foreigncurrency);
                            double indeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) * currentrate);
                            double gst = 0;
                            double taxableamt = 0;
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), intialdeppercentTextBox.Text, receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), "0", floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);

                            string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                 "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                 "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," + "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," +
                                 "Actual Amt:" + intialdeppercentTextBox.Text +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + intialdeppercentTextBox.Text +  "," + "Total Deposit in USD: " + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                        }

                    }
                    else
                    {
                        if (currencyDropDownList.SelectedItem.Text == "INR")
                        {
                            double oldamt = Convert.ToDouble(pdoldamtTextBox.Text);
                            double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double indeposit = fulldeposit - oldamt;
                            double gst = Math.Round(indeposit / 118 * 18 / 2);
                            double taxableamt = Math.Round(indeposit / 118 * 100);
                            if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                            {
                                floodcess =  Math.Round(taxableamt * 0.01);

                            }
                            else
                            {
                                floodcess = 0;
                            }
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, fulldeposit.ToString(), totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                            string logr = "Invoice Details:" +   "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() + "," +
                                "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," +
                                "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," +
                                "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                        }
                        else
                        {
                            double currentrate = Convert.ToDouble(foreigncurrency);
                            double oldamt = Convert.ToDouble(pdoldamtTextBox.Text);
                            double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                            double indeposit1 = fulldeposit - oldamt;
                            double indeposit = Math.Round(Convert.ToDouble(indeposit1) * currentrate);
                            double gst = 0;
                            double taxableamt = 0;
                            double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                            string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                            int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), indeposit1.ToString(), receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                            int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                            //update receiptgen no
                            int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                            int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);

                            string logr = "Invoice Details:" +   "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," +
                                 "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," +
                                 "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," + "Actual Amt:" + indeposit1.ToString() +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                            int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);
                        }

                    }
                }
                SOR_AdditionalName(contractdetailsID);
                LoadDocuments(contractdetailsID, office, financeradiobuttonlist.SelectedItem.Text, contracttypeDropDownList.SelectedItem.Text, Affiliate_Type, mcwaiver, CanxContractNoTextBox.Text, companynameTextBox.Text, StateDropDownList.SelectedItem.Text);
                Button7.Visible = true;
                string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";
                ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);
                contractnoTextBox.ReadOnly = true;
                contractnoTextBox.Text = contractno;
                CreateButton.Visible = false;

            }//trade in weeks
            else if (contracttype == "Trade-In-Fractionals")
            {
                string regcollterm;
                string regcollamt;

                if (AffiliationvalueTextBox.Text == "Registry Collection")
                {
                    regcollterm = regcollectiontermTextBox.Text;
                    regcollamt = regcollamtTextBox.Text;
                }
                else
                {
                    regcollterm = "";
                    regcollamt = "0";
                }
                string oldtimeshareloanamount;

                if (oldcontracttypeTextBox.Text == "Weeks")
                {
                    if (financeradio == "Finance")
                    {
                        if (Finance_Type == "Pashuram Finance")
                        {
                            //IGSTrate = "18%";
                            //Interestrate = "11%";
                            DataSet dsfmr = Queries.LoadFinanceMethodRatesFractional(Finance_Type, ddyr);
                            IGSTrate = dsfmr.Tables[0].Rows[0]["IGST_Rate"].ToString() + "%";
                            Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                            documentationfee = findocfeeTextBox.Text;
                            IGST_Amount = igstamtTextBox.Text;
                            No_Emi = noemiTextBox.Text;
                            emiamt = emiamtTextBox.Text;
                            eurorate = "0";
                            loanamtINEuro = "0";
                            monthlyPremiumprotectionplan = "0";
                        }
                        else if (Finance_Type == "Crown Finance")
                        {
                            No_Emi = noemiTextBox.Text;
                            DataSet dsfmr = Queries.LoadCrownFinanceMethodRatesFractional(Finance_Type, ddyr, No_Emi);
                            IGSTrate = "0";
                            Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                            documentationfee = findocfeeTextBox.Text;
                            IGST_Amount = "0";
                            emiamt = emiamtTextBox.Text;
                            eurorate = eurorateTextBox.Text;
                            loanamtINEuro = loanamtINEuroTextBox.Text;
                            monthlyPremiumprotectionplan = monthlyPremiumprotectionplanTextBox.Text;
                        }
                        else
                        {
                            IGSTrate = "0";
                            Interestrate = "0";
                        }
                      
                        //documentationfee = findocfeeTextBox.Text;
                        //IGST_Amount = igstamtTextBox.Text;
                        //No_Emi = noemiTextBox.Text;
                        //emiamt = emiamtTextBox.Text;
                    }
                    else if (financeradio == "Non Finance")
                    {

                        Finance_No = "0";
                        documentationfee = "0";
                        IGST_Amount = "0";
                        No_Emi = "0";
                        emiamt = "0";
                        IGSTrate = "0";
                        Interestrate = "0";
                        eurorate = "0";
                        loanamtINEuro = "0";
                        monthlyPremiumprotectionplan = "0";

                    }
                    string commencedate = "01-01-" + fwfirstyrTextBox.Text;
                    string expirydate = "12-31-" + fwlastyrTextBox.Text;


                    string resort = Request.Form[fwresortDropDownList.UniqueID];// .SelectedItem.Text;
                    string yr = fwfirstyrTextBox.Text;
                    string cur = currencyDropDownList.SelectedItem.Text;
                    string res = fwresidencetype1TextBox.Text;
                    string farr = fwfractIntDropDownList.SelectedItem.Text;
                    //lease back saved on mcfeestextbox

                    //get mc charges
                    DataSet dsmc = Queries.LoadMCChartfractional(resort, yr, cur, farr, res);
                    if (dsmc.Tables[0].Rows.Count == 0)
                    {
                        propertyfee = "TBA";
                        memberfee = "TBA";
                        membercgst = "TBA";
                        membersgst = "TBA";

                    }
                    else
                    {
                        propertyfee = dsmc.Tables[0].Rows[0]["Property_fee"].ToString();
                        memberfee = dsmc.Tables[0].Rows[0]["Member_fee"].ToString();
                        membercgst = dsmc.Tables[0].Rows[0]["Member_CGST"].ToString();
                        membersgst = dsmc.Tables[0].Rows[0]["Member_SGST"].ToString();
                    }

                    int occyr = Convert.ToInt32(fwfirstyrTextBox.Text) - 1;
                    string mcstartdate = Queries.LoadMC_PaymentDate(occyr); // "11/1/" + occyr;



                    if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                    {
                        
                             contractno = Queries.GetFractionalContractNoAmb(venue, resort);
                             int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[fwresortDropDownList.UniqueID]);
                    }
                    else
                    {
                        contractno = Queries.GetFractionalContractNo(venue, resort);
                        int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[fwresortDropDownList.UniqueID]);
                    }


                    int insertcontractdetails = Queries.InsertContractDetails_Indian(contractno, profileid, contsalesrepDropDownList.SelectedItem.Text, TOManagerDropDownList.SelectedItem.Text, ButtonUpDropDownList.SelectedItem.Text, dealdate1, dealstatusDropDownList.SelectedItem.Text, DateTime.Now.ToString(), "", contracttypeDropDownList.SelectedItem.Text, mcwaiver, financeradiobuttonlist.SelectedItem.Text, contractremarkTextBox.Text, pancardnoTextBox.Text.ToUpper(), adharcardTextBox.Text.ToUpper(), propertyfee, mcstartdate, memberfee, membercgst, membersgst, CanxContractNoTextBox.Text, contractdetailsID, "", loanbu, gstinTextBox.Text.ToUpper(), companypanoTextBox.Text.ToUpper(), dealwkno.ToString(), "", "", contractcommentTextBox.Text, user , bu6,updownoption, expirydate, commencedate, contractgroup, contractvenue, ReturnHomeDate);
                    //update
                    int updateGetContractDetails_Indian_ID = Queries.UpdateContractDetails_Indian_ID(office);
                    string log1 = "Contract Created:" +   "Contract # : " + contractno +  "," + "profile ID:" + profileid +  "," + "SalesRep:" + contsalesrepDropDownList.SelectedItem.Text +  "," + "TO Manager:" + TOManagerDropDownList.SelectedItem.Text +  "," + "Button Up:" + ButtonUpDropDownList.SelectedItem.Text +  "," + "Deal Date:" + dealdate1 +  "," + "Deal Status:" + dealstatusDropDownList.SelectedItem.Text +  "," + "Contract Created Date:" + DateTime.Now.ToShortDateString() +  "," + "" + "Contract type:" + contracttypeDropDownList.SelectedItem.Text +  "," + "MC Waiver Applicable:" + mcwaiver +  "," + "Mode:" + financeradiobuttonlist.SelectedItem.Text +  "," + "Remark:" + "" +  "," +
                      "Pancard:" + pancardnoTextBox.Text +  "," + "Adhar card:" + adharcardTextBox.Text +  "," + "Property fee:" + propertyfee +  "," + "MC First Yr:" + mcstartdate +  "," + "Memberfee:" + memberfee +  "," + "Canx Contract No:" + CanxContractNoTextBox.Text +  "," +
                      "contractdetailsID:" + contractdetailsID +  "," + "Canx Date:" + "" +  "," + "Loan BU Officer:" + loanbu +  "," + "GSTIN No:" + gstinTextBox.Text +  "," + "Co. Pan No:" + companypanoTextBox.Text +  "," + "Week no:" + dealwkno +  "," + "Deck no:" + "" +  "," + "Deck details:" + "" +  "," + "Contract comment:" + contractcommentTextBox.Text +  "," +
                      "Contract Created by :" + user +  "," + "Bu After 6pm:" + bu6 +  "," + "Selected Option:" + updownoption +  "," + "Commence date:" + commencedate +  "," + "Expiry date:" + expirydate +  "," + "Contract Group:" + contractgroup +  "," + "Contract Venue:" + contractvenue +  "," + "Return Home Date:" + ReturnHomeDate;
                    int insertlog1 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractnote + "-" + type6, "", log1);




                    int cteamdetails = Queries.InsertContractTeamDetails(contractdetailsID, "", "No", "No", "No", DateTime.Now.ToString(), user, "", "");
                    string logctd = "Contract team Details:" + "contractdetailsID:" + contractdetailsID + "," + "Rep Report: No " + "," + "To Report: No" + "," +
                         "SMS: No" + "," + "Created by:" + user + "," + "created date:" + DateTime.Now.ToString() + "," + "updated by:" + "" + "," + "Updated date:" + "";
                    int insertlogctd = Queries.InsertContractLogs_India(profileid, contractdetailsID, logctd, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractteamnote, "", logctd);



                    string ContractFractionalIndian_ID = Queries.GetContract_Fractional_Indian_ID(office);//  GetContract_Fractional_Indian();
                    int insertfractional = Queries.InsertContract_Fractional_Indian(ContractFractionalIndian_ID, profileid, contractno, Request.Form[fwresortDropDownList.UniqueID], fwresidenceno1TextBox.Text, fwresidencetype1TextBox.Text, fwfractIntDropDownList.SelectedItem.Text, fwentitlementDropDownList.SelectedItem.Text, fwfirstyrTextBox.Text, fwtenureTextBox.Text, fwlastyrTextBox.Text, MCFeesTextBox.Text, propertyfee, contractdetailsID);
                    int updatefactgeno = Queries.UpdateContract_Fractional_Indian_ID(office);
                    string log2 = "Fractional Details:" +  "," + "ContractFractionalIndian_ID:" + ContractFractionalIndian_ID +  "," + "profileid:" + profileid +  "," + "contractno:" + contractno +  "," + "Resort:" + Request.Form[fwresortDropDownList.UniqueID] +  "," + "Residence No:" + testresnoTextBox.Text +  "," + "Residence type:" + testresTextBox.Text +  "," + "Fractional Interest:" + FractionalInterestDropDownList.SelectedItem.Text +  "," +
                      "Entitlement:" + EntitlementFracDropDownList.SelectedItem.Text +  "," + "1st Yr Occ:" + ffirstyrTextBox.Text +  "," + "Tenure:" + ftenureTextBox.Text +  "," + "last Yr Occ:" + flastyrTextBox.Text +  "," + "Lease Back:" + MCFeesTextBox.Text +  "," + "Profperty fee:" + propertyfee +  "," + "contractdetailsID:" + contractdetailsID;
                    int insertlog2 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log2, user, DateTime.Now.ToString(), "Indian_contracts.aspx", fractnote, "", log2);

                    string oldmemtype;
                    if (ftwoldmtypeTextBox.Text == "" || ftwoldmtypeTextBox.Text == null)
                    {
                        oldmemtype = "N/A";
                    }
                    else
                    {
                        oldmemtype = ftwoldmtypeTextBox.Text;
                    }
                    if(foldloanamountTextBox.Text==""|| foldloanamountTextBox.Text==null)
                    {
                        oldtimeshareloanamount = "0";
                    }
                    else
                    {
                        oldtimeshareloanamount = foldloanamountTextBox.Text;
                    }
                    string ContractTradeInFractionalIndian_ID = Queries.GetContract_Trade_In_Fractional_Indian_ID(office);// GetContract_Trade_In_Fractional_Indian();
                    int inserttradeinfractweeks = Queries.InsertContract_Trade_In_Fractional_Indian(ContractTradeInFractionalIndian_ID, profileid, contractno, oldcontracttypeTextBox.Text, fwresorttradeTextBox.Text.ToUpper(), fwaptTextBox.Text.ToUpper(), fwseasonDropDownList.SelectedItem.Text, fwnowksTextBox.Text.ToUpper(), "", fwptsvalueTextBox.Text, fwconnoTextBox.Text, contractdetailsID, oldmemtype.ToUpper());
                    int updatefacttiw = Queries.UpdateContract_Trade_In_Fractional_Indian_ID(office);
                    string log6 = "trade in weeks to Fractional:" +   "TradeInFractionalIndian_ID:" + ContractTradeInFractionalIndian_ID +  "," + "Profile ID:" + profileid +  "," + "Contract No:" + contractno +  "," + "Old Contract Type:" + oldcontracttypeTextBox.Text +  "," + "Club:" + fwresorttradeTextBox.Text.ToUpper() +  "," + "Apt:" + fwaptTextBox.Text.ToUpper() +  "," +
                      "Season:" + fwseasonDropDownList.SelectedItem.Text +  "," + "No.Weeks:" + fwnowksTextBox.Text.ToUpper() +  "," + "" + "Points Value:" + fwptsvalueTextBox.Text +  "," + "Old Cont.No:" + fwconnoTextBox.Text.ToUpper() +  "," + "Old Membership type:" + oldmemtype.ToUpper() +  "," + "contractdetailsID:" + contractdetailsID;
                    int insertlog6 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log6, user, DateTime.Now.ToString(), "Indian_contracts.aspx", tradeinnote, "", log6);

                    if (financeradio == "Finance")
                    {
                        //get the finance no 
                        Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);
                     
                    }
                    else
                    {
                        Finance_No = "";
                    }
                    int insertpointsfinancedetails = Queries.InsertFinance_Details_Indian(Finance_Details_Id, profileid, contractno, financeradio, currency, Affiliate_Type, Total_Price_Including_Tax, Initial_Deposit_Percent, Initial_Deposit_Amount, Balance_Payable, Total_Inital_Deposit, Initial_Deposit_Balance, Bal_Amount_Payable, Payment_Method, No_Installments.ToString(), Installment_Amount, Finance_Type, Finance_No, IGSTrate, Interestrate, documentationfee, IGST_Amount, No_Emi, emiamt, "", oldLANo, regcollterm, regcollamt, contractdetailsID, baladepamtdateTextBox.Text, oldtimeshareloanamount, eurorate, loanamtINEuro, monthlyPremiumprotectionplan, foldloanagreementnoTextBox.Text);
                    int updatefinanceid = Queries.UpdateFinance_Details_Indian_ID(office);
                    if (financeradio == "Finance")
                    {
                        int updatefinanceno = Queries.UpdateFinanceNo(VenueDropDownList.SelectedItem.Text, Finance_Type, contracttypeDropDownList.SelectedItem.Text);
                    }
                    else { }


                    string Contract_Fractional_PA_Id = Queries.GetContract_Fractional_PA_Indian_ID(office);// Contract_Fractional_PA_Indian();
                    string balpa;
                    if (fractionalbalduedateTextBox.Text == "" || fractionalbalduedateTextBox.Text == null || fractionalbalduedateTextBox.Text == "NaN")
                    {
                        balpa = "";
                    }
                    else
                    {
                        balpa = fractionalbalduedateTextBox.Text;
                    }

                    if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                    {
                        if (financeradio == "Finance")
                        {

                            if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
                            {
                                int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                            }
                            else if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                            {
                                int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                            }
                            else
                            {

                                //get max installmentdate n update finance startdate
                                int updatefin = Queries.UpdatefinanceStartdate(contractno);
                            }

                            financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldtimeshareloanamount);

                        }
                    }
                    else
                    {


                        for (i = 1; i <= Convert.ToInt32(No_Installments); i++)
                        {
                            string installemnt_No = inst + " " + i;
                            ia = "textBox_" + i + "1";
                            iamt = Request.Form[ia];
                            idt = "textBox_" + i + "2";
                            idate = Request.Form[idt];

                            string insinvoice = Queries.GetInstallmentInvoiceNo(office);
                            int FinanceInvoice = Queries.InsertContract_Installments_Indian(profileid, contractno, installemnt_No, iamt, idate, insinvoice, contractdetailsID,depositmethodDropDownList.SelectedItem.Text);
                            int update = Queries.UpdateInstallmentInvoiceNo(office);
                            string log5 = "Installment Details:" +   "Profile id: " + profileid +  "," + "Contractno: " + contractno +  "," + "Installment #:" + installemnt_No +  "," + "Installment Amt:" + iamt +  "," +
                             "Installment Date:" + idate +  "," + "Invoice no:" + insinvoice +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Payment Mode:" + depositmethodDropDownList.SelectedItem.Text;
                            int insertlog5 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", installmentnote, "", log5);

                        }
                        if (financeradio == "Finance")
                        {
                            //get max installmentdate n update finance startdate
                            int updatefin = Queries.UpdatefinanceStartdate(contractno);
                            string log3 = "Finance Details:" +   "Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                                                         "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," +
                                                         "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," +
                                                         "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + Queries.GetFinanceMonth(contractno) +  "," + "Old Loan Agreement No:" + oldLANo  +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," + "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," +
                                                         "Old loan amt:" + oldtimeshareloanamount +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan+","+"Open LA No:"+ foldloanagreementnoTextBox.Text;
                            int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);



                            financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldtimeshareloanamount);
                        }
                        else if (financeradio == "Non Finance")
                        {
                            string log3 = "Finance Details:" +   "Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Initial Deposit" + Initial_Deposit_Percent +  "," +
                           "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," + "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," +
                           "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," + "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + "" +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," +
                           "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," + "Old loan amt:" + oldtimeshareloanamount +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan + "," + "Open LA No:" + foldloanagreementnoTextBox.Text;
                            int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);

                        }
                    }

                    string uoldvolume, uoldtax, uoldadminfee, uolddeposit;
                    string convertvolume, converttax, convertadminfee, convertdeposit, converttotalvolume;
                    DataSet exrds = Queries.LoadExchange_Rate();
                    string dollarrate = exrds.Tables[0].Rows[0]["ERates_USD"].ToString();
                    if (currencyDropDownList.SelectedItem.Text == "INR")
                    {
                        if (ftiwoldvolumeTextBox.Text == "" || ftiwoldvolumeTextBox.Text == null || ftiwoldvolumeTextBox.Text == "NaN")
                        {
                            uoldvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldvolumeTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldvolume = valueamt.ToString();
                        }
                        if (ftiwoldadminTextBox.Text == "" || ftiwoldadminTextBox.Text == null || ftiwoldadminTextBox.Text == "NaN")
                        {
                            uoldadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldadminTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldadminfee = valueamt.ToString();

                        }
                        if (ftiwoldtaxTextBox.Text == "" || ftiwoldtaxTextBox.Text == null || ftiwoldtaxTextBox.Text == "NaN")
                        {
                            uoldtax = "0";
                        }
                        else
                        {

                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldtaxTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldtax = valueamt.ToString();

                        }
                        if (ftiwoldepositTextBox.Text == "" || ftiwoldepositTextBox.Text == null || ftiwoldepositTextBox.Text == "NaN")
                        {
                            uolddeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldepositTextBox.Text)/ Convert.ToDouble(dollarrate),0);
                            uolddeposit = valueamt.ToString();
                        }
                        
                        if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                        {
                            convertvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertvolume = valueamt.ToString();
                        }
                        if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                        {
                            convertadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertadminfee = valueamt.ToString();
                        }
                      
                        if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                        {
                            converttax = "0";
                        }
                        else
                        {
                            
                            double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            converttax = valueamt.ToString();
                        }
                        if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                        {
                            convertdeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertdeposit = valueamt.ToString();
                        }

                        if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                        {
                            converttotalvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            converttotalvolume = valueamt.ToString();
                        }
                    }
                    else
                    {

                        if (ftiwoldvolumeTextBox.Text == "" || ftiwoldvolumeTextBox.Text == null || ftiwoldvolumeTextBox.Text == "NaN")
                        {
                            uoldvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldvolumeTextBox.Text),0);
                            uoldvolume = valueamt.ToString();
                        }
                        if (ftiwoldadminTextBox.Text == "" || ftiwoldadminTextBox.Text == null || ftiwoldadminTextBox.Text == "NaN")
                        {
                            uoldadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldadminTextBox.Text),0);
                            uoldadminfee = valueamt.ToString();

                        }
                        if (ftiwoldtaxTextBox.Text == "" || ftiwoldtaxTextBox.Text == null || ftiwoldtaxTextBox.Text == "NaN")
                        {
                            uoldtax = "0";
                        }
                        else
                        {

                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldtaxTextBox.Text),0);
                            uoldtax = valueamt.ToString();

                        }
                        
                        if (ftiwoldepositTextBox.Text == "" || ftiwoldepositTextBox.Text == null || ftiwoldepositTextBox.Text == "NaN")
                        {
                            uolddeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftiwoldepositTextBox.Text),0);
                            uolddeposit = valueamt.ToString();
                        }
                        if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                        {
                            convertvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text),0);
                            convertvolume = valueamt.ToString();
                        }
                        if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                        {
                            convertadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text),0); 
                            convertadminfee = valueamt.ToString();
                        }
                    
                        if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                        {
                            converttax = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text), 0);
                            converttax = valueamt.ToString();
                        }
                        if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                        {
                            convertdeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text),0);
                            convertdeposit = valueamt.ToString();
                        }
                        if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                        {
                            converttotalvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text), 0);
                            converttotalvolume = valueamt.ToString();
                        }

                    }
                    int insertpointsPA = Queries.InsertContract_Fractional_PA_Indian(Contract_Fractional_PA_Id, profileid, contractno, AdmissionFeesTextBox.Text, AdministrationFeesTextBox.Text, fcgstTextBox.Text, fsgstTextBox.Text, TotalPurchasePriceTextBox.Text, Total_Price_Including_Tax, fractionaldepositTextBox.Text, fractionalbalanceTextBox.Text, balpa, remarksTextBox.Text, ftradeinvalueTextBox.Text, ftotalvalueTextBox.Text, contractdetailsID, ftiwoldvolumeTextBox.Text, ftiwoldadminTextBox.Text, ftiwoldtaxTextBox.Text, ftiwoldepositTextBox.Text, uoldvolume, uoldtax, uoldadminfee, uolddeposit, convertvolume, convertadminfee,converttax, convertdeposit,FTotalTaxTextBox.Text, converttotalvolume, dollarrate);
                    int updatefactpa = Queries.UpdateContract_Fractional_PA_Indian_ID(office);
                    string log4 = "Fractional PA Details:" +   "Fractional_PA_Id:" + Contract_Fractional_PA_Id +  "," + "Profile:" + profileid +  "," + "Contract no:" + contractno +  "," + "Trade in value:" + ftradeinvalueTextBox.Text +  "," + "Total Value:" + ftotalvalueTextBox.Text +  "," + "AdmissionFees:" + AdmissionFeesTextBox.Text +  "," +
                        " AdministrationFees:" + AdministrationFeesTextBox.Text +  "," + "Total Tax:" + FTotalTaxTextBox.Text +  "," + "CGST:" + fcgstTextBox.Text +  "," + "SGST:" + fsgstTextBox.Text +  "," + "total Purchase price:" + TotalPurchasePriceTextBox.Text +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                        "Deposit Amt:" + fractionaldepositTextBox.Text +  "," + "balance:" + fractionalbalanceTextBox.Text +  "," + "Balance due dates:" + balpa +  "," + "Remarks:" + remarksTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," +
                        "Old Volume:" + ftiwoldvolumeTextBox.Text +  "," + "Old Adminfee:" + ftiwoldadminTextBox.Text +  "," + "Old Tax:" + ftiwoldtaxTextBox.Text +  "," + "Old Deposit:" + ftiwoldepositTextBox.Text +  "," +
                        "Converted Vol:" + convertvolume +  "," + "Converted Admin fee:" + convertadminfee +  "," + "Converted Tax:" + converttax +  "," + "Converted Deposit:" + convertdeposit + "," + "Total Volume(USD):" + converttotalvolume + "," + "Exchange rate:" + dollarrate;
                    int insertlog4 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log4, user, DateTime.Now.ToString(), "Indian_contracts.aspx", PAnote, "", log4);


                    int crmdetails = Queries.InsertCRM_details(profileid, contractdetailsID, PrgmsrcTextBox.Text, RefByTextBox.Text, "", DateTime.Now.ToString(), "", user, "", "Active");
                    string logc = "CRM Details:" +   "Profile id:" + profileid +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Program Src: " + PrgmsrcTextBox.Text +  "," + "Referred by:" + RefByTextBox.Text +  "," +
                                       "Comment:" + "" +  "," + "Created by:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "User:" + user +  "," + "Updated by:" + "" +  "," + "status:" + "Active";
                    int insertlogc = Queries.InsertContractLogs_India(profileid, contractdetailsID, logc, user, DateTime.Now.ToString(), "Indian_contracts.aspx", crmnote, "", logc);

                    //generate receipt               
                    DataSet dsrecp = Queries.LoadIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                    int CurrentYear = DateTime.Today.Year;
                    int PreviousYear = DateTime.Today.Year - 1;
                    int NextYear = DateTime.Today.Year + 1;
                    string PreYear = PreviousYear.ToString();
                    string NexYear = NextYear.ToString();
                    string CurYear = CurrentYear.ToString();
                    int cyr = Convert.ToInt32(CurYear) % 100;
                    string cyr1 = cyr.ToString("yy");
                    int tpyr = Convert.ToInt32(PreYear) % 100;
                    int nxyr = Convert.ToInt32(NexYear) % 100;
                    string FinYear = null;
                    string supplyplace = dsrecp.Tables[0].Rows[0]["SupplyPlace"].ToString();
                    string state = dsrecp.Tables[0].Rows[0]["State"].ToString();
                    string statecode = dsrecp.Tables[0].Rows[0]["StateCode"].ToString();
                    string productcode = "PRESTIGE ROYAL RESIDENCES";
                    string usdproductcode = "KARMA ROYAL RESIDENCES";
                    string SAC = "996311";
                    string GSTpercent = "9%";
                    string receipttype = "Deposit";
                    double floodcess = 0;
 

                    if (DateTime.Today.Month > 3)
                    {
                        //  FinYear = cyr + "-" + nxyr;
                        FinYear = CurrentYear + "-" + nxyr;
                    }
                    else
                    {
                        //FinYear = tpyr + "-" + cyr;
                        FinYear = PreviousYear + "-" + cyr;

                    }
                    string invoiceno = dsrecp.Tables[0].Rows[0]["ReceiptStart"].ToString() + "/" + FinYear + "/" + dsrecp.Tables[0].Rows[0]["ReceiptGen_Code"].ToString();
                    if (intialdeppercentTextBox.Text == "" || intialdeppercentTextBox.Text == "NaN" || intialdeppercentTextBox.Text == "0" || intialdeppercentTextBox.Text == null)
                    {
                    }
                    else
                    {
                        //calculate gst on intial dep                 
                        if (frpdoldamtTextBox.Text == "" || frpdoldamtTextBox.Text == "NaN" || frpdoldamtTextBox.Text == "0" || frpdoldamtTextBox.Text == null)
                        {
                            if (currencyDropDownList.SelectedItem.Text == "INR")
                            {
                                double indeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double gst = Math.Round(indeposit / 118 * 18 / 2);
                                double taxableamt = Math.Round(indeposit / 118 * 100);
                                if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                                {
                                    floodcess =   Math.Round(taxableamt * 0.01);

                                }
                                else
                                {
                                    floodcess = 0;
                                }
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode,productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, indeposit.ToString(), totaldeposit.ToString(), "0" , floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                            "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                            "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," + "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," +
                            "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + indeposit.ToString() +  "," + "Total Deposit(USD):" + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);
                            }
                            else
                            {
                                double currentrate = Convert.ToDouble(foreigncurrency);
                                double indeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) * currentrate);
                                double gst = 0;
                                double taxableamt = 0;


                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, usdproductcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(), depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), intialdeppercentTextBox.Text, receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), "0", floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                               "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                               "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," + "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," +
                               "Actual Amt:" + intialdeppercentTextBox.Text +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + intialdeppercentTextBox.Text +  "," + "Total Deposit in USD: " + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);



                            }

                        }
                        else
                        {
                            if (currencyDropDownList.SelectedItem.Text == "INR")
                            {
                                double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                                double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double indeposit = fulldeposit - oldamt;
                                double gst = Math.Round(indeposit / 118 * 18 / 2);
                                double taxableamt = Math.Round(indeposit / 118 * 100);
                                if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                                {
                                    floodcess =   Math.Round(taxableamt * 0.01);

                                }
                                else
                                {
                                    floodcess = 0;
                                }
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode,productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, fulldeposit.ToString(), totaldeposit.ToString(), oldamt.ToString() , floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() + "," +
                              "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," +
                              "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," +
                              "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                            }
                            else
                            {
                                double currentrate = Convert.ToDouble(foreigncurrency);
                                double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                                double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double indeposit1 = fulldeposit - oldamt;
                                double indeposit = Math.Round(Convert.ToDouble(indeposit1) * currentrate);
                                double gst = 0;
                                double taxableamt = 0;
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, usdproductcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), indeposit1.ToString(), receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), oldamt.ToString() , floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," +
                               "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," +
                               "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," + "Actual Amt:" + indeposit1.ToString() +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                            }

                        }
                    } 
                    SOR_AdditionalName(contractdetailsID);
                    LoadDocuments(contractdetailsID, office, financeradiobuttonlist.SelectedItem.Text, contracttypeDropDownList.SelectedItem.Text, Affiliate_Type, mcwaiver, CanxContractNoTextBox.Text, companynameTextBox.Text, StateDropDownList.SelectedItem.Text);
                    Button7.Visible = true;
                    string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";
                    ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);
                    contractnoTextBox.ReadOnly = true;
                    contractnoTextBox.Text = contractno;
                    CreateButton.Visible = false;

                }//weeks to fractionals

                else if (oldcontracttypeTextBox.Text == "Points")
                {
                    if (financeradio == "Finance")
                    {
                        if (Finance_Type == "Pashuram Finance")
                        {
                            //IGSTrate = "18%";
                            //Interestrate = "11%";
                            DataSet dsfmr = Queries.LoadFinanceMethodRatesFractional(Finance_Type, ddyr);
                            IGSTrate = dsfmr.Tables[0].Rows[0]["IGST_Rate"].ToString() + "%";
                            Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                            documentationfee = findocfeeTextBox.Text;
                            IGST_Amount = igstamtTextBox.Text;
                            No_Emi = noemiTextBox.Text;
                            emiamt = emiamtTextBox.Text;
                            eurorate = "0";
                            loanamtINEuro = "0";
                            monthlyPremiumprotectionplan = "0";
                        }
                        else if (Finance_Type == "Crown Finance")
                        {
                            No_Emi = noemiTextBox.Text;
                            DataSet dsfmr = Queries.LoadCrownFinanceMethodRatesFractional(Finance_Type, ddyr, No_Emi);
                            IGSTrate = "0";
                            Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                            documentationfee = findocfeeTextBox.Text;
                            IGST_Amount = "0";
                            emiamt = emiamtTextBox.Text;
                            eurorate = eurorateTextBox.Text;
                            loanamtINEuro = loanamtINEuroTextBox.Text;
                            monthlyPremiumprotectionplan = monthlyPremiumprotectionplanTextBox.Text;
                        }
                        else
                        {
                            IGSTrate = "0";
                            Interestrate = "0";
                        }
                         
                    }
                    else if (financeradio == "Non Finance")
                    {

                        Finance_No = "0";
                        documentationfee = "0";
                        IGST_Amount = "0";
                        No_Emi = "0";
                        emiamt = "0";
                        IGSTrate = "0";
                        Interestrate = "0";
                        eurorate = "0";
                        loanamtINEuro = "0";
                        monthlyPremiumprotectionplan = "0";
                    }
                    string commencedate = "01-01-" + fptsfirstyrTextBox.Text;
                    string expirydate = "12-31-" + fptslastyrTextBox.Text;

                    string resort = Request.Form[fptsresortDropDownList.UniqueID];
                    string yr = fptsfirstyrTextBox.Text;
                    string cur = currencyDropDownList.SelectedItem.Text;
                    string res = fptsresidencetype1TextBox.Text;
                    string farr = fptsfracintDropDownList.SelectedItem.Text;
                    //lease back saved on mcfeestextbox

                    //get mc charges
                    DataSet dsmc = Queries.LoadMCChartfractional(resort, yr, cur, farr, res);
                    if (dsmc.Tables[0].Rows.Count == 0)
                    {
                        propertyfee = "TBA";
                        memberfee = "TBA";
                        membercgst = "TBA";
                        membersgst = "TBA";

                    }
                    else
                    {
                        propertyfee = dsmc.Tables[0].Rows[0]["Property_fee"].ToString();
                        memberfee = dsmc.Tables[0].Rows[0]["Member_fee"].ToString();
                        membercgst = dsmc.Tables[0].Rows[0]["Member_CGST"].ToString();
                        membersgst = dsmc.Tables[0].Rows[0]["Member_SGST"].ToString();
                    }

                    int occyr = Convert.ToInt32(fptsfirstyrTextBox.Text) - 1;
                    string mcstartdate = Queries.LoadMC_PaymentDate(occyr); // "11/1/" + occyr;


                    if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                    {

                        contractno = Queries.GetFractionalContractNoAmb(venue, resort);
                        int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[fptsresortDropDownList.UniqueID]);
                    }
                    else
                    {
                        contractno = Queries.GetFractionalContractNo(venue, resort);
                        int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[fptsresortDropDownList.UniqueID]);
                    }

                    int insertcontractdetails = Queries.InsertContractDetails_Indian(contractno, profileid, contsalesrepDropDownList.SelectedItem.Text, TOManagerDropDownList.SelectedItem.Text, ButtonUpDropDownList.SelectedItem.Text, dealdate1, dealstatusDropDownList.SelectedItem.Text, DateTime.Now.ToString(), "", contracttypeDropDownList.SelectedItem.Text, mcwaiver, financeradiobuttonlist.SelectedItem.Text, contractremarkTextBox.Text, pancardnoTextBox.Text.ToUpper(), adharcardTextBox.Text.ToUpper(), propertyfee, mcstartdate, memberfee, membercgst, membersgst, CanxContractNoTextBox.Text, contractdetailsID, "", loanbu, gstinTextBox.Text.ToUpper(), companypanoTextBox.Text.ToUpper(), dealwkno.ToString(), "", "", contractcommentTextBox.Text, user , bu6,updownoption, expirydate, commencedate, contractgroup, contractvenue, ReturnHomeDate);
                    int updateGetContractDetails_Indian_ID = Queries.UpdateContractDetails_Indian_ID(office);
                    string log1 = "Contract Created:" +   "Contract # : " + contractno +  "," + "profile ID:" + profileid +  "," + "SalesRep:" + contsalesrepDropDownList.SelectedItem.Text +  "," + "TO Manager:" + TOManagerDropDownList.SelectedItem.Text +  "," + "Button Up:" + ButtonUpDropDownList.SelectedItem.Text +  "," + "Deal Date:" + dealdate1 +  "," + "Deal Status:" + dealstatusDropDownList.SelectedItem.Text +  "," + "Contract Created Date:" + DateTime.Now.ToShortDateString() +  "," + "" + "Contract type:" + contracttypeDropDownList.SelectedItem.Text +  "," + "MC Waiver Applicable:" + mcwaiver +  "," + "Mode:" + financeradiobuttonlist.SelectedItem.Text +  "," + "Remark:" + "" +  "," +
                       "Pancard:" + pancardnoTextBox.Text +  "," + "Adhar card:" + adharcardTextBox.Text +  "," + "Property fee:" + propertyfee +  "," + "MC First Yr:" + mcstartdate +  "," + "Memberfee:" + memberfee +  "," + "Canx Contract No:" + CanxContractNoTextBox.Text +  "," +
                       "contractdetailsID:" + contractdetailsID +  "," + "Canx Date:" + "" +  "," + "Loan BU Officer:" + loanbu +  "," + "GSTIN No:" + gstinTextBox.Text +  "," + "Co. Pan No:" + companypanoTextBox.Text +  "," + "Week no:" + dealwkno +  "," + "Deck no:" + "" +  "," + "Deck details:" + "" +  "," + "Contract comment:" + contractcommentTextBox.Text +  "," +
                       "Contract Created by :" + user +  "," + "Bu After 6pm:" + bu6 +  "," + "Selected Option:" + updownoption +  "," + "Commence date:" + commencedate +  "," + "Expiry date:" + expirydate +  "," + "Contract Group:" + contractgroup +  "," + "Contract Venue:" + contractvenue +  "," + "Return Home Date:" + ReturnHomeDate;
                    int insertlog1 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractnote + "-" + type5, "", log1);


                    int cteamdetails = Queries.InsertContractTeamDetails(contractdetailsID, "", "No", "No", "No", DateTime.Now.ToString(), user, "", "");
                    string logctd = "Contract team Details:" + "contractdetailsID:" + contractdetailsID + "," + "Rep Report: No " + "," + "To Report: No" + "," +
                         "SMS: No" + "," + "Created by:" + user + "," + "created date:" + DateTime.Now.ToString() + "," + "updated by:" + "" + "," + "Updated date:" + "";
                    int insertlogctd = Queries.InsertContractLogs_India(profileid, contractdetailsID, logctd, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractteamnote, "", logctd);

                    string ContractFractionalIndian_ID = Queries.GetContract_Fractional_Indian_ID(office);
                    int insertfractional = Queries.InsertContract_Fractional_Indian(ContractFractionalIndian_ID, profileid, contractno, Request.Form[fptsresortDropDownList.UniqueID], fptsResidenceno1TextBox.Text, fptsresidencetype1TextBox.Text, fptsfracintDropDownList.SelectedItem.Text, fptsentitlementDropDownList.SelectedItem.Text, fptsfirstyrTextBox.Text, fptstenureTextBox.Text, fptslastyrTextBox.Text, MCFeesTextBox.Text, propertyfee, contractdetailsID);
                    int updatefactgeno = Queries.UpdateContract_Fractional_Indian_ID(office);
                    string log2 = "Fractional Details:" +   "ContractFractionalIndian_ID:" + ContractFractionalIndian_ID +  "," + "profileid:" + profileid +  "," + "contractno:" + contractno +  "," + "Resort:" + Request.Form[fptsresortDropDownList.UniqueID] +  "," + "Residence No:" + testresnoTextBox.Text +  "," +
                     "Residence type:" + testresTextBox.Text +  "," + "Fractional Interest:" + FractionalInterestDropDownList.SelectedItem.Text +  "," + "Entitlement:" + EntitlementFracDropDownList.SelectedItem.Text +  "," + "1st Yr Occ:" + ffirstyrTextBox.Text +  "," + "Tenure:" + ftenureTextBox.Text +  "," + "last Yr Occ:" + flastyrTextBox.Text +  "," + "Lease Back:" + MCFeesTextBox.Text +  "," + "Profperty fee:" + propertyfee +  "," + "contractdetailsID:" + contractdetailsID;
                    int insertlog2 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log2, user, DateTime.Now.ToString(), "Indian_contracts.aspx", fractnote, "", log2);


                    string oldmemtype;
                    if (ftpoldmtypeTextBox.Text == "" || ftpoldmtypeTextBox.Text == null)
                    {
                        oldmemtype = "N/A";
                    }
                    else
                    {
                        oldmemtype = ftpoldmtypeTextBox.Text;
                    }
                    if (oldloanamountTextBox.Text == "" || oldloanamountTextBox.Text == null)
                    {
                        oldtimeshareloanamount = "0";
                    }
                    else
                    {
                        oldtimeshareloanamount = oldloanamountTextBox.Text;
                    }
                    string ContractTradeInFractionalIndian_ID = Queries.GetContract_Trade_In_Fractional_Indian_ID(office);// GetContract_Trade_In_Fractional_Indian();
                    int inserttradeinfractpoints = Queries.InsertContract_Trade_In_Fractional_Indian(ContractTradeInFractionalIndian_ID, profileid, contractno, oldcontracttypeTextBox.Text, fptsclubTextBox.Text.ToUpper(), "", "", "", fptsnoptsTextBox.Text, fptsvalTextBox.Text, fptscontnoTextBox.Text.ToUpper(), contractdetailsID, oldmemtype.ToUpper());
                    int updatefacttiw = Queries.UpdateContract_Trade_In_Fractional_Indian_ID(office);
                    string log6 = "Trade in points to Fractional:" +   "TradeInFractionalIndian_ID:" + ContractTradeInFractionalIndian_ID +  "," + "Profile ID:" + profileid +  "," + "Contract No:" + contractno +  "," + "Old Contract Type:" + oldcontracttypeTextBox.Text +  "," + "Club:" + fptsclubTextBox.Text.ToUpper() +  "," + "Points:" + fptsnoptsTextBox.Text +  "," +
                        "Points Value:" + fptsvalTextBox.Text +  "," + "Old Cont.No:" + fptscontnoTextBox.Text.ToUpper() +  "," + "Old Membership type:" + oldmemtype.ToUpper() +  "," + "contractdetailsID:" + contractdetailsID;
                    int insertlog6 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log6, user, DateTime.Now.ToString(), "Indian_contracts.aspx", tradeinnote, "", log6);



                    if (financeradio == "Finance")
                    {
                        //get the finance no 
                        Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);
                       
                    }
                    else
                    {
                        Finance_No = "";
                    }
                    int insertpointsfinancedetails = Queries.InsertFinance_Details_Indian(Finance_Details_Id, profileid, contractno, financeradio, currency, Affiliate_Type, Total_Price_Including_Tax, Initial_Deposit_Percent, Initial_Deposit_Amount, Balance_Payable, Total_Inital_Deposit, Initial_Deposit_Balance, Bal_Amount_Payable, Payment_Method, No_Installments.ToString(), Installment_Amount, Finance_Type, Finance_No, IGSTrate, Interestrate, documentationfee, IGST_Amount, No_Emi, emiamt, "", oldLANo, regcollterm, regcollamt, contractdetailsID, baladepamtdateTextBox.Text, oldtimeshareloanamount, eurorate, loanamtINEuro, monthlyPremiumprotectionplan, oldLoanAgreementTextBox.Text);
                    int updatefinanceid = Queries.UpdateFinance_Details_Indian_ID(office);
                    if (financeradio == "Finance")
                    {
                        int updatefinanceno = Queries.UpdateFinanceNo(VenueDropDownList.SelectedItem.Text, Finance_Type, contracttypeDropDownList.SelectedItem.Text);
                    }
                    else { }
                    if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                    {
                        if (financeradio == "Finance")
                        {

                            if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
                            {
                                int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                            }
                            else if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                            {
                                int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                            }
                            else
                            {
                                //get max installmentdate n update finance startdate
                                int updatefin = Queries.UpdatefinanceStartdate(contractno);
                            }

                            financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldtimeshareloanamount);

                        }
                    }
                    else
                    {
                        for (i = 1; i <= Convert.ToInt32(No_Installments); i++)
                        {
                            string installemnt_No = inst + " " + i;
                            ia = "textBox_" + i + "1";
                            iamt = Request.Form[ia];
                            idt = "textBox_" + i + "2";
                            idate = Request.Form[idt];

                            string insvoice = Queries.GetInstallmentInvoiceNo(office);
                            int FinanceInvoice = Queries.InsertContract_Installments_Indian(profileid, contractno, installemnt_No, iamt, idate,insvoice , contractdetailsID,depositmethodDropDownList.SelectedItem.Text );
                            int update = Queries.UpdateInstallmentInvoiceNo(office);
                            string log5 = "Installment Details:" +   "Profile id: " + profileid +  "," + "Contractno: " + contractno +  "," + "Installment #:" + installemnt_No +  "," + "Installment Amt:" + iamt +  "," +
                        "Installment Date:" + idate +  "," + "Invoice no:" + insvoice +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Payment Mode:" + depositmethodDropDownList.SelectedItem.Text;
                            int insertlog5 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", installmentnote, "", log5);



                        }
                        if (financeradio == "Finance")
                        {
                            //get max installmentdate n update finance startdate
                            int updatefin = Queries.UpdatefinanceStartdate(contractno);
                            string log3 = "Finance Details:" +  "Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                                                         "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," +
                                                         "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," +
                                                         "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + Queries.GetFinanceMonth(contractno) +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," + "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," +
                                                         "Old loan amt:" + oldtimeshareloanamount +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan+","+"Open LA No:" + oldLoanAgreementTextBox.Text;
                            int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);


                            financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldtimeshareloanamount);
                        }
                        else if (financeradio == "Non Finance")
                        {
                            string log3 = "Finance Details:" +  "Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Initial Deposit" + Initial_Deposit_Percent +  "," +
                          "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," + "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," +
                          "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," + "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + "" +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," +
                          "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," + "Old loan amt:" + oldtimeshareloanamount +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan + "," + "Open LA No:" + oldLoanAgreementTextBox.Text;
                            int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);

                        }

                    }


                    string Contract_Fractional_PA_Id = Queries.GetContract_Fractional_PA_Indian_ID(office);// Contract_Fractional_PA_Indian();
                    string balpa;
                    if (fractionalbalduedateTextBox.Text == "" || fractionalbalduedateTextBox.Text == null || fractionalbalduedateTextBox.Text == "NaN")
                    {
                        balpa = "";
                    }
                    else
                    {
                        balpa = fractionalbalduedateTextBox.Text;
                    }
                    string uoldvolume, uoldtax, uoldadminfee, uolddeposit;
                    string convertvolume, converttax, convertadminfee, convertdeposit, converttotalvolume;
                    DataSet exrds = Queries.LoadExchange_Rate();
                    string dollarrate = exrds.Tables[0].Rows[0]["ERates_USD"].ToString();
                    if (currencyDropDownList.SelectedItem.Text == "INR")
                    {
                        if (ftipoldvolumeTextBox.Text == "" || ftipoldvolumeTextBox.Text == null || ftipoldvolumeTextBox.Text == "NaN")
                        {
                            uoldvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftipoldvolumeTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldvolume = valueamt.ToString();
                        }
                        if (ftipoldadminTextBox.Text == "" || ftipoldadminTextBox.Text == null || ftipoldadminTextBox.Text == "NaN")
                        {
                            uoldadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftipoldadminTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldadminfee = valueamt.ToString();

                        }
                        if (ftipoldtaxTextBox.Text == "" || ftipoldtaxTextBox.Text == null || ftipoldtaxTextBox.Text == "NaN")
                        {
                            uoldtax = "0";
                        }
                        else
                        {

                            double valueamt = Math.Round(Convert.ToDouble(ftipoldtaxTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldtax = valueamt.ToString();

                        }
                        if (ftipoldepositTextBox.Text == "" || ftipoldepositTextBox.Text == null || ftipoldepositTextBox.Text == "NaN")
                        {
                            uolddeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftipoldepositTextBox.Text)/ Convert.ToDouble(dollarrate),0);
                            uolddeposit = valueamt.ToString();
                        }
                        if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                        {
                            convertvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertvolume = valueamt.ToString();
                        }
                        if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                        {
                            convertadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertadminfee = valueamt.ToString();
                        }
                         
                        if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                        {
                            converttax = "0";
                        }
                        else
                        {
                             
                            double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            converttax = valueamt.ToString();
                        }
                        if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                        {
                            convertdeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertdeposit = valueamt.ToString();
                        }

                        if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                        {
                            converttotalvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            converttotalvolume = valueamt.ToString();
                        }
                    }
                    else
                    {
                        if (ftipoldvolumeTextBox.Text == "" || ftipoldvolumeTextBox.Text == null || ftipoldvolumeTextBox.Text == "NaN")
                        {
                            uoldvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftipoldvolumeTextBox.Text),0);
                            uoldvolume = valueamt.ToString();
                        }
                        if (ftipoldadminTextBox.Text == "" || ftipoldadminTextBox.Text == null || ftipoldadminTextBox.Text == "NaN")
                        {
                            uoldadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftipoldadminTextBox.Text),0);
                            uoldadminfee = valueamt.ToString();

                        }
                        if (ftipoldtaxTextBox.Text == "" || ftipoldtaxTextBox.Text == null || ftipoldtaxTextBox.Text == "NaN")
                        {
                            uoldtax = "0";
                        }
                        else
                        {

                            double valueamt = Math.Round(Convert.ToDouble(ftipoldtaxTextBox.Text),0);
                            uoldtax = valueamt.ToString();

                        }
                        if (ftipoldepositTextBox.Text == "" || ftipoldepositTextBox.Text == null || ftipoldepositTextBox.Text == "NaN")
                        {
                            uolddeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftipoldepositTextBox.Text),0);
                            uolddeposit = valueamt.ToString();
                        }
                        if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                        {
                            convertvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text),0);
                            convertvolume = valueamt.ToString();
                        }
                        if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                        {
                            convertadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text),0);
                            convertadminfee = valueamt.ToString();
                        }
                       
                        if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                        {
                            converttax = "0";
                        }
                        else
                        {
                            
                            double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text), 0);
                            converttax = valueamt.ToString();
                        }
                        if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                        {
                            convertdeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text),0);
                            convertdeposit = valueamt.ToString();
                        }

                        if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                        {
                            converttotalvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text), 0);
                            converttotalvolume = valueamt.ToString();
                        }
                    }
                    int insertpointsPA = Queries.InsertContract_Fractional_PA_Indian(Contract_Fractional_PA_Id, profileid, contractno, AdmissionFeesTextBox.Text, AdministrationFeesTextBox.Text, fcgstTextBox.Text, fsgstTextBox.Text, TotalPurchasePriceTextBox.Text, Total_Price_Including_Tax, fractionaldepositTextBox.Text, fractionalbalanceTextBox.Text, balpa, remarksTextBox.Text, ftradeinvalueTextBox.Text, ftotalvalueTextBox.Text, contractdetailsID, ftipoldvolumeTextBox.Text, ftipoldadminTextBox.Text, ftipoldtaxTextBox.Text, ftipoldepositTextBox.Text, uoldvolume, uoldtax, uoldadminfee, uolddeposit,convertvolume,convertadminfee,converttax,convertdeposit,FTotalTaxTextBox.Text, converttotalvolume, dollarrate);

                    int updatefactpa = Queries.UpdateContract_Fractional_PA_Indian_ID(office);
                    string log4 = "Fractional PA Details:" +  "Fractional_PA_Id:" + Contract_Fractional_PA_Id +  "," + "Profile:" + profileid +  "," + "Contract no:" + contractno +  "," + "Trade in value:" + ftradeinvalueTextBox.Text +  "," + "Total Value:" + ftotalvalueTextBox.Text +  "," + "AdmissionFees:" + AdmissionFeesTextBox.Text +  "," +
                        " AdministrationFees:" + AdministrationFeesTextBox.Text +  "," + "Total Tax:" + FTotalTaxTextBox.Text +  "," + "CGST:" + fcgstTextBox.Text +  "," + "SGST:" + fsgstTextBox.Text +  "," + "total Purchase price:" + TotalPurchasePriceTextBox.Text +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                        "Deposit Amt:" + fractionaldepositTextBox.Text +  "," + "balance:" + fractionalbalanceTextBox.Text +  "," + "Balance due dates:" + balpa +  "," + "Remarks:" + remarksTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," +
                        "Old Volume:" + ftipoldvolumeTextBox.Text +  "," + "Old Adminfee:" + ftipoldadminTextBox.Text +  "," + "Old Tax:" + ftipoldtaxTextBox.Text +  "," + "Old Deposit:" + ftipoldepositTextBox.Text +  "," +
                        "Converted Vol:" + convertvolume +  "," + "Converted Admin fee:" + convertadminfee +  "," + "Converted Tax:" + converttax +  "," + "Converted Deposit:" + convertdeposit + "," + "Total Volume(USD):" + converttotalvolume + "," + "Exchange rate:" + dollarrate;

                    int insertlog4 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log4, user, DateTime.Now.ToString(), "Indian_contracts.aspx", PAnote, "", log4);



                    int crmdetails = Queries.InsertCRM_details(profileid, contractdetailsID, PrgmsrcTextBox.Text, RefByTextBox.Text, "", DateTime.Now.ToString(), "", user, "", "Active");
                    string logc = "CRM Details:"  + "Profile id:" + profileid +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Program Src: " + PrgmsrcTextBox.Text +  "," + "Referred by:" + RefByTextBox.Text +  "," +
                                                       "Comment:" + "" +  "," + "Created by:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "User:" + user +  "," + "Updated by:" + "" +  "," + "status:" + "Active";
                    int insertlogc = Queries.InsertContractLogs_India(profileid, contractdetailsID, logc, user, DateTime.Now.ToString(), "Indian_contracts.aspx", crmnote, "", logc);


                    //generate receipt               
                    DataSet dsrecp = Queries.LoadIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                    int CurrentYear = DateTime.Today.Year;
                    int PreviousYear = DateTime.Today.Year - 1;
                    int NextYear = DateTime.Today.Year + 1;
                    string PreYear = PreviousYear.ToString();
                    string NexYear = NextYear.ToString();
                    string CurYear = CurrentYear.ToString();
                    int cyr = Convert.ToInt32(CurYear) % 100;
                    string cyr1 = cyr.ToString("yy");
                    int tpyr = Convert.ToInt32(PreYear) % 100;
                    int nxyr = Convert.ToInt32(NexYear) % 100;
                    string FinYear = null;
                    string supplyplace = dsrecp.Tables[0].Rows[0]["SupplyPlace"].ToString();
                    string state = dsrecp.Tables[0].Rows[0]["State"].ToString();
                    string statecode = dsrecp.Tables[0].Rows[0]["StateCode"].ToString();
                    string productcode = "PRESTIGE ROYAL RESIDENCES";
                    string usdproductcode = "KARMA ROYAL RESIDENCES";
                    string SAC = "996311";
                    string GSTpercent = "9%";
                    string receipttype = "Deposit";
                    double floodcess = 0; 
                    
                    if (DateTime.Today.Month > 3)
                    {
                        //  FinYear = cyr + "-" + nxyr;
                        FinYear = CurrentYear + "-" + nxyr;
                    }
                    else
                    {
                        //FinYear = tpyr + "-" + cyr;
                        FinYear = PreviousYear + "-" + cyr;

                    }
                    string invoiceno = dsrecp.Tables[0].Rows[0]["ReceiptStart"].ToString() + "/" + FinYear + "/" + dsrecp.Tables[0].Rows[0]["ReceiptGen_Code"].ToString();
                    if (intialdeppercentTextBox.Text == "" || intialdeppercentTextBox.Text == "NaN" || intialdeppercentTextBox.Text == "0" || intialdeppercentTextBox.Text == null)
                    {
                    }
                    else
                    {
                        //calculate gst on intial dep                 
                        if (frpdoldamtTextBox.Text == "" || frpdoldamtTextBox.Text == "NaN" || frpdoldamtTextBox.Text == "0" || frpdoldamtTextBox.Text == null)
                        {
                            if (currencyDropDownList.SelectedItem.Text == "INR")
                            {
                                double indeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double gst = Math.Round(indeposit / 118 * 18 / 2);
                                double taxableamt = Math.Round(indeposit / 118 * 100);
                                if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                                {
                                    floodcess =   Math.Round(taxableamt * 0.01);

                                }
                                else
                                {
                                    floodcess = 0;
                                }
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(),supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, indeposit.ToString(), totaldeposit.ToString(), "0", floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                           "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                           "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," + "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," +
                           "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + indeposit.ToString() +  "," + "Total Deposit(USD):" + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                            }
                            else
                            {
                                double currentrate = Convert.ToDouble(foreigncurrency);
                                double indeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) * currentrate);
                                double gst = 0;
                                double taxableamt = 0;
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, usdproductcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), intialdeppercentTextBox.Text, receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), "0", floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +  "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," + "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," +
                                "Actual Amt:" + intialdeppercentTextBox.Text +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + intialdeppercentTextBox.Text +  "," + "Total Deposit in USD: " + totaldeposit.ToString() +  "," + "Previous Amt:" + "0" + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                            }
                        }
                        else
                        {
                            if (currencyDropDownList.SelectedItem.Text == "INR")
                            {
                                double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                                double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double indeposit = fulldeposit - oldamt;
                                double gst = Math.Round(indeposit / 118 * 18 / 2);
                                double taxableamt = Math.Round(indeposit / 118 * 100);
                                if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                                {
                                    floodcess =   Math.Round(taxableamt * 0.01);

                                }
                                else
                                {
                                    floodcess = 0;
                                }
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);

                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode,  productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, fulldeposit.ToString(), totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:"   + "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() + "," +
                                "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," +
                                "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," +
                                "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);
                            }
                            else
                            {
                                double currentrate = Convert.ToDouble(foreigncurrency);
                                double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                                double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double indeposit1 = fulldeposit - oldamt;
                                double indeposit = Math.Round(Convert.ToDouble(indeposit1) * currentrate);
                                double gst = 0;
                                double taxableamt = 0;
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, usdproductcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(),GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), indeposit1.ToString(), receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:"   + "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," +
                             "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," +
                             "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," + "Actual Amt:" + indeposit1.ToString() +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString() + "," + "Flood Cess @1%:" + floodcess.ToString();
                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                            }
                        }
                    }

                    SOR_AdditionalName(contractdetailsID);
                    LoadDocuments(contractdetailsID, office, financeradiobuttonlist.SelectedItem.Text, contracttypeDropDownList.SelectedItem.Text, Affiliate_Type, mcwaiver, CanxContractNoTextBox.Text, companynameTextBox.Text, StateDropDownList.SelectedItem.Text);
                    Button7.Visible = true;
                    string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";

                    ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);
                    contractnoTextBox.ReadOnly = true;
                    contractnoTextBox.Text = contractno;
                    CreateButton.Visible = false;

                }//points to fractionals
                else if (oldcontracttypeTextBox.Text == "Fractionals")
                {
                    if (financeradio == "Finance")
                    {
                        if (Finance_Type == "Pashuram Finance")
                        {
                            
                            DataSet dsfmr = Queries.LoadFinanceMethodRatesFractional(Finance_Type, ddyr);
                            IGSTrate = dsfmr.Tables[0].Rows[0]["IGST_Rate"].ToString() + "%";
                            Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                            documentationfee = findocfeeTextBox.Text;
                            IGST_Amount = igstamtTextBox.Text;
                            No_Emi = noemiTextBox.Text;
                            emiamt = emiamtTextBox.Text;
                            eurorate = "0";
                            loanamtINEuro = "0";
                            monthlyPremiumprotectionplan = "0";
                        }
                        else if (Finance_Type == "Crown Finance")
                        {
                            No_Emi = noemiTextBox.Text;
                            DataSet dsfmr = Queries.LoadCrownFinanceMethodRatesFractional(Finance_Type, ddyr, No_Emi);
                            IGSTrate = "0";
                            Interestrate = dsfmr.Tables[0].Rows[0]["Interest_rate"].ToString() + "%";
                            documentationfee = findocfeeTextBox.Text;
                            IGST_Amount = "0";
                            emiamt = emiamtTextBox.Text;
                            eurorate = eurorateTextBox.Text;
                            loanamtINEuro = loanamtINEuroTextBox.Text;
                            monthlyPremiumprotectionplan = monthlyPremiumprotectionplanTextBox.Text;
                        }
                        else
                        {
                            IGSTrate = "0";
                            Interestrate = "0";
                        }
                
                       
                    }
                    else if (financeradio == "Non Finance")
                    {

                        Finance_No = "0";
                        documentationfee = "0";
                        IGST_Amount = "0";
                        No_Emi = "0";
                        emiamt = "0";
                        IGSTrate = "0";
                        Interestrate = "0";
                        eurorate = "0";
                        loanamtINEuro = "0";
                        monthlyPremiumprotectionplan = "0";
                    }
                    string resort = Request.Form[ffresortDropDownList.UniqueID];// .SelectedItem.Text;
                    string commencedate = "01-01-" + fffirstyrTextBox.Text;
                    string expirydate = "12-31-" + fflastyrTextBox.Text;

                    string yr = fffirstyrTextBox.Text;
                    string cur = currencyDropDownList.SelectedItem.Text;
                    string res = ffresidencetype1TextBox.Text;
                    string farr = fffractIntDropDownList.SelectedItem.Text;
                    //lease back saved on mcfeestextbox

                    //get mc charges
                    DataSet dsmc = Queries.LoadMCChartfractional(resort, yr, cur, farr, res);
                    if (dsmc.Tables[0].Rows.Count == 0)
                    {
                        propertyfee = "TBA";
                        memberfee = "TBA";
                        membercgst = "TBA";
                        membersgst = "TBA";

                    }
                    else
                    {
                        propertyfee = dsmc.Tables[0].Rows[0]["Property_fee"].ToString();
                        memberfee = dsmc.Tables[0].Rows[0]["Member_fee"].ToString();
                        membercgst = dsmc.Tables[0].Rows[0]["Member_CGST"].ToString();
                        membersgst = dsmc.Tables[0].Rows[0]["Member_SGST"].ToString();
                    }

                    int occyr = Convert.ToInt32(fffirstyrTextBox.Text) - 1;
                    string mcstartdate = Queries.LoadMC_PaymentDate(occyr); // "11/1/" + occyr;



                  
                    if (MarketingProgramDropDownList.SelectedItem.Text == "MEMBER AMBASSADOR" || MarketingProgramDropDownList.SelectedItem.Text == "Member Ambassador" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF FRACTIONAL OWNER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/ S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T/S MEMBER" || MarketingProgramDropDownList.SelectedItem.Text == "GUEST OF T / S MEMBER")
                    {

                        contractno = Queries.GetFractionalContractNoAmb(venue, resort);
                        int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[ffresortDropDownList.UniqueID]);
                    }
                    else
                    {
                        contractno = Queries.GetFractionalContractNo(venue, resort);
                        int updatecontno = Queries.UpdateFractionalContractNo(VenueDropDownList.SelectedItem.Text, Request.Form[ffresortDropDownList.UniqueID]);
                    }
                    int insertcontractdetails = Queries.InsertContractDetails_Indian(contractno, profileid, contsalesrepDropDownList.SelectedItem.Text, TOManagerDropDownList.SelectedItem.Text, ButtonUpDropDownList.SelectedItem.Text, dealdate1, dealstatusDropDownList.SelectedItem.Text, DateTime.Now.ToString(), "", contracttypeDropDownList.SelectedItem.Text, mcwaiver, financeradiobuttonlist.SelectedItem.Text, contractremarkTextBox.Text, pancardnoTextBox.Text.ToUpper(), adharcardTextBox.Text.ToUpper(), propertyfee, mcstartdate, memberfee, membercgst, membersgst, CanxContractNoTextBox.Text, contractdetailsID, "", loanbu, gstinTextBox.Text.ToUpper(), companypanoTextBox.Text.ToUpper(), dealwkno.ToString(), "", "", contractcommentTextBox.Text, user , bu6,updownoption, expirydate, commencedate, contractgroup, contractvenue, ReturnHomeDate);
                    //update
                    int updateGetContractDetails_Indian_ID = Queries.UpdateContractDetails_Indian_ID(office);

                    string log1 = "Contract Created:" +  "Contract # : " + contractno +  "," + "profile ID:" + profileid +  "," + "SalesRep:" + contsalesrepDropDownList.SelectedItem.Text +  "," + "TO Manager:" + TOManagerDropDownList.SelectedItem.Text +  "," + "Button Up:" + ButtonUpDropDownList.SelectedItem.Text +  "," + "Deal Date:" + dealdate1 +  "," + "Deal Status:" + dealstatusDropDownList.SelectedItem.Text +  "," + "Contract Created Date:" + DateTime.Now.ToShortDateString() +  "," + "" + "Contract type:" + contracttypeDropDownList.SelectedItem.Text +  "," + "MC Waiver Applicable:" + mcwaiver +  "," + "Mode:" + financeradiobuttonlist.SelectedItem.Text +  "," + "Remark:" + "" +  "," +
                  "Pancard:" + pancardnoTextBox.Text +  "," + "Adhar card:" + adharcardTextBox.Text +  "," + "Property fee:" + propertyfee +  "," + "MC First Yr:" + mcstartdate +  "," + "Memberfee:" + memberfee +  "," + "Canx Contract No:" + CanxContractNoTextBox.Text +  "," +
                  "contractdetailsID:" + contractdetailsID +  "," + "Canx Date:" + "" +  "," + "Loan BU Officer:" + loanbu +  "," + "GSTIN No:" + gstinTextBox.Text +  "," + "Co. Pan No:" + companypanoTextBox.Text +  "," + "Week no:" + dealwkno +  "," + "Deck no:" + "" +  "," + "Deck details:" + "" +  "," + "Contract comment:" + contractcommentTextBox.Text +  "," +
                  "Contract Created by :" + user +  "," + "Bu After 6pm:" + bu6 +  "," + "Selected Option:" + updownoption +  "," + "Commence date:" + commencedate +  "," + "Expiry date:" + expirydate +  "," + "Contract Group:" + contractgroup +  "," + "Contract Venue:" + contractvenue +  "," + "Return Home Date:" + ReturnHomeDate;
                    int insertlog1 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractnote + "-" + type7, "", log1);


                    int cteamdetails = Queries.InsertContractTeamDetails(contractdetailsID, "", "No", "No", "No", DateTime.Now.ToString(), user, "", "");
                    string logctd = "Contract team Details:" + "contractdetailsID:" + contractdetailsID + "," + "Rep Report: No " + "," + "To Report: No" + "," +
                         "SMS: No" + "," + "Created by:" + user + "," + "created date:" + DateTime.Now.ToString() + "," + "updated by:" + "" + "," + "Updated date:" + "";
                    int insertlogctd = Queries.InsertContractLogs_India(profileid, contractdetailsID, logctd, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractteamnote, "", logctd);


                    string ContractFractionalIndian_ID = Queries.GetContract_Fractional_Indian_ID(office);//  GetContract_Fractional_Indian();
                    int insertfractional = Queries.InsertContract_Fractional_Indian(ContractFractionalIndian_ID, profileid, contractno, Request.Form[ffresortDropDownList.UniqueID], ffresidenceno1TextBox.Text, ffresidencetype1TextBox.Text, fffractIntDropDownList.SelectedItem.Text, ffentitlementDropDownList.SelectedItem.Text, fffirstyrTextBox.Text, fftenureTextBox.Text, fflastyrTextBox.Text, MCFeesTextBox.Text, propertyfee, contractdetailsID);
                    int updatefactgeno = Queries.UpdateContract_Fractional_Indian_ID(office);
                    string log2 = "Fractional Details:" +  "ContractFractionalIndian_ID:" + ContractFractionalIndian_ID +  "," + "profileid:" + profileid +  "," + "contractno:" + contractno +  "," + "Resort:" + Request.Form[ffresortDropDownList.UniqueID] +  "," + "Residence No:" + testresnoTextBox.Text +  "," + "Residence type:" + testresTextBox.Text +  "," + "Fractional Interest:" + fffractIntDropDownList.SelectedItem.Text +  "," +
                      "Entitlement:" + ffentitlementDropDownList.SelectedItem.Text +  "," + "1st Yr Occ:" + fffirstyrTextBox.Text +  "," + "Tenure:" + fftenureTextBox.Text +  "," + "last Yr Occ:" + fflastyrTextBox.Text +  "," + "Lease Back:" + MCFeesTextBox.Text +  "," + "Profperty fee:" + propertyfee +  "," + "contractdetailsID:" + contractdetailsID;
                    int insertlog2 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log2, user, DateTime.Now.ToString(), "Indian_contracts.aspx", fractnote, "", log2);


                    string oldmemtype;
                    if (ftfoldmtypeTextBox.Text == "" || ftfoldmtypeTextBox.Text == null)
                    {
                        oldmemtype = "N/A";
                    }
                    else
                    {
                        oldmemtype = ftfoldmtypeTextBox.Text;
                    }
                    if (ffoldloanamountTextBox.Text == "" || ffoldloanamountTextBox.Text == null)
                    {
                        oldtimeshareloanamount = "N/A";
                    }
                    else
                    {
                        oldtimeshareloanamount = ffoldloanamountTextBox.Text;
                    }
                    
                    string ContractTradeInFractionalIndian_ID = Queries.GetContract_Trade_In_Fractional_Indian_ID(office);// GetContract_Trade_In_Fractional_Indian();
                    int inserttradeinfractweeks = Queries.InsertContract_Trade_In_Fractional_Indian(ContractTradeInFractionalIndian_ID, profileid, contractno, oldcontracttypeTextBox.Text, ffresorttradeTextBox.Text.ToUpper(), ffaptTextBox.Text.ToUpper(), ftnmseasonDropDownList.SelectedItem.Text, ffnowksTextBox.Text.ToUpper(), "", "", ffconnoTextBox.Text, contractdetailsID, oldmemtype.ToUpper());
                    int updatefacttiw = Queries.UpdateContract_Trade_In_Fractional_Indian_ID(office);
                    string log6 = "Trade in Fractional to Fractional:" +   "TradeInFractionalIndian_ID:" + ContractTradeInFractionalIndian_ID +  "," + "Profile ID:" + profileid +  "," + "Contract No:" + contractno +  "," + "Old Contract Type:" + oldcontracttypeTextBox.Text +  "," + "Club:" + ffresorttradeTextBox.Text.ToUpper() +  "," + "Apt:" + ffaptTextBox.Text.ToUpper() +  "," + "Season:" + ftnmseasonDropDownList.SelectedItem.Text +  "," +
                       "No.Weeks:" + ffnowksTextBox.Text.ToUpper() +  "," + "No. Pts:" + "" + "Points Value:" + "" +  "," + "Old Cont.No:" + ffconnoTextBox.Text.ToUpper() +  "," + "Old Membership no:" + oldmemtype.ToUpper() +  "," + "contractdetailsID:" + contractdetailsID;
                    int insertlog6 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log6, user, DateTime.Now.ToString(), "Indian_contracts.aspx", tradeinnote, "", log6);

                    //  Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);
                    if (financeradio == "Finance")
                    {
                        //get the finance no 
                        Finance_No = LoadFinanceNo(venue, contracttypeDropDownList.SelectedItem.Text, Finance_Type);
                       
                    }
                    else
                    {
                        Finance_No = "";
                    }
                    int insertpointsfinancedetails = Queries.InsertFinance_Details_Indian(Finance_Details_Id, profileid, contractno, financeradio, currency, Affiliate_Type, Total_Price_Including_Tax, Initial_Deposit_Percent, Initial_Deposit_Amount, Balance_Payable, Total_Inital_Deposit, Initial_Deposit_Balance, Bal_Amount_Payable, Payment_Method, No_Installments.ToString(), Installment_Amount, Finance_Type, Finance_No, IGSTrate, Interestrate, documentationfee, IGST_Amount, No_Emi, emiamt, "", oldLANo, regcollterm, regcollamt, contractdetailsID, baladepamtdateTextBox.Text, oldtimeshareloanamount, eurorate, loanamtINEuro, monthlyPremiumprotectionplan, ffoldloanagreementnoTextBox.Text );
                    int updatefinanceid = Queries.UpdateFinance_Details_Indian_ID(office);
                    if (financeradio == "Finance")
                    {
                        int updatefinanceno = Queries.UpdateFinanceNo(VenueDropDownList.SelectedItem.Text, Finance_Type, contracttypeDropDownList.SelectedItem.Text);
                    }
                    else { }

                    if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                    {
                        if (financeradio == "Finance")
                        {

                            if (balinitialdepamtTextBox.Text == "" || balinitialdepamtTextBox.Text == "0" || balinitialdepamtTextBox.Text == "NaN")
                            {
                                int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                            }
                            else if (NoinstallmentTextBox.Text == "" || NoinstallmentTextBox.Text == "0" || NoinstallmentTextBox.Text == "NaN")
                            {
                                int updatefin = Queries.UpdatefinanceStartdateIfNoBal(contractno);
                            }
                            else
                            {
                                //get max installmentdate n update finance startdate
                                int updatefin = Queries.UpdatefinanceStartdate(contractno);
                            }

                            financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldtimeshareloanamount);

                        }
                    }
                    else
                    {


                        for (i = 1; i <= Convert.ToInt32(No_Installments); i++)
                        {
                            string installemnt_No = inst + " " + i;
                            ia = "textBox_" + i + "1";
                            iamt = Request.Form[ia];
                            idt = "textBox_" + i + "2";
                            idate = Request.Form[idt];

                            string insinvoice = Queries.GetInstallmentInvoiceNo(office);
                            int FinanceInvoice = Queries.InsertContract_Installments_Indian(profileid, contractno, installemnt_No, iamt, idate, insinvoice, contractdetailsID,depositmethodDropDownList.SelectedItem.Text);
                            //update instalmentno
                            int update = Queries.UpdateInstallmentInvoiceNo(office);
                            string log5 = "Installment Details:" +  "Profile id: " + profileid +  "," + "Contractno: " + contractno +  "," + "Installment #:" + installemnt_No +  "," + "Installment Amt:" + iamt +  "," +
                           "Installment Date:" + idate +  "," + "Invoice no:" + insinvoice +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Payment Mode:" + depositmethodDropDownList.SelectedItem.Text;
                            int insertlog5 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", installmentnote, "", log5);

                        }
                        if (financeradio == "Finance")
                        {
                            //get max installmentdate n update finance startdate
                            int updatefin = Queries.UpdatefinanceStartdate(contractno);
                            string log3 = "Finance Details:" +  "Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                                                         "Initial Deposit" + Initial_Deposit_Percent +  "," + "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," +
                                                         "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," + "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," +
                                                         "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + Queries.GetFinanceMonth(contractno) +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," + "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," +
                                                         "Old loan amt:" + oldtimeshareloanamount +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan + "," + "Open LA No:" + ffoldloanagreementnoTextBox.Text;
                            int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);
                            financebreakup(noemiTextBox.Text, balamtpayableTextBox.Text, emiamtTextBox.Text, contractdetailsID, contracttypeDropDownList.SelectedItem.Text, contractno, NoinstallmentTextBox.Text, oldtimeshareloanamount);
                        }
                        else if (financeradio == "Non Finance")
                        {
                            string log3 = "Finance Details:" +"Finance ID:" + Finance_Details_Id +  "," + "Profile id:" + profileid +  "," + "Contractno:" + contractno +  "," + "Mode:" + financeradio +  "," + "Currency:" + currency +  "," + "Affiliation:" + Affiliate_Type +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," + "Initial Deposit" + Initial_Deposit_Percent +  "," +
                                     "Depsoit Amt:" + Initial_Deposit_Amount +  "," + "Bal Payable if less than 10%:" + Balance_Payable +  "," + "Total Initial Deposit:" + Total_Inital_Deposit +  "," + "Deposit Bal:" + Initial_Deposit_Balance +  "," + "Bal Amt.:" + Bal_Amount_Payable +  "," + "Payment Method:" + Payment_Method +  "," + "No. Installment:" + No_Installments.ToString() +  "," + "Installment Amt.:" + Installment_Amount +  "," +
                                     "Finance type:" + Finance_Type +  "," + "Finance No:" + Finance_No +  "," + "IGST Rate:" + IGSTrate +  "," + "Interest rate:" + Interestrate +  "," + "Documentation fee:" + documentationfee +  "," + "IGST Amt:" + IGST_Amount +  "," + "No. EMI:" + No_Emi +  "," + "Emai Amt:" + emiamt +  "," + "Finance Start month:" + "" +  "," + "Old Loan Agreement No:" + oldLANo +  "," + "RegistryCollection term:" + regcollectiontermTextBox.Text +  "," +
                                     "RegistryCollection Amt:" + regcollamtTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," + "bal Dep Date:" + baladepamtdateTextBox.Text +  "," + "Old loan amt:" + oldtimeshareloanamount +  "," + "Euro Rate applicable:" + eurorate +  "," + "Loan Amt in Euro:" + loanamtINEuro +  "," + "Monthly premium(protectionplan):" + monthlyPremiumprotectionplan+","+"Open LA No:"+ ffoldloanagreementnoTextBox.Text;
                            int insertlog3 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", financedetailsnote, "", log3);

                        }
                    }


                    string Contract_Fractional_PA_Id = Queries.GetContract_Fractional_PA_Indian_ID(office);// Contract_Fractional_PA_Indian();
                    string balpa;
                    if (fractionalbalduedateTextBox.Text == "" || fractionalbalduedateTextBox.Text == null || fractionalbalduedateTextBox.Text == "NaN")
                    {
                        balpa = "";
                    }
                    else
                    {
                        balpa = fractionalbalduedateTextBox.Text;
                    }
                    string uoldvolume, uoldtax, uoldadminfee, uolddeposit;
                    string convertvolume, converttax, convertadminfee, convertdeposit, converttotalvolume;
                    DataSet exrds = Queries.LoadExchange_Rate();
                    string dollarrate = exrds.Tables[0].Rows[0]["ERates_USD"].ToString();
                    if (currencyDropDownList.SelectedItem.Text == "INR")
                    {
                        if (ftifoldvolumeTextBox.Text == "" || ftifoldvolumeTextBox.Text == null || ftifoldvolumeTextBox.Text == "NaN")
                        {
                            uoldvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftifoldvolumeTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldvolume = valueamt.ToString();
                        }
                        if (ftifoldadminTextBox.Text == "" || ftifoldadminTextBox.Text == null || ftifoldadminTextBox.Text == "NaN")
                        {
                            uoldadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftifoldadminTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldadminfee = valueamt.ToString();

                        }
                        if (ftifoldtaxTextBox.Text == "" || ftifoldtaxTextBox.Text == null || ftifoldtaxTextBox.Text == "NaN")
                        {
                            uoldtax = "0";
                        }
                        else
                        {

                            double valueamt = Math.Round(Convert.ToDouble(ftifoldtaxTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uoldtax = valueamt.ToString();

                        }
                        if (ftifoldepositTextBox.Text == "" || ftifoldepositTextBox.Text == null || ftifoldepositTextBox.Text == "NaN")
                        {
                            uolddeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftifoldepositTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            uolddeposit = valueamt.ToString();
                        }
                        if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                        {
                            convertvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertvolume = valueamt.ToString();
                        }
                        if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                        {
                            convertadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertadminfee = valueamt.ToString();
                        }
                       
                        if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                        {
                            converttax = "0";
                        }
                        else
                        {
                           
                            double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            converttax = valueamt.ToString();
                        }
                        if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                        {
                            convertdeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text) / Convert.ToDouble(dollarrate),0);
                            convertdeposit = valueamt.ToString();
                        }
                        if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                        {
                            converttotalvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                            converttotalvolume = valueamt.ToString();
                        }
                    }
                    else
                    {
                        if (ftifoldvolumeTextBox.Text == "" || ftifoldvolumeTextBox.Text == null || ftifoldvolumeTextBox.Text == "NaN")
                        {
                            uoldvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftifoldvolumeTextBox.Text),0);
                            uoldvolume = valueamt.ToString();
                        }
                        if (ftifoldadminTextBox.Text == "" || ftifoldadminTextBox.Text == null || ftifoldadminTextBox.Text == "NaN")
                        {
                            uoldadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftifoldadminTextBox.Text),0);
                            uoldadminfee = valueamt.ToString();

                        }
                        if (ftifoldtaxTextBox.Text == "" || ftifoldtaxTextBox.Text == null || ftifoldtaxTextBox.Text == "NaN")
                        {
                            uoldtax = "0";
                        }
                        else
                        {

                            double valueamt = Math.Round(Convert.ToDouble(ftifoldtaxTextBox.Text),0);
                            uoldtax = valueamt.ToString();

                        }
                        if (ftifoldepositTextBox.Text == "" || ftifoldepositTextBox.Text == null || ftifoldepositTextBox.Text == "NaN")
                        {
                            uolddeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(ftifoldepositTextBox.Text),0);
                            uolddeposit = valueamt.ToString();
                        }

                        if (AdmissionFeesTextBox.Text == "" || AdmissionFeesTextBox.Text == null || AdmissionFeesTextBox.Text == "NaN")
                        {
                            convertvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdmissionFeesTextBox.Text),0);
                            convertvolume = valueamt.ToString();
                        }
                        if (AdministrationFeesTextBox.Text == "" || AdministrationFeesTextBox.Text == null || AdministrationFeesTextBox.Text == "NaN")
                        {
                            convertadminfee = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(AdministrationFeesTextBox.Text),0);
                            convertadminfee = valueamt.ToString();
                        }
                     
                        if (FTotalTaxTextBox.Text == "" || FTotalTaxTextBox.Text == null || FTotalTaxTextBox.Text == "NaN")
                        {
                            converttax = "0";
                        }
                        else
                        {
                          
                            double valueamt = Math.Round(Convert.ToDouble(FTotalTaxTextBox.Text), 0);
                            converttax = valueamt.ToString();
                        }
                        if (fractionaldepositTextBox.Text == "" || fractionaldepositTextBox.Text == null || fractionaldepositTextBox.Text == "NaN")
                        {
                            convertdeposit = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(fractionaldepositTextBox.Text),0);
                            convertdeposit = valueamt.ToString();
                        }
                        if (TotalPurchasePriceTextBox.Text == "" || TotalPurchasePriceTextBox.Text == null || TotalPurchasePriceTextBox.Text == "NaN")
                        {
                            converttotalvolume = "0";
                        }
                        else
                        {
                            double valueamt = Math.Round(Convert.ToDouble(TotalPurchasePriceTextBox.Text), 0);
                            converttotalvolume = valueamt.ToString();
                        }
                    }
                    int insertpointsPA = Queries.InsertContract_Fractional_PA_Indian(Contract_Fractional_PA_Id, profileid, contractno, AdmissionFeesTextBox.Text, AdministrationFeesTextBox.Text, fcgstTextBox.Text, fsgstTextBox.Text, TotalPurchasePriceTextBox.Text, Total_Price_Including_Tax, fractionaldepositTextBox.Text, fractionalbalanceTextBox.Text, balpa, remarksTextBox.Text, ftradeinvalueTextBox.Text, ftotalvalueTextBox.Text, contractdetailsID, ftifoldvolumeTextBox.Text, ftifoldadminTextBox.Text, ftifoldtaxTextBox.Text, ftifoldepositTextBox.Text, uoldvolume, uoldtax, uoldadminfee, uolddeposit, convertvolume, convertadminfee, converttax, convertdeposit,FTotalTaxTextBox.Text, converttotalvolume, dollarrate);
                    int updatefactpa = Queries.UpdateContract_Fractional_PA_Indian_ID(office);
                    string log4 = "Fractional PA Details:" + "Fractional_PA_Id:" + Contract_Fractional_PA_Id +  "," + "Profile:" + profileid +  "," + "Contract no:" + contractno +  "," + "Trade in value:" + ftradeinvalueTextBox.Text +  "," + "Total Value:" + ftotalvalueTextBox.Text +  "," + "AdmissionFees:" + AdmissionFeesTextBox.Text +  "," +
                          " AdministrationFees:" + AdministrationFeesTextBox.Text +  "," + "Total Tax:" + FTotalTaxTextBox.Text +  "," + "CGST:" + fcgstTextBox.Text +  "," + "SGST:" + fsgstTextBox.Text +  "," + "total Purchase price:" + TotalPurchasePriceTextBox.Text +  "," + "Total Price Incl. Tax:" + Total_Price_Including_Tax +  "," +
                          "Deposit Amt:" + fractionaldepositTextBox.Text +  "," + "balance:" + fractionalbalanceTextBox.Text +  "," + "Balance due dates:" + balpa +  "," + "Remarks:" + remarksTextBox.Text +  "," + "contractdetailsID:" + contractdetailsID +  "," +
                          "Old Volume:" + ftifoldvolumeTextBox.Text +  "," + "Old Adminfee:" + ftifoldadminTextBox.Text +  "," + "Old Tax:" + ftifoldtaxTextBox.Text +  "," + "Old Deposit:" + ftifoldepositTextBox.Text +  "," +
                          "Converted Vol:" + convertvolume +  "," + "Converted Admin fee:" + convertadminfee +  "," + "Converted Tax:" + converttax +  "," + "Converted Deposit:" + convertdeposit+ "," + "Total Volume(USD):" + converttotalvolume + "," + "Exchange rate:" + dollarrate;
                    int insertlog4 = Queries.InsertContractLogs_India(profileid, contractdetailsID, log4, user, DateTime.Now.ToString(), "Indian_contracts.aspx", PAnote, "", log4);



                    int crmdetails = Queries.InsertCRM_details(profileid, contractdetailsID, PrgmsrcTextBox.Text, RefByTextBox.Text, "", DateTime.Now.ToString(), "", user, "", "Active");
                    string logc = "CRM Details:" + "Profile id:" + profileid +  "," + "contractdetailsID:" + contractdetailsID +  "," + "Program Src: " + PrgmsrcTextBox.Text +  "," + "Referred by:" + RefByTextBox.Text +  "," +
                                       "Comment:" + "" +  "," + "Created by:" + DateTime.Now.ToString() +  "," + "updated by:" + "" +  "," + "User:" + user +  "," + "Updated by:" + "" +  "," + "status:" + "Active";
                    int insertlogc = Queries.InsertContractLogs_India(profileid, contractdetailsID, logc, user, DateTime.Now.ToString(), "Indian_contracts.aspx", crmnote, "", logc);

                    //generate receipt               
                    DataSet dsrecp = Queries.LoadIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                    int CurrentYear = DateTime.Today.Year;
                    int PreviousYear = DateTime.Today.Year - 1;
                    int NextYear = DateTime.Today.Year + 1;
                    string PreYear = PreviousYear.ToString();
                    string NexYear = NextYear.ToString();
                    string CurYear = CurrentYear.ToString();
                    int cyr = Convert.ToInt32(CurYear) % 100;
                    string cyr1 = cyr.ToString("yy");
                    int tpyr = Convert.ToInt32(PreYear) % 100;
                    int nxyr = Convert.ToInt32(NexYear) % 100;
                    string FinYear = null;
                    string supplyplace = dsrecp.Tables[0].Rows[0]["SupplyPlace"].ToString();
                    string state = dsrecp.Tables[0].Rows[0]["State"].ToString();
                    string statecode = dsrecp.Tables[0].Rows[0]["StateCode"].ToString();
                    string productcode = "PRESTIGE ROYAL RESIDENCES";
                    string usdproductcode = "KARMA ROYAL RESIDENCES";
                    string SAC = "996311";
                    string GSTpercent = "9%";
                    string receipttype = "Deposit";
                    double floodcess = 0;
 

                    if (DateTime.Today.Month > 3)
                    {
                        //  FinYear = cyr + "-" + nxyr;
                        FinYear = CurrentYear + "-" + nxyr;
                    }
                    else
                    {
                        //FinYear = tpyr + "-" + cyr;
                        FinYear = PreviousYear + "-" + cyr;

                    }
                    string invoiceno = dsrecp.Tables[0].Rows[0]["ReceiptStart"].ToString() + "/" + FinYear + "/" + dsrecp.Tables[0].Rows[0]["ReceiptGen_Code"].ToString();
                    if (intialdeppercentTextBox.Text == "" || intialdeppercentTextBox.Text == "NaN" || intialdeppercentTextBox.Text == "0" || intialdeppercentTextBox.Text == null)
                    {
                    }
                    else
                    {
                        //calculate gst on intial dep                 
                        if (frpdoldamtTextBox.Text == "" || frpdoldamtTextBox.Text == "NaN" || frpdoldamtTextBox.Text == "0" || frpdoldamtTextBox.Text == null)
                        {
                            if (currencyDropDownList.SelectedItem.Text == "INR")
                            {
                                double indeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double gst = Math.Round(indeposit / 118 * 18 / 2);
                                double taxableamt = Math.Round(indeposit / 118 * 100);
                                if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                                {
                                    floodcess =  Math.Round(taxableamt * 0.01);

                                }
                                else
                                {
                                    floodcess = 0;
                                }
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, indeposit.ToString(), totaldeposit.ToString(), "0",floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +    "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                  "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                  "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," + "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," +
                                  "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + indeposit.ToString() +  "," + "Total Deposit(USD):" + totaldeposit.ToString() +  "," + "Previous Amt:" + "0"+ "," + "Flood Cess @1%:" + floodcess.ToString();

                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                            }
                            else
                            {
                                double currentrate = Convert.ToDouble(foreigncurrency);
                                double indeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) * currentrate);
                                double gst = 0;
                                double taxableamt = 0;
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, usdproductcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), intialdeppercentTextBox.Text, receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), "0", floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:" +    "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," +
                                 "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," +
                                 "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," + "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," +
                                 "Actual Amt:" + intialdeppercentTextBox.Text +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + intialdeppercentTextBox.Text +  "," + "Total Deposit in USD: " + totaldeposit.ToString() +  "," + "Previous Amt:" + "0"+ "," + "Flood Cess @1%:" + floodcess.ToString();

                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                            }
                        }
                        else
                        {
                            if (currencyDropDownList.SelectedItem.Text == "INR")
                            {
                                double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                                double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double indeposit = fulldeposit - oldamt;
                                double gst = Math.Round(indeposit / 118 * 18 / 2);
                                double taxableamt = Math.Round(indeposit / 118 * 100);
                                if (VenueDropDownList.SelectedItem.Text == "KERALA" || VenueDropDownList.SelectedItem.Text == "Kerala")
                                {
                                    floodcess =   Math.Round(taxableamt * 0.01);

                                }
                                else
                                {
                                    floodcess = 0;
                                }
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text) / Convert.ToDouble(dollarrate), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, productcode, SAC, taxableamt.ToString(), taxableamt.ToString(), GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(), depositmethodDropDownList.SelectedItem.Text, "", "", "", "", "", receipttype, fulldeposit.ToString(), totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:"   + "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() + "," +
                               "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + productcode +  "," + "SAC:" + SAC +  "," + "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," +
                               "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + "" +  "," + "Converted Currency:" + "" +  "," +
                               "Current rate:" + "0" +  "," + "Exchanged date:" + "" +  "," + "Actual Amt:" + " " +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString()+ "," + "Flood Cess @1%:" + floodcess.ToString();

                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);

                            }
                            else
                            {
                                double currentrate = Convert.ToDouble(foreigncurrency);
                                double oldamt = Convert.ToDouble(frpdoldamtTextBox.Text);
                                double fulldeposit = Convert.ToDouble(intialdeppercentTextBox.Text);
                                double indeposit1 = fulldeposit - oldamt;
                                double indeposit = Math.Round(Convert.ToDouble(indeposit1) * currentrate);
                                double gst = 0;
                                double taxableamt = 0;
                                double totaldeposit = Math.Round(Convert.ToDouble(intialdeppercentTextBox.Text), 0);
                                string Contract_Indian_Deposit_ReceiptID = Queries.GetContract_Indian_Deposit_Receipt_ID(office);
                                int receipt = Queries.InsertContract_Indian_Deposit_Receipt(Contract_Indian_Deposit_ReceiptID, contractdetailsID, contractno, invoiceno, DateTime.Now.ToShortDateString(), supplyplace, state, statecode, usdproductcode, SAC, taxableamt.ToString(), taxableamt.ToString(),GSTpercent, gst.ToString(), GSTpercent, gst.ToString(), indeposit.ToString(),  depositmethodDropDownList.SelectedItem.Text, currencyDropDownList.SelectedItem.Text, "Rs.", currentrate.ToString(), DateTime.Now.ToString(), indeposit1.ToString(), receipttype, intialdeppercentTextBox.Text, totaldeposit.ToString(), oldamt.ToString(), floodcess.ToString());
                                int updategenno = Queries.UpdateContract_Indian_Deposit_Receipt_ID(office);
                                //update receiptgen no
                                int updaterecno = Queries.UpdateIndian_ReceiptGeneration(VenueDropDownList.SelectedItem.Text);
                                int updaterecno1 = Queries.UpdateIndian_ReceiptGenerationFinancialYear(VenueDropDownList.SelectedItem.Text);
                                string logr = "Invoice Details:"  + "Deposit_ReceiptID:" + Contract_Indian_Deposit_ReceiptID +  "," + "contractdetails ID:" + contractdetailsID +  "," + "Contractno:" + contractno +  "," + "Invoice No:" + invoiceno +  "," + "Date:" + DateTime.Now.ToShortDateString() +  "," + "Supply Place:" + supplyplace +  "," + "State:" + state +  "," + "State Code:" + statecode +  "," + "Product Code:" + usdproductcode +  "," + "SAC:" + SAC +  "," +
                               "Amount:" + taxableamt.ToString() +  "," + "Taxable value:" + taxableamt.ToString() +  "," + "CGST:" + GSTpercent +  "," + "CGST Amt.:" + gst.ToString() +  "," + "SGST:" + GSTpercent +  "," + "SGST Amt:" + gst.ToString() +  "," + "Total Amount:" + indeposit.ToString() +  "," + "Deposit Payment mode:" + depositmethodDropDownList.SelectedItem.Text +  "," + "Actual currency:" + currencyDropDownList.SelectedItem.Text +  "," +
                               "Converted Currency:" + "Rs." +  "," + "Current rate:" + currentrate.ToString() +  "," + "Exchanged date:" + DateTime.Now.ToShortDateString() +  "," + "Actual Amt:" + indeposit1.ToString() +  "," + "Receipt type:" + receipttype +  "," + "Receipt status:" + "Active" +  "," + "Total Deposit:" + fulldeposit.ToString() +  "," + "Total Deposit(USD): " + totaldeposit.ToString() +  "," + "Previous Amt:" + oldamt.ToString()+ "," + "Flood Cess @1%:" + floodcess.ToString();

                                int insertlogr = Queries.InsertContractLogs_India(profileid, contractdetailsID, logr, user, DateTime.Now.ToString(), "Indian_contracts.aspx", contractreceiptnote, "", logr);


                            }
                        }
                    }

                    SOR_AdditionalName(contractdetailsID);
                    LoadDocuments(contractdetailsID, office, financeradiobuttonlist.SelectedItem.Text, contracttypeDropDownList.SelectedItem.Text, Affiliate_Type, mcwaiver, CanxContractNoTextBox.Text, companynameTextBox.Text, StateDropDownList.SelectedItem.Text);
                    Button7.Visible = true;
                    string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";

                    ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);
                    contractnoTextBox.ReadOnly = true;
                    contractnoTextBox.Text = contractno;
                    CreateButton.Visible = false;


                }//fractional to fractional

            }//trade in fractionals




        }//else of finanaceardiobutton

    }
 
    protected void Button5_Click(object sender, EventArgs e)
    {
         if (contracttypeDropDownList.SelectedItem.Text == "Fractional")
        {
            string printr = PrintPdfDropDownList.SelectedItem.Text;
            if (printr.Contains("BREAKUP"))// == "BREAKUP")
            {
                DataTable datatable = Queries.LoanEMIBreakupFinance(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr.Contains("RECEIPT"))// == "RECEIPT")
            {
                DataTable datatable = Queries.ReceiptPage(contractnoTextBox.Text );
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr == "REP REPORT")
            {
                DataTable datatable = Queries.Rep_ReportProc(contractnoTextBox.Text );
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            //else if (printr == "ADDITION OF NAME LETTER")
            else if (printr.Contains("ADDITION"))
            {
                DataTable datatable = Queries.AdditionalName_FractionalProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
            else if (printr.Contains("SOR"))
            {
                DataTable datatable = Queries.SOR_FractionalProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }

            else if (printr.Contains("AUTHORISED"))
            {
                DataTable datatable = Queries.CompanyLetterHead(contractnoTextBox.Text );
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
            else if (printr.Contains("LEASE"))// (printr== "ADDITION OF NAME LETTER")
            {
                DataTable datatable = Queries.Leaseback_FractionalProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }

            else if (printr.Contains("MAINTAINENCE"))// (printr== "ADDITION OF NAME LETTER")
            {
                DataTable datatable = Queries.Leaseback_FractionalProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
            else
            {
                DataTable datatable = Queries.Fractional_PA(contractnoTextBox.Text );

                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
        }
        else if (contracttypeDropDownList.SelectedItem.Text == "Points")
        {


            string printr = PrintPdfDropDownList.SelectedItem.Text;
            if (printr.Contains("BREAKUP"))//== "BREAKUP")
            {
                DataTable datatable = Queries.LoanEMIBreakupFinance(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr.Contains("RECEIPT"))//== "RECEIPT")
            {
                DataTable datatable = Queries.ReceiptPage(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr == "REP REPORT")
            {
                DataTable datatable = Queries.Rep_ReportProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr.Contains("ADDITION"))//(printr == "ADDITION OF NAME LETTER")
            {
                DataTable datatable = Queries.AdditionalName_NewPointsProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
          /*  else if (printr.Contains("sor"))
            {

                

            }*/
    
                else if (printr.Contains("AUTHORISED"))
                {
                    DataTable datatable = Queries.CompanyLetterHead(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export();
                    crystalReport.Close();
                    crystalReport.Dispose();
                Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }
            else
            {
                DataTable datatable = Queries.NewPoints_PA(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }


        }
        else if (contracttypeDropDownList.SelectedItem.Text == "Trade-In-Points")
        {


            string printr = PrintPdfDropDownList.SelectedItem.Text;
            if (printr.Contains("BREAKUP"))//== "BREAKUP")
            {
                DataTable datatable = Queries.LoanEMIBreakupFinance(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr.Contains("RECEIPT"))// == "RECEIPT")
            {
                DataTable datatable = Queries.ReceiptPage(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr == "REP REPORT")
            {
                DataTable datatable = Queries.Rep_ReportProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr.Contains("ADDITION"))//(printr == "ADDITION OF NAME LETTER")
            {
                DataTable datatable = Queries.AdditionalName_TIPProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
            else if (printr.Contains("SOR"))
            {
                DataTable datatable = Queries.SOR_TIPProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
    
        else if (printr.Contains("AUTHORISED"))
                {
                    DataTable datatable = Queries.CompanyLetterHead(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export();
                    crystalReport.Close();
                    crystalReport.Dispose();
                Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }
            else
            {
                DataTable datatable = Queries.TradeInPoints_PA(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }

        }
        else if (contracttypeDropDownList.SelectedItem.Text == "Trade-In-Weeks")
        {
            string printr = PrintPdfDropDownList.SelectedItem.Text;
            if (printr.Contains("BREAKUP"))// == "BREAKUP")
            {
                DataTable datatable = Queries.LoanEMIBreakupFinance(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr.Contains("RECEIPT"))// == "RECEIPT")
            {
                DataTable datatable = Queries.ReceiptPage(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr == "REP REPORT")
            {
                DataTable datatable = Queries.Rep_ReportProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }
            else if (printr.Contains("ADDITION"))// (printr == "ADDITION OF NAME LETTER")
            {
                DataTable datatable = Queries.AdditionalName_TIWProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
            else if (printr.Contains("SOR"))
            {
                DataTable datatable = Queries.SOR_TIWProc(contractnoTextBox.Text);
                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();

            }
    
else if (printr.Contains("AUTHORISED"))
                {
                    DataTable datatable = Queries.CompanyLetterHead(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export();
                    crystalReport.Close();
                    crystalReport.Dispose();
                Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }
            else
            {
                DataTable datatable = Queries.TradeInWeeks_PA(contractnoTextBox.Text);

                ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                crystalReport.SetDataSource(datatable);
                System.IO.FileStream fs = null;
                long FileSize = 0;
                DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                oDest.DiskFileName = ExportFileName;
                crystalReport.ExportOptions.DestinationOptions = oDest;
                crystalReport.Export();
                crystalReport.Close();
                crystalReport.Dispose();
                Response.Clear();
                Response.Buffer = true;
                Response.AddHeader("Content-Type", "application/pdf");
                //   string fn = "test" + ".pdf";
                string fn = printr + ".pdf";
                Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                FileSize = fs.Length;
                byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                fs.Close();
                Response.BinaryWrite(bBuffer);
                Response.Flush();
            }

        }
        
          else if (contracttypeDropDownList.SelectedItem.Text == "Trade-In-Fractionals")
            {
                string printr = PrintPdfDropDownList.SelectedItem.Text;
                if (printr.Contains("BREAKUP"))// == "BREAKUP")
                {
                    DataTable datatable = Queries.LoanEMIBreakupFinance(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();
                }
                else if (printr.Contains("RECEIPT"))// == "RECEIPT")
                {
                    DataTable datatable = Queries.ReceiptPage(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();
                }
                else if (printr == "REP REPORT")
                {
                    DataTable datatable = Queries.Rep_ReportProc(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();
                }
                //else if (printr == "ADDITION OF NAME LETTER")
                else if (printr.Contains("ADDITION"))
                {
                    DataTable datatable = Queries.AdditionalName_FractionalProc(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }
                else if (printr.Contains("SOR"))
                {
                    DataTable datatable = Queries.SOR_FractionalProc(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }

                else if (printr.Contains("AUTHORISED"))
                {
                    DataTable datatable = Queries.CompanyLetterHead(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }
                else if (printr.Contains("LEASE"))// (printr== "ADDITION OF NAME LETTER")
                {
                    DataTable datatable = Queries.Leaseback_FractionalProc(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }

                else if (printr.Contains("MAINTAINENCE"))// (printr== "ADDITION OF NAME LETTER")
                {
                    DataTable datatable = Queries.Leaseback_FractionalProc(contractnoTextBox.Text);
                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }
                else
                {
                    DataTable datatable = Queries.Fractional_PA(contractnoTextBox.Text);

                    ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
                    crystalReport.Load(Server.MapPath("~/ireports/" + printr + ".rpt")); // path of report       
                    crystalReport.SetDataSource(datatable);
                    System.IO.FileStream fs = null;
                    long FileSize = 0;
                    DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
                    string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
                    crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
                    crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
                    oDest.DiskFileName = ExportFileName;
                    crystalReport.ExportOptions.DestinationOptions = oDest;
                    crystalReport.Export(); crystalReport.Close(); crystalReport.Dispose();
                    Response.Clear();
                    Response.Buffer = true;
                    Response.AddHeader("Content-Type", "application/pdf");
                    //   string fn = "test" + ".pdf";
                    string fn = printr + ".pdf";
                    Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

                    fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
                    FileSize = fs.Length;
                    byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
                    fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
                    fs.Close();
                    Response.BinaryWrite(bBuffer);
                    Response.Flush();

                }
            }



    }


    [WebMethod]
    public static string getPointsAmoountTax(string currency)
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        sqlcon.Open();
        string JSON = "{\n \"names\":[";
        string query = "select amount,taxValue from PointsContract where currency='"+currency+"' and status='Active' ;";
        SqlCommand sql =new SqlCommand(query,sqlcon);

        SqlDataReader reader = sql.ExecuteReader();
        while (reader.Read())
        {
            double amount = reader.GetDouble(0);
            double tax = reader.GetDouble(1);
            JSON += "[\"" + amount + "\",\"" + tax + "\"],";
        }
        JSON = JSON.Substring(0, JSON.Length - 1);
        JSON += "] \n}";

        return JSON;

    }
    //Code commented by gaurav 8-12-2017
    //[WebMethod]
    //public static string getContractnoOnClub(string venue, string venuegrp, string club,string nationality)
    //{

    //    string JSON = "{\n \"names\":[";
    //    if(nationality=="Indian")
    //    {
    //        SqlDataReader reader = Queries.GetIncrementValueofContractClubIndian(venue, venuegrp, club, nationality);
    //        while (reader.Read())
    //        {
    //            string code = reader.GetString(0);
    //            //  string src = reader.GetString(1);
    //            //  string inc = reader.GetString(2);
    //            //JSON += "[\"" + code + "\",\"" + src + "\",\"" + inc + "\"],";

    //            JSON += "[\"" + code + "\"],";
    //        }
    //        JSON = JSON.Substring(0, JSON.Length - 1);
    //        JSON += "] \n}";

    //    }

    //    else
    //    {
    //        SqlDataReader reader = Queries.GetIncrementValueofContractClubNonIndian(venue, venuegrp, club, nationality);
    //        while (reader.Read())
    //        {
    //            string code = reader.GetString(0);
    //            //  string src = reader.GetString(1);
    //            //  string inc = reader.GetString(2);
    //            //JSON += "[\"" + code + "\",\"" + src + "\",\"" + inc + "\"],";
    //            JSON += "[\"" + code + "\"],";
    //        }
    //        JSON = JSON.Substring(0, JSON.Length - 1);
    //        JSON += "] \n}";

    //    }


    //    return JSON;

    //}




        // new code gaurav
    [WebMethod]
        public static string getContractnoOnClub(string venue,string venuegrp,string club,string mk, string nationality)
    {
        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        sqlcon.Open();
        string JSON = "{\n \"names\":[";
        if (mk == "CANCELLED MEMBER" || mk == "Cancelled Member" || mk   == "Member Marketing" || mk  == "MEMBER MARKETING")
        {
            if (nationality == "Indian" || nationality == "INDIAN" || nationality == "OCI" || nationality == "PIO")
            {
                string query = "SELECT Contract_Code+'/'+ REPLACE(CONVERT(CHAR(8), GETDATE(), 3), '/', '')+'/'+Increment_Value+vg.Venue_group_Code+'R' from Contract_Club cc join Venue_Group vg on vg.Venue_ID = cc.Venue_ID join venue v on v.Venue_ID = vg.Venue_ID where v.Venue_Name ='" + venue + "' and cc.Contract_Club_Name ='" + club + "' and vg.Venue_Group_Name ='" + venuegrp + "' and (cc.Nationality ='INDIAN' or cc.Nationality ='Indian')";
                SqlCommand sql = new SqlCommand(query, sqlcon);

                SqlDataReader reader = sql.ExecuteReader();
                if (reader.HasRows)
                {


                    while (reader.Read())
                    {
                        string code = reader.GetString(0);
                        JSON += "[\"" + code + "\"],";
                    }
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }
                else
                {
                    JSON += "[\"" + "" + "\"],";
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }
            }
            else
            {
                string query = "SELECT Contract_Code + '/' + REPLACE(CONVERT(CHAR(8), GETDATE(), 3), '/', '') + '/' + Increment_Value + vg.Venue_group_Code+'R' from Contract_Club cc join Venue_Group vg on vg.Venue_ID = cc.Venue_ID join venue v on v.Venue_ID = vg.Venue_ID where v.Venue_Name ='" + venue + "' and cc.Contract_Club_Name ='" + club + "' and vg.Venue_Group_Name ='" + venuegrp + "' and (cc.Nationality !='INDIAN'  or cc.Nationality !='Indian')";
                SqlCommand sql = new SqlCommand(query, sqlcon);

                SqlDataReader reader = sql.ExecuteReader();
                if (reader.HasRows)
                {
                    while (reader.Read())
                    {
                        string code = reader.GetString(0);
                        JSON += "[\"" + code + "\"],";
                    }
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }
                else
                {
                    JSON += "[\"" + "" + "\"],";
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }
            }

        }
        else
        {


            if (nationality == "Indian" || nationality == "INDIAN" || nationality == "OCI" || nationality == "PIO")
            {
                string query = "SELECT Contract_Code+'/'+ REPLACE(CONVERT(CHAR(8), GETDATE(), 3), '/', '')+'/'+Increment_Value+vg.Venue_group_Code from Contract_Club cc join Venue_Group vg on vg.Venue_ID = cc.Venue_ID join venue v on v.Venue_ID = vg.Venue_ID where v.Venue_Name ='" + venue + "' and cc.Contract_Club_Name ='" + club + "' and vg.Venue_Group_Name ='" + venuegrp + "' and (cc.Nationality ='INDIAN' or cc.Nationality ='Indian')";
                SqlCommand sql = new SqlCommand(query, sqlcon);

                SqlDataReader reader = sql.ExecuteReader();
                if (reader.HasRows)
                {
                    while (reader.Read())
                    {
                        string code = reader.GetString(0);
                        JSON += "[\"" + code + "\"],";
                    }
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }
                else
                {
                    JSON += "[\"" + "" + "\"],";
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }
            }
            else
            {
                string query = "SELECT Contract_Code + '/' + REPLACE(CONVERT(CHAR(8), GETDATE(), 3), '/', '') + '/' + Increment_Value + vg.Venue_group_Code from Contract_Club cc join Venue_Group vg on vg.Venue_ID = cc.Venue_ID join venue v on v.Venue_ID = vg.Venue_ID where v.Venue_Name ='" + venue + "' and cc.Contract_Club_Name ='" + club + "' and vg.Venue_Group_Name ='" + venuegrp + "' and (cc.Nationality !='INDIAN'  or cc.Nationality !='Indian')";
                SqlCommand sql = new SqlCommand(query, sqlcon);

                SqlDataReader reader = sql.ExecuteReader();
                if (reader.HasRows)
                {
                    while (reader.Read())
                    {
                        string code = reader.GetString(0);
                        JSON += "[\"" + code + "\"],";
                    }
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }
                else
                {
                    JSON += "[\"" + "" + "\"],";
                    JSON = JSON.Substring(0, JSON.Length - 1);
                    JSON += "] \n}";
                }

            }
        }

        return JSON;
    }



  //  [WebMethod]
    //public static string getFinanceNo(string venue, string finance,string type)
    //{

    //    string JSON = "{\n \"names\":[";
    //    string code;
    //    SqlDataReader reader = Queries.GetFinanceNoIncrementValue(venue,finance,type);
    //    if (reader.HasRows)
    //    {
    //        while (reader.Read())
    //        {
    //            if (type == "Fractional" || type == "Trade-In-Fractionals")
    //            {
    //                code = reader.GetString(0) + "Z3";
    //            }
    //            else
    //            {
    //                code = reader.GetString(0) + "Z3";
    //            }

    //            JSON += "[\"" + code + "\"],";

    //        }
    //        JSON = JSON.Substring(0, JSON.Length - 1);
    //        JSON += "] \n}";
    //    }
    //    else
    //    {
    //        JSON += "[\"" + "" + "\"],";
    //        JSON = JSON.Substring(0, JSON.Length - 1);
    //        JSON += "] \n}";
    //    }

    //    return JSON;

    //}
    [WebMethod]
    public static string GetfractionalResidenceType(string resort)
    {

        string JSON = "{\n \"names\":[";
        SqlDataReader reader = Queries.LoadfractionalResidencetype(resort);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string type = reader.GetString(0);

                JSON += "[\"" + type + "\"],";

            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }

        return JSON;

    }
    [WebMethod]
    public static string LoadfractionalResidenceNo(string resort)
    {

        string JSON = "{\n \"names\":[";


        SqlDataReader reader = Queries.LoadfractionalResidenceNo(resort);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string mn = reader.GetString(0);

                JSON += "[\"" + mn + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        return JSON;
    }



    [WebMethod]
    public static string getContractnoOnResort(string venue, string club, string nationality)
    {
        
        string JSON = "{\n \"names\":[";
        if (nationality == "Indian"|| nationality == "INDIAN" || nationality == "OCI" || nationality == "PIO")

        {
            SqlDataReader reader = Queries.GetIncrementValueofContractResortIndian(venue, club);//, nationality);
            
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    string code = reader.GetString(0);

                    JSON += "[\"" + code + "\"],";
                }
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }
            else
            {
                JSON += "[\"" + "" + "\"],";
             
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }
        }
        else
        {
            SqlDataReader reader = Queries.GetIncrementValueofContractResortNonIndian(venue, club);//, nationality);
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    string code = reader.GetString(0);

                    JSON += "[\"" + code + "\"],";
                }
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }
            else
            {
                JSON += "[\"" + "" + "\"],";
           
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }
        }
        return JSON;

    }


[WebMethod]
public static string LoadClubNameonContractType(string contracttype)
{

    string JSON = "{\n \"names\":[";


    SqlDataReader reader = Queries.LoadClubOnContractType(contracttype);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string club = reader.GetString(0);

                JSON += "[\"" + club + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
   

    return JSON;
}


    [WebMethod]
    public static string getVenueOnCountry(string countryName)
    {
        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        string JSON = "{\n \"names\":[";
        sqlcon.Open();

        string query = " select venue.Venue_Name,venue.Venue_ID from venue where Venue_Country_ID in(select Venue_Country_ID from VenueCountry where Venue_Country_Name = '" + countryName + "')";
        SqlCommand sql = new SqlCommand(query, sqlcon);

        SqlDataReader reader = sql.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string name = reader.GetString(0);
                JSON += "[\"" + name + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
           
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
           
        }
        sqlcon.Close();
        return JSON;
    }

    [WebMethod]
    public static string getVenueGroupOnVenue(string venue)
    {
        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        string JSON = "{\n \"names\":[";
        sqlcon.Open();

        string query = "select vg.Venue_Group_ID,vg.Venue_Group_Name from Venue_Group vg where vg.Venue_ID in(select venue.Venue_ID from venue where venue.Venue_Name ='" + venue + "') and vg.Venue_Group_Status='Active'";
        SqlCommand sql = new SqlCommand(query, sqlcon);

        SqlDataReader reader = sql.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string name = reader.GetString(1);
                JSON += "[\"" + name + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";

        }
        sqlcon.Close();
        return JSON;
    }

    [WebMethod]
    public static string LoadManagersOnVenue(string venue)
    {

        string JSON = "{\n \"names\":[";


        SqlDataReader reader = Queries.LoadManagersOnVenue1(venue,office);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string mn = reader.GetString(0);

                JSON += "[\"" + mn + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";

        }
        return JSON;
    }








    protected void Button6_Click(object sender, EventArgs e)
    {
        Session["oProfile_Venue_Country"] = ""; Session["oProfile_Venue"] = ""; Session["oProfile_Group_Venue"] = ""; Session["oProfile_Marketing_Program"] = "";
        Session["oProfile_Agent"] = ""; Session["oProfile_Agent_Code"] = ""; Session["oProfile_Member_Type1"] = ""; Session["oProfile_Member_Number1"] = "";
        Session["oProfile_Member_Type2"] = ""; Session["oProfile_Member_Number2"] = ""; Session["oProfile_Employment_status"] = ""; Session["oProfile_Marital_status"] = "";
        Session["oProfile_NOY_Living_as_couple"] = ""; Session["oOffice"] = ""; Session["oComments"] = ""; Session["oManager"] = "";
        Session["ophid"] = ""; Session["ocard"] = "";
        Session["SubVenue"] = ""; Session["RegTerms"] = "";
        Session["Lead_Source"] = ""; Session["Sub_Venue_Group"] = ""; Session["leadOffice"] = ""; Session["Sale_Marketing_Source"] = "";







        Session["oProfile_Primary_Title"] = ""; Session["oProfile_Primary_Fname"] = ""; Session["oProfile_Primary_Lname"] = "";
        Session["oProfile_Primary_DOB"] = ""; Session["oProfile_Primary_Nationality"] = ""; Session["oProfile_Primary_Country"] = "";
        Session["opage"] = ""; Session["opdesignation"] = ""; Session["oplang"] = "";

        Session["oProfile_Secondary_Title"] = ""; Session["oProfile_Secondary_Fname"] = ""; Session["oProfile_Secondary_Lname"] = "";
        Session["oProfile_Secondary_DOB"] = ""; Session["oProfile_Secondary_Nationality"] = ""; Session["oProfile_Secondary_Country"] = "";
        Session["osage"] = ""; Session["osdesignation"] = ""; Session["oslang"] = "";

        Session["oSub_Profile1_Title"] = ""; Session["oSub_Profile1_Fname"] = ""; Session["oSub_Profile1_Lname"] = "";
        Session["oSub_Profile1_DOB"] = ""; Session["  oSub_Profile1_Nationality"] = ""; Session["oSub_Profile1_Country"] = "";
        Session["osp1age"] = "";

        Session["oSub_Profile2_Title"] = ""; Session["oSub_Profile2_Fname"] = ""; Session["oSub_Profile2_Lname"] = "";
        Session["oSub_Profile2_DOB"] = ""; Session["  oSub_Profile2_Nationality"] = ""; Session["oSub_Profile2_Country"] = "";
        Session["osp2age"] = "";

        Session["oSub_Profile3_Title"] = ""; Session["oSub_Profile3_Fname"] = ""; Session["oSub_Profile3_Lname"] = "";
        Session["oSub_Profile3_DOB"] = ""; Session["  oSub_Profile3_Nationality"] = ""; Session["oSub_Profile3_Country"] = "";
        Session["osp3age"] = "";

        Session["oSub_Profile4_Title"] = ""; Session["oSub_Profile4_Fname"] = ""; Session["oSub_Profile4_Lname"] = "";
        Session["oSub_Profile4_DOB"] = ""; Session["  oSub_Profile4_Nationality"] = ""; Session["oSub_Profile4_Country"] = "";
        Session["osp4age"] = "";

        Session["oProfile_Address_Line1"] = ""; Session["oProfile_Address_Line2"] = ""; Session["oProfile_Address_State"] = "";
        Session["oProfile_Address_city"] = ""; Session["oProfile_Address_Postcode"] = ""; Session["oProfile_Address_Created_Date"] = "";
        Session["oProfile_Address_Expiry_Date"] = ""; Session["oProfile_Address_Country"] = "";

        Session["oProfile_CorAddress_Line1"] = ""; Session["oProfile_CorAddress_Line2"] = ""; Session["oProfile_CorAddress_State"] = "";
        Session["oProfile_CorAddress_city"] = ""; Session["oProfile_CorAddress_Postcode"] = ""; Session["oProfile_CorAddress_Created_Date"] = "";
        Session["oProfile_Address_Expiry_Date"] = ""; Session["oProfile_CorAddress_Country"] = "";

        Session["oPrimary_CC"] = ""; Session["oPrimary_Mobile"] = ""; Session["oPrimary_Alt_CC"] = "";
        Session["oPrimary_Alternate"] = ""; Session["opriOfficecc"] = ""; Session["opriOfficeno"] = "";

        Session["osecOfficecc"] = ""; Session["osecofficeno"] = ""; Session["oSecondary_CC"] = "";
        Session["oSecondary_Mobile"] = ""; Session["oSecondary_Alt_CC"] = ""; Session["oSecondary_Alternate"] = "";

        Session["oSubprofile1_CC"] = ""; Session["oSubprofile1_Mobile"] = ""; Session["oSubprofile1_Alt_CC"] = ""; Session["oSubprofile1_Alternate"] = "";
        Session["oSubprofile2_CC"] = ""; Session["oSubprofile2_Mobile"] = ""; Session["oSubprofile2_Alt_CC"] = ""; Session["oSubprofile2_Alternate"] = "";

        Session["oSubprofile3_CC"] = ""; Session["oSubprofile3_Mobile"] = ""; Session["oSubprofile3_Alt_CC"] = ""; Session["oSubprofile3_Alternate"] = "";
        Session["oSubprofile4_CC"] = ""; Session["oSubprofile4_Mobile"] = ""; Session["oSubprofile4_Alt_CC"] = ""; Session["oSubprofile4_Alternate"] = "";

        Session["oPrimary_Email"] = ""; Session["oSecondary_Email"] = ""; Session["oSubprofile1_Email"] = "";
        Session["oSubprofile2_Email"] = ""; Session["oSubprofile3_Email"] = ""; Session["oSubprofile4_Email"] = "";

        Session["oPrimary_Email2"] = ""; Session["oSecondary_Email2"] = ""; Session["oSubprofile1_Email2"] = "";
        Session["oSubprofile2_Email2"] = ""; Session["oSubprofile3_Email2"] = ""; Session["oSubprofile4_Email2"] = "";

        Session["oProfile_Stay_ID"] = ""; Session["oProfile_Stay_Resort_Name"] = ""; Session["oProfile_Stay_Resort_Room_Number"] = "";
        Session["oProfile_Stay_Arrival_Date"] = ""; Session["oProfile_Stay_Departure_Date"] = "";

        Session["oTour_Details_Guest_Status"] = ""; Session["oTour_Details_Guest_Sales_Rep"] = ""; Session["oTour_Details_Tour_Date"] = "";
        Session["tourweekno"] = ""; Session["oTour_Details_Sales_Deck_Check_In"] = ""; Session["oTour_Details_Sales_Deck_Check_Out"] = "";
        Session["oTour_Details_Taxi_In_Price"] = ""; Session["oTour_Details_Taxi_In_Ref"] = ""; Session["oTour_Details_Taxi_Out_Price"] = "";
        Session["oTour_Details_Taxi_Out_Ref"] = ""; Session["oComments"] = ""; Session["oregTerms"] = ""; Session["ocomment2"] = "";

        Session["pmobile"] = ""; Session["palternate"] = ""; Session["smobile"] = ""; Session["salternate"] = ""; Session["priOfficeno"] = "";
        Session["sp1mobile"] = ""; Session["sp1alternate"] = ""; Session["sp2mobile"] = ""; Session["sp2alternate"] = ""; Session["secOfficeno"] = "";
        Session["sp3mobile"] = ""; Session["sp3alternate"] = ""; Session["sp4mobile"] = ""; Session["sp4alternate"] = "";

        Session["pmobilec"] = ""; Session["palternatec"] = ""; Session["smobilec"] = ""; Session["salternatec"] = ""; Session["sp1mobilec"] = ""; Session["sp1alternatec"] = "";
        Session["sp2mobilec"] = ""; Session["sp2alternatec"] = ""; Session["sp3mobilec"] = ""; Session["sp3alternatec"] = ""; Session["sp4mobilec"] = ""; Session["sp4alternatec"] = "";

        Session["pcc"] = ""; Session["paltrcc"] = ""; Session["scc"] = ""; Session["saltcc"] = ""; Session["sp1cc"] = ""; Session["sp1altcc"] = ""; Session["priOfficecc"] = "";
        Session["sp2cc"] = ""; Session["sp2altccc"] = ""; Session["sp3cc"] = ""; Session["sp3altccc"] = ""; Session["sp4cc"] = ""; Session["sp4altccc"] = ""; Session["secOfficecc"] = "";

        Session["ocompanyname"] = ""; Session["pemail"] = ""; Session["semail"] = ""; Session["sp1email"] = ""; Session["sp2email"] = ""; Session["sp3email"] = ""; Session["sp4email"] = "";
        Session["pemail2"] = ""; Session["semail2"] = ""; Session["sp1email2"] = ""; Session["sp2email2"] = ""; Session["sp3email2"] = ""; Session["sp4email2"] = "";

        Session["regTerms"] = ""; Session["tourweekno"] = ""; Session["sechomecc"] = ""; Session["sechomecc"] = "";
        Session["sechomeno"] = ""; Session["prihomeno"] = ""; Session["oprihomeno"] = ""; Session["oprihomecc"] = "";
        Session["osechomecc"] = ""; Session["osechomeno"] = "";
        Session["pancardspell"] = ""; Session["cogstinospell"] = "";

       Session["ProfileID"] = Convert.ToString(Request.QueryString["Profile_ID"]);

        DataSet ds = Queries.LoadProfielDetailsFull(Session["ProfileID"].ToString());// (profileidTextBox.Text);

        Session["oProfile_Venue_Country"] = ds.Tables[0].Rows[0]["Profile_Venue_Country"].ToString();
        Session["oProfile_Venue"] = ds.Tables[0].Rows[0]["Profile_Venue"].ToString();
        Session["oProfile_Group_Venue"] = ds.Tables[0].Rows[0]["Profile_Group_Venue"].ToString();
        Session["oProfile_Marketing_Program"] = ds.Tables[0].Rows[0]["Profile_Marketing_Program"].ToString();
        Session["oProfile_Agent"] = ds.Tables[0].Rows[0]["Profile_Agent"].ToString();
        Session["oProfile_Agent_Code"] = ds.Tables[0].Rows[0]["Profile_Agent_Code"].ToString();
        Session["oProfile_Member_Type1"] = ds.Tables[0].Rows[0]["Profile_Member_Type1"].ToString();
        Session["oProfile_Member_Number1"] = ds.Tables[0].Rows[0]["Profile_Member_Number1"].ToString();
        Session["oProfile_Member_Type2"] = ds.Tables[0].Rows[0]["Profile_Member_Type2"].ToString();
        Session["oProfile_Member_Number2"] = ds.Tables[0].Rows[0]["Profile_Member_Number2"].ToString();
        Session["oProfile_Employment_status"] = ds.Tables[0].Rows[0]["Profile_Employment_status"].ToString();
        Session["oProfile_Marital_status"] = ds.Tables[0].Rows[0]["Profile_Marital_status"].ToString();
        Session["oProfile_NOY_Living_as_couple"] = ds.Tables[0].Rows[0]["Profile_NOY_Living_as_couple"].ToString();
        Session["oOffice"] = ds.Tables[0].Rows[0]["Office"].ToString();
        Session["oComments"] = ds.Tables[0].Rows[0]["Comments"].ToString();
        Session["oManager"] = ds.Tables[0].Rows[0]["Manager"].ToString();
        Session["ophid"] = ds.Tables[0].Rows[0]["Photo_identity"].ToString();
        Session["ocard"] = ds.Tables[0].Rows[0]["Card_Holder"].ToString();
        Session["ocomment2"] = ds.Tables[0].Rows[0]["comment2"].ToString();        
        Session["SubVenue"] = ds.Tables[0].Rows[0]["SubVenue"].ToString();
        Session["Lead_Source"] =   ds.Tables[0].Rows[0]["Lead_Source"].ToString();
        Session["Sub_Venue_Group"] = ds.Tables[0].Rows[0]["Sub_Venue_Group"].ToString();
        Session["leadOffice"] = ds.Tables[0].Rows[0]["leadOffice"].ToString();
 


        Session["oProfile_Primary_Title"] = ds.Tables[0].Rows[0]["Profile_Primary_Title"].ToString();
        Session["oProfile_Primary_Fname"] = ds.Tables[0].Rows[0]["Profile_Primary_Fname"].ToString();
        Session["oProfile_Primary_Lname"] = ds.Tables[0].Rows[0]["Profile_Primary_Lname"].ToString();
        Session["oProfile_Primary_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Primary_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Primary_DOB"].ToString()).ToString("yyyy-MM-dd");
        Session["oProfile_Primary_Nationality"] = ds.Tables[0].Rows[0]["Profile_Primary_Nationality"].ToString();
        Session["oProfile_Primary_Country"] = ds.Tables[0].Rows[0]["Profile_Primary_Country"].ToString();
        Session["opage"] = ds.Tables[0].Rows[0]["Primary_Age"].ToString();
        Session["opdesignation"] = ds.Tables[0].Rows[0]["Primary_Designation"].ToString();
        Session["oplang"] = ds.Tables[0].Rows[0]["Primary_Language"].ToString();

        Session["oProfile_Secondary_Title"] = ds.Tables[0].Rows[0]["Profile_Secondary_Title"].ToString();
        Session["oProfile_Secondary_Fname"] = ds.Tables[0].Rows[0]["Profile_Secondary_Fname"].ToString();
        Session["oProfile_Secondary_Lname"] = ds.Tables[0].Rows[0]["Profile_Secondary_Lname"].ToString();
        Session["oProfile_Secondary_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Secondary_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Secondary_DOB"].ToString()).ToString("yyyy-MM-dd");
        Session["oProfile_Secondary_Nationality"] = ds.Tables[0].Rows[0]["Profile_Secondary_Nationality"].ToString();
        Session["oProfile_Secondary_Country"] = ds.Tables[0].Rows[0]["Profile_Secondary_Country"].ToString();
        Session["osage"] = ds.Tables[0].Rows[0]["Secondary_Age"].ToString();
        Session["osdesignation"] = ds.Tables[0].Rows[0]["Secondary_Designation"].ToString();
        Session["oslang"] = ds.Tables[0].Rows[0]["Secondary_Language"].ToString();

        Session["oSub_Profile1_Title"] = ds.Tables[0].Rows[0]["Sub_Profile1_Title"].ToString();
        Session["oSub_Profile1_Fname"] = ds.Tables[0].Rows[0]["Sub_Profile1_Fname"].ToString();
        Session["oSub_Profile1_Lname"] = ds.Tables[0].Rows[0]["Sub_Profile1_Lname"].ToString();
        Session["oSub_Profile1_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile1_DOB"]);//Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile1_DOB"].ToString()).ToString("yyyy-MM-dd");
        Session["oSub_Profile1_Nationality"] = ds.Tables[0].Rows[0]["Sub_Profile1_Nationality"].ToString();
        Session["oSub_Profile1_Country"] = ds.Tables[0].Rows[0]["Sub_Profile1_Country"].ToString();
        Session["osp1age"] = ds.Tables[0].Rows[0]["Sub_Profile1_Age"].ToString();

        Session["oSub_Profile2_Title"] = ds.Tables[0].Rows[0]["Sub_Profile2_Title"].ToString();
        Session["oSub_Profile2_Fname"] = ds.Tables[0].Rows[0]["Sub_Profile2_Fname"].ToString();
        Session["oSub_Profile2_Lname"] = ds.Tables[0].Rows[0]["Sub_Profile2_Lname"].ToString();
        Session["oSub_Profile2_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile2_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile2_DOB"].ToString()).ToString("yyyy-MM-dd");
        Session["oSub_Profile2_Nationality"] = ds.Tables[0].Rows[0]["Sub_Profile2_Nationality"].ToString();
        Session["oSub_Profile2_Country"] = ds.Tables[0].Rows[0]["Sub_Profile2_Country"].ToString();
        Session["osp2age"] = ds.Tables[0].Rows[0]["Sub_Profile2_Age"].ToString();

        Session["oSub_Profile3_Title"] = ds.Tables[0].Rows[0]["Sub_Profile3_Title"].ToString();
        Session["oSub_Profile3_Fname"] = ds.Tables[0].Rows[0]["Sub_Profile3_Fname"].ToString();
        Session["oSub_Profile3_Lname"] = ds.Tables[0].Rows[0]["Sub_Profile3_Lname"].ToString();
        Session["oSub_Profile3_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile3_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile3_DOB"].ToString()).ToString("yyyy-MM-dd");
        Session["oSub_Profile3_Nationality"] = ds.Tables[0].Rows[0]["Sub_Profile3_Nationality"].ToString();
        Session["oSub_Profile3_Country"] = ds.Tables[0].Rows[0]["Sub_Profile3_Country"].ToString();
        Session["osp3age"] = ds.Tables[0].Rows[0]["Sub_Profile3_Age"].ToString();

        Session["oSub_Profile4_Title"] = ds.Tables[0].Rows[0]["Sub_Profile4_Title"].ToString();
        Session["oSub_Profile4_Fname"] = ds.Tables[0].Rows[0]["Sub_Profile4_Fname"].ToString();
        Session["oSub_Profile4_Lname"] = ds.Tables[0].Rows[0]["Sub_Profile4_Lname"].ToString();
        Session["oSub_Profile4_DOB"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Sub_Profile4_DOB"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Sub_Profile4_DOB"].ToString()).ToString("yyyy-MM-dd");
        Session["oSub_Profile4_Nationality"] = ds.Tables[0].Rows[0]["Sub_Profile4_Nationality"].ToString();
        Session["oSub_Profile4_Country"] = ds.Tables[0].Rows[0]["Sub_Profile4_Country"].ToString();
        Session["osp4age"] = ds.Tables[0].Rows[0]["Sub_Profile4_Age"].ToString();

        Session["oProfile_Address_Line1"] = ds.Tables[0].Rows[0]["Profile_Address_Line1"].ToString();
        Session["oProfile_Address_Line2"] = ds.Tables[0].Rows[0]["Profile_Address_Line2"].ToString();
        Session["oProfile_Address_State"] = ds.Tables[0].Rows[0]["Profile_Address_State"].ToString();
        Session["oProfile_Address_city"] = ds.Tables[0].Rows[0]["Profile_Address_city"].ToString();
        Session["oProfile_Address_Postcode"] = ds.Tables[0].Rows[0]["Profile_Address_Postcode"].ToString();
        Session["oProfile_Address_Created_Date"] = ds.Tables[0].Rows[0]["Profile_Address_Created_Date"].ToString();
        Session["oProfile_Address_Expiry_Date"] = ds.Tables[0].Rows[0]["Profile_Address_Expiry_Date"].ToString();
        Session["oProfile_Address_Country"] = ds.Tables[0].Rows[0]["Profile_Address_Country"].ToString();


        Session["oProfile_CorAddress_Line1"] = ds.Tables[0].Rows[0]["Address_Line1"].ToString();
        Session["oProfile_CorAddress_Line2"] = ds.Tables[0].Rows[0]["Address_Line2"].ToString();
        Session["oProfile_CorAddress_State"] = ds.Tables[0].Rows[0]["Address_State"].ToString();
        Session["oProfile_CorAddress_city"] = ds.Tables[0].Rows[0]["Address_city"].ToString();
        Session["oProfile_CorAddress_Postcode"] = ds.Tables[0].Rows[0]["Address_Postcode"].ToString();
        Session["oProfile_CorAddress_Created_Date"] = ds.Tables[0].Rows[0]["Address_Created_Date"].ToString();
        Session["oProfile_CorAddress_Expiry_Date"] = ds.Tables[0].Rows[0]["Expiry_Date"].ToString();
        Session["oProfile_CorAddress_Country"] = ds.Tables[0].Rows[0]["Address_Country"].ToString();

        Session["oPrimary_CC"] = ds.Tables[0].Rows[0]["Primary_CC"].ToString();
        Session["oPrimary_Mobile"] = ds.Tables[0].Rows[0]["Primary_Mobile"].ToString();
        Session["oPrimary_Alt_CC"] = ds.Tables[0].Rows[0]["Primary_Alt_CC"].ToString();
        Session["oPrimary_Alternate"] = ds.Tables[0].Rows[0]["Primary_Alternate"].ToString();
        Session["opriOfficecc"] = ds.Tables[0].Rows[0]["Primary_office_cc"].ToString();
        Session["opriOfficeno"] = ds.Tables[0].Rows[0]["Primary_office_num"].ToString();

        Session["oprihomecc"] = ds.Tables[0].Rows[0]["Primary_home_cc"].ToString();
        Session["oprihomeno"] = ds.Tables[0].Rows[0]["Primary_home_num"].ToString();

        Session["osecOfficecc"] = ds.Tables[0].Rows[0]["Secondary_office_cc"].ToString();
        Session["osecofficeno"] = ds.Tables[0].Rows[0]["Secondary_office_num"].ToString();
        
        Session["osechomecc"] = ds.Tables[0].Rows[0]["Secondary_home_cc"].ToString();
        Session["osechomeno"] = ds.Tables[0].Rows[0]["Secondary_home_num"].ToString();

        Session["oSecondary_CC"] = ds.Tables[0].Rows[0]["Secondary_CC"].ToString();
        Session["oSecondary_Mobile"] = ds.Tables[0].Rows[0]["Secondary_Mobile"].ToString();
        Session["oSecondary_Alt_CC"] = ds.Tables[0].Rows[0]["Secondary_Alt_CC"].ToString();
        Session["oSecondary_Alternate"] = ds.Tables[0].Rows[0]["Secondary_Alternate"].ToString();

        Session["oSubprofile1_CC"] = ds.Tables[0].Rows[0]["Subprofile1_CC"].ToString();
        Session["oSubprofile1_Mobile"] = ds.Tables[0].Rows[0]["Subprofile1_Mobile"].ToString();
        Session["oSubprofile1_Alt_CC"] = ds.Tables[0].Rows[0]["Subprofile1_Alt_CC"].ToString();
        Session["oSubprofile1_Alternate"] = ds.Tables[0].Rows[0]["Subprofile1_Alternate"].ToString();

        Session["oSubprofile2_CC"] = ds.Tables[0].Rows[0]["Subprofile2_CC"].ToString();
        Session["oSubprofile2_Mobile"] = ds.Tables[0].Rows[0]["Subprofile2_Mobile"].ToString();
        Session["oSubprofile2_Alt_CC"] = ds.Tables[0].Rows[0]["Subprofile2_Alt_CC"].ToString();
        Session["oSubprofile2_Alternate"] = ds.Tables[0].Rows[0]["Subprofile2_Alternate"].ToString();

        Session["oSubprofile3_CC"] = ds.Tables[0].Rows[0]["Subprofile3_CC"].ToString();
        Session["oSubprofile3_Mobile"] = ds.Tables[0].Rows[0]["Subprofile3_Mobile"].ToString();
        Session["oSubprofile3_Alt_CC"] = ds.Tables[0].Rows[0]["Subprofile3_Alt_CC"].ToString();
        Session["oSubprofile3_Alternate"] = ds.Tables[0].Rows[0]["Subprofile3_Alternate"].ToString();

        Session["oSubprofile4_CC"] = ds.Tables[0].Rows[0]["Subprofile4_CC"].ToString();
        Session["oSubprofile4_Mobile"] = ds.Tables[0].Rows[0]["Subprofile4_Mobile"].ToString();
        Session["oSubprofile4_Alt_CC"] = ds.Tables[0].Rows[0]["Subprofile4_Alt_CC"].ToString();
        Session["oSubprofile4_Alternate"] = ds.Tables[0].Rows[0]["Subprofile4_Alternate"].ToString();

        Session["oPrimary_Email"] = ds.Tables[0].Rows[0]["Primary_Email"].ToString();     
        Session["oSecondary_Email"] = ds.Tables[0].Rows[0]["Secondary_Email"].ToString();
        Session["oSubprofile1_Email"] = ds.Tables[0].Rows[0]["Subprofile1_Email"].ToString();
        Session["oSubprofile2_Email"] = ds.Tables[0].Rows[0]["Subprofile2_Email"].ToString();
        Session["oSubprofile3_Email"] = ds.Tables[0].Rows[0]["Subprofile3_Email"].ToString();
        Session["oSubprofile4_Email"] = ds.Tables[0].Rows[0]["Subprofile4_Email"].ToString();

        Session["oPrimary_Email2"] = ds.Tables[0].Rows[0]["Primary_Email2"].ToString();
        Session["oSecondary_Email2"] = ds.Tables[0].Rows[0]["Secondary_Email2"].ToString();
        Session["oSubprofile1_Email2"] = ds.Tables[0].Rows[0]["Subprofile1_Email2"].ToString();
        Session["oSubprofile2_Email2"] = ds.Tables[0].Rows[0]["Subprofile2_Email2"].ToString();
        Session["oSubprofile3_Email2"] = ds.Tables[0].Rows[0]["Subprofile3_Email2"].ToString();
        Session["oSubprofile4_Email2"] = ds.Tables[0].Rows[0]["Subprofile4_Email2"].ToString();

        Session["oProfile_Stay_ID"] = ds.Tables[0].Rows[0]["Profile_Stay_ID"].ToString();
        Session["oProfile_Stay_Resort_Name"] = ds.Tables[0].Rows[0]["Profile_Stay_Resort_Name"].ToString();
        Session["oProfile_Stay_Resort_Room_Number"] = ds.Tables[0].Rows[0]["Profile_Stay_Resort_Room_Number"].ToString();
        Session["oProfile_Stay_Arrival_Date"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Stay_Arrival_Date"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Stay_Arrival_Date"].ToString()).ToString("yyyy-MM-dd");
        Session["oProfile_Stay_Departure_Date"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Profile_Stay_Departure_Date"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Profile_Stay_Departure_Date"].ToString()).ToString("yyyy-MM-dd");

        Session["oTour_Details_Guest_Status"] = ds.Tables[0].Rows[0]["Tour_Details_Guest_Status"].ToString();
        Session["oTour_Details_Guest_Sales_Rep"] = ds.Tables[0].Rows[0]["Tour_Details_Guest_Sales_Rep"].ToString();
        Session["oTour_Details_Tour_Date"] = String.Format("{0:dd-MM-yyyy}", ds.Tables[0].Rows[0]["Tour_Details_Tour_Date"]); //Convert.ToDateTime(ds.Tables[0].Rows[0]["Tour_Details_Tour_Date"].ToString()).ToString("yyyy-MM-dd");
        Session["tourweekno"] = ds.Tables[0].Rows[0]["Week_number"].ToString();
        Session["oTour_Details_Sales_Deck_Check_In"] = ds.Tables[0].Rows[0]["Tour_Details_Sales_Deck_Check_In"].ToString();
        Session["oTour_Details_Sales_Deck_Check_Out"] = ds.Tables[0].Rows[0]["Tour_Details_Sales_Deck_Check_Out"].ToString();
        Session["oTour_Details_Taxi_In_Price"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_In_Price"].ToString();
        Session["oTour_Details_Taxi_In_Ref"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_In_Ref"].ToString();
        Session["oTour_Details_Taxi_Out_Price"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_Out_Price"].ToString();
        Session["oTour_Details_Taxi_Out_Ref"] = ds.Tables[0].Rows[0]["Tour_Details_Taxi_Out_Ref"].ToString();
        Session["oComments"] = ds.Tables[0].Rows[0]["Comments"].ToString();
        Session["oregTerms"] = ds.Tables[0].Rows[0]["RegTerms"].ToString();

        Session["pancardspell"] = ds.Tables[0].Rows[0]["Primary_ID_Num"].ToString();
        Session["cogstinospell"] = ds.Tables[0].Rows[0]["Primary_ID_Num2"].ToString();
   
  
        //update profile

        string user =(string)Session["username"]; 
        createdbyTextBox.Text = user;
        //get office of user
        string office =Queries.GetOfficeFromCountry(Session["ProfileID"].ToString()); //Queries.GetOffice(user);

        string dummy = TextBox2.Text;
        string profile = Session["ProfileID"].ToString();// profileidTextBox.Text;
        string createdby = createdbyTextBox.Text;
        string venuecountry = VenueCountryDropDownList.SelectedItem.Text;
        string venue = VenueDropDownList.SelectedItem.Text;
        string venuegroup = GroupVenueDropDownList.SelectedItem.Text;
        string mktg = Request.Form["MarketingProgramDropDownList"];// MarketingProgramDropDownList.SelectedItem.Text; ////
        if (venuegroup == "Coldline" || venuegroup == "COLDLINE")
        {
            if (mktg == "")
            {
                mktg = MarketingProgramDropDownList.Items[0].Text;

                // mktg = Queries.getMarketingAbbOnMarketingProgram(venue, venuegroup, mktg);

            }
            else
            {
                mktg = Request.Form["MarketingProgramDropDownList"];
            }
        }
        else
        {
            if (mktg == "")
            {
                mktg = MarketingProgramDropDownList.Items[0].Text;

                mktg = Queries.getMarketingAbbOnMarketingProgram(venue, venuegroup, mktg);

            }
           
            else
            {
                mktg = Request.Form["MarketingProgramDropDownList"];
                 mktg = Queries.getMarketingAbbOnMarketingProgram1(venue, venuegroup, mktg);
            }
        }
        string agents= Request.Form["AgentDropDownList"];// .SelectedItem.Text;
        //string agents1;
        if (agents == "")
        {
            agents = AgentDropDownList.Items[0].Text;
        }
        else
        {
            agents = Request.Form["AgentDropDownList"];
        }
        string agentcode = Request.Form["TONameDropDownList"];// .SelectedItem.Text;
        if (agentcode == "")
        {
            agentcode = TONameDropDownList.Items[0].Text;

        }else
        {
            agentcode = Request.Form["TONameDropDownList"];
        }

        string mgr;

        if (venuegroup=="Coldline" || venuegroup=="COLDLINE")
        {
           mgr = Request.Form["ManagerDropDownList"];// SelectedItem.Text;
            if (mgr == "")
            {
                mgr = ManagerDropDownList.Items[0].Text;

            }
            else
            {
                mgr = Request.Form["ManagerDropDownList"];
            }

        }
        else
        {

             mgr = agentcode;
        }

      



        string photoidentity;
        if (Request.Form["pidentity"] == null)
        {
            photoidentity = "";
        }
        else
        {
            photoidentity = Request.Form["pidentity"];
        }
        string card;
        if (Request.Form["card"] == null)
        {
            card = "";
        }
        else
        {
            card = Request.Form["card"];
        }


        string guestRelations = "";

        if (venuecountry == "India" || venuecountry == "INDIA")
        {
            if ((venuegroup == "Inhouse" || venuegroup == "INHOUSE") && (TextBox2.Text == "CANCELLED MEMBER" || TextBox2.Text == "Cancelled Member"))
            {
                guestRelations = "";
            }
            else if ((venuegroup == "Inhouse" || venuegroup == "INHOUSE") && (TextBox2.Text == "REVOKED MEMBER" || TextBox2.Text == "Revoked Member"))
            {
                guestRelations = "MRG";

            }
            else if ((venuegroup == "Inhouse" || venuegroup == "INHOUSE") && (TextBox2.Text == "EXPIRED WD" || TextBox2.Text == "Expired WD"))
            {
                guestRelations = "WD";

            }
            else
            {
                guestRelations = "";
            }

        }
       

        //member details
        string membertype1 = MemType1DropDownList.SelectedItem.Text;// .SelectedItem.Text;
        string memno1 = Memno1TextBox.Text;
        //if (mktg == "Owner" || mktg == "OWNER"|| mktg == "Member" || mktg == "MEMBER")
        //{
            if (mktg == "T/S MEMBER" || mktg == "T/S MEMBER RCI" || mktg == "FRACTIONAL OWNER" || mktg == "FRACTIONAL OWNER RCI" || mktg == "Owner" || mktg == "OWNER" || mktg == "Member" || mktg == "MEMBER")
        { 
                membertype1 = MemType1DropDownList.SelectedItem.Text;
            string memno = Memno1TextBox.Text;
            if (memno == null || memno=="")
            {
                memno1 = "";
            }
            else
            {
                memno1 = Memno1TextBox.Text;
            }

        }
        else
        {
            membertype1 = MemType1DropDownList.SelectedItem.Text;
            string memno =TypeDropDownList.SelectedItem.Text;
            if (memno == null || memno=="")
            {

                memno1 = "";
            }
            else
            {

                memno1 = TypeDropDownList.SelectedItem.Text;
            }


        }



        string membertype2 = Request.Form[MemType2DropDownList.UniqueID];// .SelectedItem.Text;
        string memno2 = Memno2TextBox.Text;


        string subVenue= Request.Form["SubVenueDropDownList"];
        if (subVenue=="" || subVenue == null)
        {
            subVenue= SubVenueDropDownList.Items[0].Text;
        }else
        {
            subVenue= Request.Form["SubVenueDropDownList"];
        }


        string subVenueGroup = Request.Form["SubVenueGroupDropDownList"];
        if (subVenueGroup == "" || subVenueGroup == null)
        {
            subVenueGroup = SubVenueGroupDropDownList.Items[0].Value;
        }
        else
        {
            subVenueGroup = Request.Form["SubVenueGroupDropDownList"];
        }


        string leadOffice = "" ;
        if (venuegroup=="Inhouse" || venuegroup == "INHOUSE")
        {
            leadOffice = "";
        }
        else if(venuegroup == "FlyBuy" || venuegroup == "FLYBUY" || venuegroup == "CallCenter")
        {
             leadOffice = Request.Form["LeadOfficeDropDownList"];
            if (leadOffice == "" || leadOffice == null)
            {
                leadOffice = LeadOfficeDropDownList.Items[0].Text;
            }
            else
            {
                leadOffice = Request.Form["LeadOfficeDropDownList"];
            }
        }

        


        //primary profile
        string primarytitle = PrimaryTitleDropDownList.SelectedItem.Text;
         
        string primaryfname = pfnameTextBox.Text.ToUpper().Replace("'", "''");

        string primaylname = plnameTextBox.Text.ToUpper().Replace("'", "''");
        string primarydob = primarydobdatepicker.Text;//Convert.ToDateTime(pdobdatepicker.Text).ToString("yyyy-MM-dd");
        string primarynationality = PrimarynationalityDropDownList.SelectedItem.Text;
        string primarycountry = primarycountryDropDownList.SelectedItem.Text;
        string npage = primaryAge.Text;
        string npdesg = pdesginationTextBox.Text.ToUpper();
        string primarylanguage;


        if (Request.Form["primarylang"] == null)
        {
            primarylanguage = "";
        }
        else
        {
            primarylanguage = Request.Form["primarylang"];

        }


        Session["pcc"] = Request.Form["primarymobileDropDownList"];//primarymobileDropDownList.SelectedItem.Text;

        if (Session["pcc"].ToString() == "")
        {
            Session["pcc"] = primarymobileDropDownList.Items[0].Text;
        }
        else
        {
            Session["pcc"] = Request.Form["primarymobileDropDownList"];

        }





        Session["paltrcc"] = Request.Form["primaryalternateDropDownList"]; //primaryalternateDropDownList.SelectedItem.Text;
        if (Session["paltrcc"].ToString() == "")
        {
            Session["paltrcc"] = primaryalternateDropDownList.Items[0].Text;
        }
        else
        {
            Session["paltrcc"] = Request.Form["primaryalternateDropDownList"];
        }
        //}
        if (pmobileTextBox.Text == "" || pmobileTextBox.Text == null)
        {
            Session["pmobile"] = "";
        }
        else
        {
            Session["pmobile"] = pmobileTextBox.Text;
        }

        if (palternateTextBox.Text == "" || palternateTextBox.Text == null)
        {
            Session["palternate"] = "";
        }
        else
        {
            Session["palternate"] = palternateTextBox.Text;
        }

        if (pemailTextBox.Text == "" || pemailTextBox.Text == null)
        {
            Session["pemail"] = "";
        }
        else
        {
            Session["pemail"] = pemailTextBox.Text.ToUpper();
        }
        if (pemail2TextBox.Text == "" || pemail2TextBox.Text == null)
        {
            Session["pemail2"] = "";
        }
        else
        {
            Session["pemail2"] = pemail2TextBox.Text.ToUpper();
        }

        //secondary profile

        string secondarytitle = secondarytitleDropDownList.SelectedItem.Text;
        string secondaryfname = sfnameTextBox.Text.ToUpper().Replace("'", "''"); 
        string secondarylname = slnameTextBox.Text.ToUpper().Replace("'", "''");
        string secondarydob = secondarydobdatepicker.Text;//Convert.ToDateTime(sdobdatepicker.Text).ToString("yyyy-MM-dd"); 
        string secondarynationality = secondarynationalityDropDownList.SelectedItem.Text;
        string secondarycountry = secondarycountryDropDownList.SelectedItem.Text;
        string nsage = secondaryAge.Text;
        string nsdesg = sdesignationTextBox.Text.ToUpper();

        string secondarylanguage;
        if (Request.Form["seclang"] == null)
        {
            secondarylanguage = "";
        }
        else
        {
            secondarylanguage = Request.Form["seclang"];

        }
        Session["scc"] = Request.Form["secondarymobileDropDownList"];//secondarymobileDropDownList.SelectedItem.Text;
        if (Session["scc"].ToString() == "")
        {
            Session["scc"] = secondarymobileDropDownList.Items[0].Text;
        }
        else
        {
            Session["scc"] = Request.Form["secondarymobileDropDownList"];
        }


        Session["saltcc"] = Request.Form["secondaryalternateDropDownList"];//secondaryalternateDropDownList.SelectedItem.Text;
        if (Session["saltcc"].ToString() == "")
        {
            Session["saltcc"] = secondaryalternateDropDownList.Items[0].Text;
        }
        else
        {
            Session["saltcc"] = Request.Form["secondaryalternateDropDownList"];

        }

        Session["priOfficecc"] = Request.Form["pofficecodeDropDownList"];
        if (Session["priOfficecc"].ToString() == "")
        {
            Session["priOfficecc"] = pofficecodeDropDownList.Items[0].Text;
        }
        else
        {
            Session["priOfficecc"] = Request.Form["pofficecodeDropDownList"];
        }


        Session["priHomecc"] = Request.Form["phomecodeDropDownList"];
        if (Session["priHomecc"].ToString() == "")
        {
            Session["priHomecc"] = phomecodeDropDownList.Items[0].Text;
        }
        else
        {
            Session["priHomecc"] = Request.Form["phomecodeDropDownList"];
        }


        Session["secOfficecc"] = Request.Form["sofficecodeDropDownList"];
        if (Session["secOfficecc"].ToString() == "")
        {
            Session["secOfficecc"] = sofficecodeDropDownList.Items[0].Text;
        }
        else
        {
            Session["secOfficecc"] = Request.Form["sofficecodeDropDownList"];
        }

       
        Session["sechomecc"] = Request.Form["shomecodeDropDownList"];
        if (Session["sechomecc"].ToString() == "")
        {
            Session["sechomecc"] = shomecodeDropDownList.Items[0].Text;
        }
        else
        {
            Session["sechomecc"] = Request.Form["shomecodeDropDownList"];
        }


        if (smobileTextBox.Text == "" || smobileTextBox.Text == null)
        {
            Session["smobile"] = "";
        }
        else
        {
            Session["smobile"] = smobileTextBox.Text;
        }
        if (salternateTextBox.Text == "" || salternateTextBox.Text == null)
        {
            Session["salternate"] = "";
        }
        else
        {
            Session["salternate"] = salternateTextBox.Text;
        }


        if (pofficenoTextBox.Text == "" || pofficenoTextBox.Text == null)
        {
            Session["priOfficeno"] = "";
        }
        else
        {
            Session["priOfficeno"] = pofficenoTextBox.Text;
        }

       
        if (phomenoTextBox.Text == "" || phomenoTextBox.Text == null)
        {
            Session["prihomeno"] = "";
        }
        else
        {
            Session["prihomeno"] = phomenoTextBox.Text;
        }




        if (sofficenoTextBox.Text == "" || sofficenoTextBox.Text == null)
        {
            Session["secOfficeno"] = "";
        }
        else
        {
            Session["secOfficeno"] = sofficenoTextBox.Text;
        }


        if (shomenoTextBox.Text == "" || shomenoTextBox.Text == null)
        {
            Session["sechomeno"] = "";
        }
        else
        {
            Session["sechomeno"] = shomenoTextBox.Text;
        }


        if (semailTextBox.Text == "" || semailTextBox.Text == null)
        {
            Session["semail"] = "";
        }
        else
        {
            Session["semail"] = semailTextBox.Text.ToUpper();
        }
        if (semail2TextBox.Text == "" || semail2TextBox.Text == null)
        {
            Session["semail2"] = "";
        }
        else
        {
            Session["semail2"] = semail2TextBox.Text.ToUpper();
        }


        //sub profile1


        string sp1title = sp1titleDropDownList.SelectedItem.Text;
        string sp1fname = sp1fnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp1lname = sp1lnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp1dob = sp1dobdatepicker.Text;


        string sp1nationality = sp1nationalityDropDownList.SelectedItem.Text;
        string sp1country = sp1countryDropDownList.SelectedItem.Text;
        string nsp1age = subProfile1Age.Text;


        Session["sp1cc"] = Request.Form["sp1mobileDropDownList"];//sp1mobileDropDownList.SelectedItem.Text;
        if (Session["sp1cc"].ToString() == "")
        {
            Session["sp1cc"] = sp1mobileDropDownList.Items[0].Text;
        }
        else
        {

            Session["sp1cc"] = Request.Form["sp1mobileDropDownList"];

        }


        Session["sp1altcc"] = Request.Form["sp1alternateDropDownList"];// sp1alternateDropDownList.SelectedItem.Text;

        if (Session["sp1altcc"].ToString() == "")
        {
            Session["sp1altcc"] = sp1alternateDropDownList.Items[0].Text;
        }
        else
        {
            Session["sp1altcc"] = Request.Form["sp1alternateDropDownList"]; ;
        }
        //}


        if (sp1mobileTextBox.Text == "" || sp1mobileTextBox.Text == null)
        {
            Session["sp1mobile"] = "";
        }
        else
        {
            Session["sp1mobile"] = sp1mobileTextBox.Text;
        }
        if (sp1alternateTextBox.Text == "" || sp1alternateTextBox.Text == null)
        {
            Session["sp1alternate"] = "";
        }
        else
        {
            Session["sp1alternate"] = sp1alternateTextBox.Text;
        }
        if (sp1pemailTextBox.Text == "" || sp1pemailTextBox.Text == null)
        {
            Session["sp1email"] = "";
        }
        else
        {
            Session["sp1email"] = sp1pemailTextBox.Text.ToUpper();
        }
        if (sp1pemail2TextBox.Text == "" || sp1pemail2TextBox.Text == null)
        {
            Session["sp1email2"] = "";
        }
        else
        {
            Session["sp1email2"] = sp1pemail2TextBox.Text.ToUpper();
        }


        //sub profile 2
        string sp2title = sp2titleDropDownList.SelectedItem.Text;
        string sp2fname = sp2fnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp2lname = sp2lnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp2dob = sp2dobdatepicker.Text;//Convert.ToDateTime(sp2dobdatepicker.Text).ToString("yyyy-MM-dd");
        string sp2nationality = sp2nationalityDropDownList.SelectedItem.Text;
        string sp2country = sp2countryDropDownList.SelectedItem.Text;
        string nsp2age = subProfile2Age.Text;
        Session["sp2cc"] = Request.Form["sp2mobileDropDownList"];//sp2mobileDropDownList.SelectedItem.Text;
        if (Session["sp2cc"].ToString() == "")
        {
            Session["sp2cc"] = sp2mobileDropDownList.Items[0].Text;
        }
        else
        {

            Session["sp2cc"] = Request.Form["sp2mobileDropDownList"];

        }
       

        Session["sp2altccc"] = Request.Form["sp2alternateDropDownList"]; //sp2alternateDropDownList.SelectedItem.Text;
        if (Session["sp2altccc"].ToString() == "")
        {
            Session["sp2altccc"] = sp2alternateDropDownList.Items[0].Text;
        }
        else
        {
            Session["sp2altccc"] = Request.Form["sp2alternateDropDownList"];

        }
        


        if (sp2mobileTextBox.Text == "" || sp2mobileTextBox.Text == null)
        {
            Session["sp2mobile"] = "";
        }
        else
        {
            Session["sp2mobile"] = sp2mobileTextBox.Text;

        }
        if (sp2alternateTextBox.Text == "" || sp2alternateTextBox.Text == null)
        {
            Session["sp2alternate"] = "";

        }
        else
        {
            Session["sp2alternate"] = sp2alternateTextBox.Text;

        }
        if (sp2pemailTextBox.Text == "" || sp2pemailTextBox.Text == null)
        {
            Session["sp2email"] = "";
        }
        else
        {
            Session["sp2email"] = sp2pemailTextBox.Text.ToUpper();
        }
        if (sp2pemail2TextBox.Text == "" || sp2pemail2TextBox.Text == null)
        {
            Session["sp2email2"] = "";
        }
        else
        {
            Session["sp2email2"] = sp2pemail2TextBox.Text.ToUpper();
        }
        // sub profile 3//
        string sp3title = sp3titleDropDownList.SelectedItem.Text;
        string sp3fname = sp3fnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp3lname = sp3lnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp3dob = sp3dobdatepicker.Text;//Convert.ToDateTime(sp2dobdatepicker.Text).ToString("yyyy-MM-dd");
        string sp3nationality = sp3nationalityDropDownList.SelectedItem.Text;
        string sp3country = sp3countryDropDownList.SelectedItem.Text;
        string nsp3age = subProfile3Age.Text;
        Session["sp3cc"] = Request.Form["sp3mobileDropDownList"];//sp2mobileDropDownList.SelectedItem.Text;
        if (Session["sp3cc"].ToString() == "")
        {
            Session["sp3cc"] = sp3mobileDropDownList.Items[0].Text;
        }
        else
        {

            Session["sp3cc"] = Request.Form["sp3mobileDropDownList"];

        }
        
        Session["sp3altccc"] = Request.Form["sp3alternateDropDownList"]; //sp2alternateDropDownList.SelectedItem.Text;
        if (Session["sp3altccc"].ToString() == "")
        {
            Session["sp3altccc"] = sp3alternateDropDownList.Items[0].Text;
        }
        else
        {
            Session["sp3altccc"] = Request.Form["sp3alternateDropDownList"];

        }
        //}


        if (sp3mobileTextBox.Text == "" || sp3mobileTextBox.Text == null)
        {
            Session["sp3mobile"] = "";
        }
        else
        {
            Session["sp3mobile"] = sp3mobileTextBox.Text;

        }
        if (sp3alternateTextBox.Text == "" || sp3alternateTextBox.Text == null)
        {
            Session["sp3alternate"] = "";

        }
        else
        {
            Session["sp3alternate"] = sp3alternateTextBox.Text;

        }
        if (sp3pemailTextBox.Text == "" || sp3pemailTextBox.Text == null)
        {
            Session["sp3email"] = "";
        }
        else
        {
            Session["sp3email"] = sp3pemailTextBox.Text.ToUpper();
        }
        if (sp3pemail2TextBox.Text == "" || sp3pemail2TextBox.Text == null)
        {
            Session["sp3email2"] = "";
        }
        else
        {
            Session["sp3email2"] = sp3pemail2TextBox.Text.ToUpper();
        }

        // sub profile 4//
        string sp4title = sp4titleDropDownList.SelectedItem.Text;
        string sp4fname = sp4fnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp4lname = sp4lnameTextBox.Text.ToUpper().Replace("'", "''");
        string sp4dob = sp4dobdatepicker.Text;//Convert.ToDateTime(sp2dobdatepicker.Text).ToString("yyyy-MM-dd");
        string sp4nationality = sp4nationalityDropDownList.SelectedItem.Text;
        string sp4country = sp4countryDropDownList.SelectedItem.Text;
        string nsp4age = subProfile4Age.Text;

        Session["sp4cc"] = Request.Form["sp4mobileDropDownList"];//sp2mobileDropDownList.SelectedItem.Text;
        if (Session["sp4cc"].ToString() == "")
        {
            Session["sp4cc"] = sp4mobileDropDownList.Items[0].Text;
        }
        else
        {

            Session["sp4cc"] = Request.Form["sp4mobileDropDownList"];

        }
        //}

        //if (sp2alternateDropDownList.SelectedIndex == 0)
        //{
        //    sp2altccc = "";
        //}
        //else
        //{

        Session["sp4altccc"] = Request.Form["sp4alternateDropDownList"]; //sp2alternateDropDownList.SelectedItem.Text;
        if (Session["sp4altccc"].ToString() == "")
        {
            Session["sp4altccc"] = sp4alternateDropDownList.Items[0].Text;
        }
        else
        {
            Session["sp4altccc"] = Request.Form["sp4alternateDropDownList"];

        }
        //}


        if (sp4mobileTextBox.Text == "" || sp4mobileTextBox.Text == null)
        {
            Session["sp4mobile"] = "";
        }
        else
        {
            Session["sp4mobile"] = sp4mobileTextBox.Text;

        }
        if (sp4alternateTextBox.Text == "" || sp4alternateTextBox.Text == null)
        {
            Session["sp4alternate"] = "";

        }
        else
        {
            Session["sp4alternate"] = sp4alternateTextBox.Text;

        }
        if (sp4pemailTextBox.Text == "" || sp4pemailTextBox.Text == null)
        {
            Session["sp4email"] = "";
        }
        else
        {
            Session["sp4email"] = sp4pemailTextBox.Text.ToUpper();
        }
        if (sp4pemail2TextBox.Text == "" || sp4pemail2TextBox.Text == null)
        {
            Session["sp4email2"] = "";
        }
        else
        {
            Session["sp4email2"] = sp4pemail2TextBox.Text.ToUpper();
        }

        //address

        string address1 = address1TextBox.Text.ToUpper().Replace("'", "''"); 
        string address2 = address2TextBox.Text.ToUpper().Replace("'", "''"); 
        string state = Request.Form["StateDropDownList"];// StateDropDownList.SelectedItem.Text;
        if (state=="")
        {
            state = StateDropDownList.Items[0].Text;
        }else
        {
            state = Request.Form["StateDropDownList"];


        }
        string city = cityTextBox.Text.ToUpper();
        string pincode = pincodeTextBox.Text;
        string acountry = AddCountryDropDownList.SelectedItem.Text;

        //other details

        string employmentstatus = employmentstatusDropDownList.SelectedItem.Text;
        string maritalstatus = maritalstatusDropDownList.SelectedItem.Text;
        string livingyrs = livingyrsTextBox.Text;

        //stay details
        string resort = resortTextBox.Text.ToUpper();
        string roomno = roomnoTextBox.Text.ToUpper();
        string arrivaldate = arrivaldatedatepicker.Text;
        string departuredate = departuredatedatepicker.Text;

        //guest status

        string gueststatus = guestatusDropDownList.SelectedItem.Text;
        string salesrep = toursalesrepDropDownList.SelectedItem.Text;
        string timeIn = timeinTextBox.Text;
        string timeOut = timeoutTextBox.Text;
        // string tourdate = tourdatedatepicker.Text;
        string tourdate;
        int wkno;
        if (tourdatedatepicker.Text == "" || tourdatedatepicker.Text == null || tourdatedatepicker.Text == "NaN" || tourdatedatepicker.Text == "1-1-1990")
        {
            tourdate = "";
            wkno = 0;
        }
        else
        {
            tourdate = tourdatedatepicker.Text;
            wkno = Queries.GetWkNumber(Convert.ToDateTime(tourdate));
            tourdate = Convert.ToDateTime(tourdatedatepicker.Text).ToString("dd-MM-yyyy");
        }
        string taxin = inpriceTextBox.Text.ToUpper();
        string taxirefin = inrefTextBox.Text.ToUpper();
        string taxiout = outpriceTextBox.Text.ToUpper();
        string taxirefout = outrefTextBox.Text.ToUpper();
        string ProComments = commentsTextBox.Text.ToUpper().Replace("'", "''");
        string Procomment2 = comment2.Text.ToUpper().Replace("'", "''");
        string newcompanyname = companynameTextBox.Text.ToUpper().Replace("'", "''");




        if (CheckBox1.Checked)
        {


            Session["regTerms"] = "Y";
        }
        else
        {
            Session["regTerms"] = "N";

        }

        //update
        if (String.Compare(Session["ocompanyname"].ToString(), newcompanyname) != 0)
        {
            int update = Queries.UpdateProfileCompanyName(Session["ProfileID"].ToString(), newcompanyname);
            string log3 = "Company Name changed from:" + ocompanyname + " " + "to" + companynameTextBox.Text;
            int insertlog3 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Company Name Updated", Session["ocompanyname"].ToString(), newcompanyname);

        }
        else
        {
        }



        string cadd1 = cadd1TextBox.Text.Replace("'", "''"); 
        string cadd2 = cadd2TextBox.Text.Replace("'", "''");

        string ccity = ccityTextBox.Text;
        string cpincode = cpincodeTextBox.Text;

        string ccountry = ccountryDropDownList.SelectedItem.Text;//.SelectedItem.Text;
        string cstate = Request.Form["cstateDropDownList"];
        string cornote1 = "Correspondence Address Details Added";
        if (cstate == "" || cstate == null)
        {
            cstate = cstateDropDownList.Items[0].Text;
        }
        else
        {
            cstate = Request.Form["cstateDropDownList"];


        }

        if (cadd1 == "" && cadd2 == "" && ccity == "" && cpincode == "" && ccountry == "" && (cstate == null || cstate == ""))
        {

        }
        else
        {
             int correxists = Queries.Contract_Correspondence_AddressExists(Session["ProfileID"].ToString());
            if (correxists == 1) {
                if (String.Compare(Session["oProfile_CorAddress_Line1"].ToString(), cadd1) != 0)

                {
                    string act = "Correspondence address1 changed from:" + Session["oProfile_CorAddress_Line1"].ToString() + "To:" + cadd1;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Correspondence Address Line 1 Updated", Session["oProfile_CorAddress_Line1"].ToString(), cadd1);
                }
                else { }
                if (String.Compare(Session["oProfile_CorAddress_Line2"].ToString(), cadd2) != 0)
                {
                    string act = "Correspondence address2 changed from:" + Session["oProfile_CorAddress_Line2"].ToString() + "To:" + cadd2;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Correspondence Address Line 2 Updated", Session["oProfile_CorAddress_Line2"].ToString(), cadd2);
                }
                else { }
                if (String.Compare(Session["oProfile_CorAddress_State"].ToString(), cstate) != 0)
                {
                    string act = "Correspondence state changed from:" + Session["oProfile_CorAddress_State"].ToString() + "To:" + cstate;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Correspondence Address State Updated", Session["oProfile_CorAddress_State"].ToString(), cstate);
                }
                else { }
                if (String.Compare(Session["oProfile_CorAddress_city"].ToString(), ccity) != 0)
                {
                    string act = "Correspondence city changed from:" + Session["oProfile_CorAddress_city"].ToString() + "To:" + ccity;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Correspondence Address City Updated", Session["oProfile_CorAddress_city"].ToString(), ccity);
                }
                else { }
                if (String.Compare(Session["oProfile_CorAddress_Postcode"].ToString(), cpincode) != 0)
                {
                    string act = "Correspondence pincode changed from:" + Session["oProfile_CorAddress_Postcode"].ToString() + "To:" + cpincode;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Correspondence Address Post Code Updated", Session["oProfile_CorAddress_Postcode"].ToString(), cpincode);
                }
                else { }
                if (String.Compare(Session["oProfile_CorAddress_Country"].ToString(), ccountry) != 0)
                {
                    string act = "Correspondence Address Country changed from:" + Session["oProfile_CorAddress_Country"].ToString() + "To:" + ccountry;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Correspondence Address Country Updated", Session["oProfile_CorAddress_Country"].ToString(), ccountry);
                }
                else { }

                int addressCoress = Queries.UpdateProfileAddressCorres(profile, cadd1, cadd2, cstate, ccity, cpincode, ccountry);
            }
            else
            {
            string caddress_ID = Queries.GetContract_Correspondence_Address_ID(office);
            int corraddress = Queries.InsertContract_Correspondence_Address(caddress_ID, cadd1, cadd2, cstate, ccity, cpincode, ccountry, Session["ProfileID"].ToString(), "", DateTime.Now, "");
                string log4c = "Correspondence Address details:" +  "," + "address  id:" + caddress_ID +  "," + "address1:" + cadd1 +  "," + "address2:" + cadd2 +  "," + "state:" + cstate +  "," + "city:" + ccity +  "," + "pincode:" + cpincode + "," +
                        "Country: " + ccountry +  "," + "Created Date:" + DateTime.Now +  "," + "Profile ID:" + Session["ProfileID"].ToString();
                int insertlog4c = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log4c, user, DateTime.Now.ToString(), "Indian_contracts.aspx", cornote1, "", log4c);
                int updatepointgeno = Queries.UpdateContract_Correspondence_Address_ID(office);
}
            
        }

        string panspellcheck = PancardspellTextBox.Text.ToUpper();
        string cogstinspell = CoGSTINTextBox.Text.ToUpper();
        string profileidnote = "Profile ID Details Added";
        if (panspellcheck == "" && cogstinspell == "")
        {
            //nothing
        }
        else
        {
            //check if profile id exists
            int identityexists = Queries.Identity_Proof_DetailsExists(Session["ProfileID"].ToString());
            if (identityexists == 1)
            {
                //yes
                //updated
                if (String.Compare(Session["pancardspell"].ToString(), panspellcheck) != 0)
                {
                    string act = "Identity details:Pan card no changed from:" + Session["pancardspell"].ToString() + "To:" + panspellcheck;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Pan Card No. Updated", Session["pancardspell"].ToString(), panspellcheck);
                }
                else { }
                if (String.Compare(Session["cogstinospell"].ToString(), cogstinspell) != 0)
                {
                    string act = "Identity details: Co. GSTIN # changed from:" + Session["cogstinospell"].ToString() + "To:" + cogstinspell;
                    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Company GSTIN No. Updated", Session["cogstinospell"].ToString(), cogstinspell);
                }
                else { }

                int updaterow = Queries.UpdateIdentity_Proof_Details(Session["ProfileID"].ToString(), panspellcheck, cogstinspell);

            }
            else
            {
                //no
                //insert
                int insertrow = Queries.InsertIdentity_Proof_Details(Session["ProfileID"].ToString(), "", panspellcheck, "", cogstinspell, DateTime.Now.ToString());
                string log4c = "Identity Proof Details:" +  "," + "Profile ID:" + Session["ProfileID"].ToString() +  "," + "Pancard #:" + panspellcheck +  "," + "Co GSTIN NO:" + cogstinspell +  "," + "Inserted date:" + DateTime.Now.ToString();
                int insertlog4c = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log4c, user, DateTime.Now.ToString(), "Indian_contracts.aspx", profileidnote, "", log4c);


            }
        }

            string conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        string valg = Request.Form["giftoptionDropDownList"];
        string giftdelnote = "Gift Details Deleted"; string giftaddnote = "Gift Details Added";
        //if (valg == "" || valg == null)
        //{

        //}
        //else
        //{

        SqlConnection sqlcon4 = new SqlConnection(conn);

            string query4 = "select Gift_ID_Option+'-'+GiftItem from gift where Profile_ID='" + Session["ProfileID"].ToString() + "'";//Session["ProfileID"].ToString()
        sqlcon4.Open();
            SqlCommand cmd4 = new SqlCommand(query4, sqlcon4);
            SqlDataReader reader4 = cmd4.ExecuteReader();
            while (reader4.Read())
            {
                string name = reader4.GetString(0);
                string act1 = "Deleted:" + name;
            int insertlog2 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act1, user, DateTime.Now.ToString(), "Indian_contracts.aspx", giftdelnote, name, "");
        }

            reader4.Close();
            sqlcon4.Close();

            SqlConnection sqlcon2 = new SqlConnection(conn);
            string query2 = "delete from gift where Profile_ID='" + Session["ProfileID"].ToString() + "'";//Session["ProfileID"].ToString()
        sqlcon2.Open();
            SqlCommand cmd2 = new SqlCommand(query2, sqlcon2);
            cmd2.ExecuteNonQuery();
            sqlcon2.Close();

       // }



        string val = Request.Form["giftoptionDropDownList"];
        if (val=="" || val==null)
        {

        }else
        {


            string[] value = val.Split(new Char[] { ',', '-' },
                                       StringSplitOptions.RemoveEmptyEntries);




            for (int i = 0; i < value.Length; i = i + 2)
            {
                conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
                SqlConnection sqlcon = new SqlConnection(conn);
                string query = "select Gift_Option_Name,Item from Gift_Option where Gift_Option_Name='" + value[i] + "' and Item='" + value[i + 1] + "'";
                sqlcon.Open();
                SqlCommand cmd = new SqlCommand(query, sqlcon);
                SqlDataReader reader = cmd.ExecuteReader();
                while (reader.Read())
                {
                    string giftname = reader.GetString(0);
                    string item = reader.GetString(1);


                    SqlConnection sqlcon1 = new SqlConnection(conn);
                    string query1 = "select distinct Profile_ID from Gift where Profile_ID='" + Session["ProfileID"].ToString() + "'";
                    sqlcon1.Open();
                    SqlCommand cmd1 = new SqlCommand(query1, sqlcon1);
                    SqlDataReader reader1 = cmd1.ExecuteReader();
                    if (reader1.HasRows)
                    {
                        while (reader1.Read())
                        {



                            int year = DateTime.Now.Year;
                            string giftid = Queries.GetProfileGift(office);
                            int insert = Queries.InsertGiftOption(giftid, giftname.Trim(), TextBox13.Text, TextBox22.Text, Session["ProfileID"].ToString(), item.Trim(), "");
                            int updategift = Queries.UpdateGiftValue(office, year);
                            string log11 = "gift Details:" +  "," + "gift ID:" + giftid +  "," + "Gift Option:" + giftname +  "," + "Voucherno:" + TextBox13.Text +  "," + "Comments:" + TextBox22.Text +  "," + "Profile id:" + Session["ProfileID"].ToString() +  "," + "Item:" + item;
                            int insertlog11 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log11, user, DateTime.Now.ToString(), "Indian_contracts.aspx", giftaddnote, "", log11);



                        }
                    }
                    else
                    {


                        int year = DateTime.Now.Year;
                        string giftid = Queries.GetProfileGift(office);
                        int insert = Queries.InsertGiftOption(giftid, giftname.Trim(), TextBox13.Text, TextBox22.Text, Session["ProfileID"].ToString(), item.Trim(), "");
                        int updategift = Queries.UpdateGiftValue(office, year);
                        string log11 = "gift Details:" +  "," + "gift ID:" + giftid +  "," + "Gift Option:" + giftname +  "," + "Voucherno:" + TextBox13.Text +  "," + "Comments:" + TextBox22.Text +  "," + "Profile id:" + Session["ProfileID"].ToString() +  "," + "Item:" + item;
                        int insertlog11 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log11, user, DateTime.Now.ToString(), "Indian_contracts.aspx", giftaddnote, "", log11);


                    }

                    reader1.Close();
                    sqlcon1.Close();


                }
                reader.Close();
                sqlcon.Close();

            }
        }

        if (String.Compare(Session["oProfile_Venue_Country"].ToString(), venuecountry) != 0)
        {
            string act = "venue country changed from:" + Session["oProfile_Venue_Country"].ToString() + "To:" + venuecountry;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Country Updated", Session["oProfile_Venue_Country"].ToString(), venuecountry);
        }
        else { }
        if (String.Compare(Session["oProfile_Venue"].ToString(), venue) != 0)
        {
            string act = "venue changed from:" + Session["oProfile_Venue"].ToString() + "To:" + venue;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Venue Updated", Session["oProfile_Venue"].ToString(), venue);
        }
        else { }
        if (String.Compare(Session["oProfile_Group_Venue"].ToString(), venuegroup) != 0)
        {
            string act = "venue group changed from:" + Session["oProfile_Group_Venue"].ToString() + "To:" + venuegroup;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Venue Group Updated", Session["oProfile_Group_Venue"].ToString(), venuegroup);
        }
        else { }
        if (String.Compare(Session["oProfile_Marketing_Program"].ToString(), mktg) != 0)
        {
            string act = "marketing prgm changed from:" + Session["oProfile_Marketing_Program"].ToString() + "To:" + mktg;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Marketing Program Updated", Session["oProfile_Marketing_Program"].ToString(), mktg);
        }
        else { }
        if (String.Compare(Session["oProfile_Agent"].ToString(), agents) != 0)
        {
            string act = "agent name changed from:" + Session["oProfile_Agent"].ToString() + "To:" + agents;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Telemarketing Agent Updated", Session["oProfile_Agent"].ToString(), agents);
        }
        else { }
        if (String.Compare(Session["oProfile_Agent_Code"].ToString(), agentcode) != 0)
        {
            string act = "To Name changed from:" + Session["oProfile_Agent_Code"].ToString() + "To:" + agentcode;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "TO Name Updated", Session["oProfile_Agent_Code"].ToString(), agentcode);
        }
        else { }
        if (String.Compare(Session["oManager"].ToString(), mgr) != 0)
        {
            string act = "manager changed from:" + Session["oManager"].ToString() + "To:" + mgr;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Manager Updated", Session["oManager"].ToString(), mgr);
        }
        else { }
        if (String.Compare(Session["oProfile_Member_Type1"].ToString(), membertype1) != 0)
        {
            string act = "membertype1 changed from:" + Session["oProfile_Member_Type1"].ToString() + "To:" + membertype1;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Member Type1 Updated", Session["oProfile_Member_Type1"].ToString(), membertype1);
        }
        else { }
        if (String.Compare(Session["ophid"].ToString(), photoidentity) != 0)
        {
            string act = "Photo Identity changed from:" + Session["ophid"].ToString() + "To:" + photoidentity;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Photo Identity Updated", Session["ophid"].ToString(), photoidentity);
        }
        else { }
        if (String.Compare(Session["ocard"].ToString(), card) != 0)
        {
            string act = "Card Holder value changed from:" + Session["ocard"].ToString() + "To:" + card;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Card Holder Updated", Session["ocard"].ToString(), card);
        }
        else { }
        if (String.Compare(Session["oProfile_Member_Number1"].ToString(), memno1) != 0)
        {
            string act = "memno1 changed from:" + Session["oProfile_Member_Number1"].ToString() + "To:" + memno1;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Member No 1 Updated", Session["oProfile_Member_Number1"].ToString(), memno1);
        }
        else { }
        if (String.Compare(Session["oProfile_Member_Type2"].ToString(), membertype2) != 0)
        {
            string act = "membertype2 changed from:" + Session["oProfile_Member_Type2"].ToString() + "To:" + membertype2;
       //     int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Member Type2 Updated", Session["oProfile_Member_Type2"].ToString(), membertype2);
        }
        else { }
        if (String.Compare(Session["oProfile_Member_Number2"].ToString(), memno2) != 0)
        {
            string act = "memno2 changed from:" + Session["oProfile_Member_Number2"].ToString() + "To:" + memno2;
        //    int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Profile Member No 2 Updated", Session["oProfile_Member_Number2"].ToString(), memno2);
        }
        else { }
        if (String.Compare(Session["oProfile_Primary_Title"].ToString(), primarytitle) != 0)
        {
            string act = "primary title changed from:" + Session["oProfile_Primary_Title"].ToString() + "To:" + primarytitle;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Title Updated", Session["oProfile_Primary_Title"].ToString(), primarytitle);
        }
        else { }
        if (String.Compare(Session["oProfile_Primary_Fname"].ToString(), primaryfname) != 0)
        {
            string act = "primary fname changed from:" + Session["oProfile_Primary_Fname"].ToString() + "To:" + primaryfname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary First Name Updated", Session["oProfile_Primary_Fname"].ToString(), primaryfname);
        }
        else { }
        if (String.Compare(Session["oProfile_Primary_Lname"].ToString(), primaylname) != 0)
        {
            string act = "primay lname changed from:" + Session["oProfile_Primary_Lname"].ToString() + "To:" + primaylname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Last Name Updated", Session["oProfile_Primary_Lname"].ToString(), primaylname);
        }
        else { }
        if (String.Compare(Session["oProfile_Primary_DOB"].ToString(), primarydob) != 0)
        {
            string act = "primary dob changed from:" + Session["oProfile_Primary_DOB"].ToString() + "To:" + primarydob;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary DOB Updated", Session["oProfile_Primary_DOB"].ToString(), primarydob);
        }
        else { }
        if (String.Compare(Session["oProfile_Primary_Nationality"].ToString(), primarynationality) != 0)
        {
            string act = "primary nationality changed from:" + Session["oProfile_Primary_Nationality"].ToString() + "To:" + primarynationality;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Nationlaity Updated", Session["oProfile_Primary_Nationality"].ToString(), primarynationality);
        }
        else { }
        if (String.Compare(Session["oProfile_Primary_Country"].ToString(), primarycountry) != 0)
        {
            string act = "primary country changed from:" + Session["oProfile_Primary_Country"].ToString() + "To:" + primarycountry;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Country Updated", Session["oProfile_Primary_Country"].ToString(), primarycountry);
        }
        else { }
        if (String.Compare(Session["opage"].ToString(), npage) != 0)
        {
            string act = "primary age changed from:" + Session["opage"].ToString() + "To:" + npage;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Age Updated", Session["opage"].ToString(), npage);
        }
        else { }
        if (String.Compare(Session["opdesignation"].ToString(), npdesg) != 0)
        {
            string act = "primary designation changed from:" + Session["opdesignation"].ToString() + "To:" + npdesg;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Designation Updated", Session["opdesignation"].ToString(), npdesg);
        }
        else { }
        if (String.Compare(Session["oplang"].ToString(), primarylanguage) != 0)
        {
            string act = "primary Language changed from:" + Session["oplang"].ToString() + "To:" + primarylanguage;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Language Updated", Session["oplang"].ToString(), primarylanguage);
        }
        else { }
        if (String.Compare(Session["oPrimary_CC"].ToString(), Session["pcc"].ToString()) != 0)
        {
            string act = "primary mobile code changed from:" + Session["oPrimary_CC"].ToString() + "To:" + Session["pcc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Mobile Code Updated", Session["oPrimary_CC"].ToString(), Session["pcc"].ToString());
        }
        else { }
        if (String.Compare(Session["oPrimary_Mobile"].ToString(), Session["pmobile"].ToString()) != 0)
        {
            string act = "primary mobile no changed from:" + Session["oPrimary_Mobile"].ToString() + "To:" + Session["pmobile"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Mobile No Updated", Session["oPrimary_Mobile"].ToString(), Session["pmobile"].ToString());
        }
        else { }
        if (String.Compare(Session["oPrimary_Alt_CC"].ToString(), Session["paltrcc"].ToString()) != 0)
        {
            string act = "primary mobile changed from:" + Session["oPrimary_Alt_CC"].ToString() + "To:" + Session["paltrcc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Alternate Code Updated", Session["oPrimary_Alt_CC"].ToString(), Session["paltrcc"].ToString());
        }
        else { }
        if (String.Compare(Session["oPrimary_Alternate"].ToString(), Session["palternate"].ToString()) != 0)
        {
            string act = "primary alternate no changed from:" + Session["oPrimary_Alternate"].ToString() + "To:" + Session["palternate"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Alternate No. Updated", Session["oPrimary_Alternate"].ToString(), Session["palternate"].ToString());
        }
        else { }

        if (String.Compare(Session["opriOfficecc"].ToString(), Session["priOfficecc"].ToString()) != 0)
        {
            string act = "primary office cc changed from:" + Session["opriOfficecc"].ToString() + "To:" + Session["priOfficecc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Office Code Updated", Session["opriOfficecc"].ToString(), Session["priOfficecc"].ToString());
        }
        else { }


        if (String.Compare(Session["oprihomecc"].ToString(), Session["priHomecc"].ToString()) != 0)
        {
            string act = "primary Home cc changed from:" + Session["oprihomecc"].ToString() + "To:" + Session["priHomecc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Home Code Updated", Session["oprihomecc"].ToString(), Session["priHomecc"].ToString());
        }
        else { }



        if (String.Compare(Session["opriOfficeno"].ToString(), Session["priOfficeno"].ToString()) != 0)
        {
            string act = "primary office no changed from:" + Session["opriOfficeno"].ToString() + "To:" + Session["priOfficeno"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Office No. Updated", Session["opriOfficeno"].ToString(), Session["priOfficeno"].ToString());
        }
        else { }


        if (String.Compare(Session["oprihomeno"].ToString(), Session["prihomeno"].ToString()) != 0)
        {
            string act = "primary home no changed from:" + Session["oprihomeno"].ToString() + "To:" + Session["prihomeno"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Home No. Updated", Session["oprihomeno"].ToString(), Session["prihomeno"].ToString());
        }
        else { }


        if (String.Compare(Session["oPrimary_Email"].ToString(), Session["pemail"].ToString()) != 0)
        {
            string act = "primary email changed from:" + Session["oPrimary_Email"].ToString() + "To:" + Session["pemail"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Email1 Updated", Session["oPrimary_Email"].ToString(), Session["pemail"].ToString());
        }
        else { }
        if (String.Compare(Session["oPrimary_Email2"].ToString(), Session["pemail2"].ToString()) != 0)
        {
            string act = "primary email2 changed from:" + Session["oPrimary_Email2"].ToString() + "To:" + Session["pemail2"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Email2 Updated", Session["oPrimary_Email2"].ToString(), Session["pemail2"].ToString());
        }
        else { }
        if (String.Compare(Session["oProfile_Secondary_Title"].ToString(), secondarytitle) != 0)
        {
            string act = "secondary title changed from:" + Session["oProfile_Secondary_Title"].ToString() + "To:" + secondarytitle;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Title Updated", Session["oProfile_Secondary_Title"].ToString(), secondarytitle);
        }
        else { }
        if (String.Compare(Session["oProfile_Secondary_Fname"].ToString(), secondaryfname) != 0)
        {
            string act = "secondary fname changed from:" + Session["oProfile_Secondary_Fname"].ToString() + "To:" + secondaryfname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary First Name Updated", Session["oProfile_Secondary_Fname"].ToString(), secondaryfname);
        }
        else { }
        if (String.Compare(Session["oProfile_Secondary_Lname"].ToString(), secondarylname) != 0)
        {
            string act = "secondary lname changed from:" + Session["oProfile_Secondary_Lname"].ToString() + "To:" + secondarylname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Last Name Updated", Session["oProfile_Secondary_Lname"].ToString(), secondarylname);
        }
        else { }
        if (String.Compare(Session["oProfile_Secondary_DOB"].ToString(), secondarydob) != 0)
        {
            string act = "secondary dob changed from:" + Session["oProfile_Secondary_DOB"].ToString() + "To:" + secondarydob;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary DOB Updated", Session["oProfile_Secondary_DOB"].ToString(), secondarydob);
        }
        else { }

        if (String.Compare(Session["oProfile_Secondary_Nationality"].ToString(), secondarynationality) != 0)
        {
            string act = "secondary nationality changed from:" + Session["oProfile_Secondary_Nationality"].ToString() + "To:" + secondarynationality;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Nationality Updated", Session["oProfile_Secondary_Nationality"].ToString(), secondarynationality);
        }
        else { }
        if (String.Compare(Session["osage"].ToString(), nsage) != 0)
        {
            string act = "secondary age changed from:" + Session["osage"].ToString() + "To:" + nsage;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Age Updated", Session["osage"].ToString(), nsage);
        }
        else { }
        if (String.Compare(Session["osdesignation"].ToString(), nsdesg) != 0)
        {
            string act = "secondary designation changed from:" + Session["osdesignation"].ToString() + "To:" + nsdesg;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Designation Updated", Session["osdesignation"].ToString(), nsdesg);
        }
        else { }
        if (String.Compare(Session["oslang"].ToString(), secondarylanguage) != 0)
        {
            string act = "secondary Language changed from:" + Session["oslang"].ToString() + "To:" + secondarylanguage;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Language Updated", Session["oslang"].ToString(), secondarylanguage);
        }
        else { }
        if (String.Compare(Session["oProfile_Secondary_Country"].ToString(), secondarycountry) != 0)
        {
            string act = "secondary country changed from:" + Session["oProfile_Secondary_Country"].ToString() + "To:" + secondarycountry;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Country Updated", Session["oProfile_Secondary_Country"].ToString(), secondarycountry);
        }
        else { }
        if (String.Compare(Session["oSecondary_CC"].ToString(), Session["scc"].ToString()) != 0)
        {
            string act = "secondary mobile code changed from:" + Session["oSecondary_CC"].ToString() + "To:" + Session["scc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Mobile Code Updated", Session["oSecondary_CC"].ToString(), Session["scc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSecondary_Mobile"].ToString(), Session["smobile"].ToString()) != 0)
        {
            string act = "secondary mobile no changed from:" + Session["oSecondary_Mobile"].ToString() + "To:" + Session["smobile"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Mobile No. Updated", Session["oSecondary_Mobile"].ToString(), Session["smobile"].ToString());

        }
        else { }
        if (String.Compare(Session["oSecondary_Alt_CC"].ToString(), Session["saltcc"].ToString()) != 0)
        {
            string act = "secondary alternaet num code changed from:" + Session["oSecondary_Alt_CC"].ToString() + "To:" + Session["saltcc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Alternate Code Updated", Session["oSecondary_Alt_CC"].ToString(), Session["saltcc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSecondary_Alternate"].ToString(), Session["salternate"].ToString()) != 0)
        {
            string act = "secondary alternate no changed from:" + Session["oSecondary_Alternate"].ToString() + "To:" + Session["salternate"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Alternate No Updated", Session["oSecondary_Alternate"].ToString(), Session["salternate"].ToString());
        }
        else { }

        if (String.Compare(Session["osecOfficecc"].ToString(), Session["secOfficecc"].ToString()) != 0)
        {
            string act = "secondary office cc changed from:" + Session["osecOfficecc"].ToString() + "To:" + Session["secOfficecc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Office Code Updated", Session["osecOfficecc"].ToString(), Session["secOfficecc"].ToString());
        }
        else { }

        if (String.Compare(Session["osechomecc"].ToString(), Session["sechomecc"].ToString()) != 0)
        {
            string act = "secondary home cc changed from:" + Session["osechomecc"].ToString() + "To:" + Session["sechomecc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Home Code Updated", Session["osechomecc"].ToString(), Session["sechomecc"].ToString());
        }
        else { }


        if (String.Compare(Session["osecofficeno"].ToString(), Session["secOfficeno"].ToString()) != 0)
        {
            string act = "secondary office no changed from:" + Session["osecofficeno"].ToString() + "To:" + Session["secOfficeno"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Office No. Updated", Session["osecofficeno"].ToString(), Session["secOfficeno"].ToString());
        }
        else { }

        if (String.Compare(Session["osechomeno"].ToString(), Session["sechomeno"].ToString()) != 0)
        {
            string act = "secondary home no changed from:" + Session["osechomeno"].ToString() + "To:" + Session["sechomeno"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Home No. Updated", Session["osechomeno"].ToString(), Session["sechomeno"].ToString());
        }
        else { }

        if (String.Compare(Session["oSecondary_Email"].ToString(), Session["semail"].ToString()) != 0)
        {
            string act = "secondary email changed from:" + Session["oSecondary_Email"].ToString() + "To:" + Session["semail"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Email1 Updated", Session["oSecondary_Email"].ToString(), Session["semail"].ToString());
        }
        else { }
        if (String.Compare(Session["oSecondary_Email2"].ToString(), Session["semail2"].ToString()) != 0)
        {
            string act = "secondary email2 changed from:" + Session["oSecondary_Email"].ToString() + "To:" + Session["semail2"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Secondary Email2 Updated", Session["oSecondary_Email2"].ToString(), Session["semail2"].ToString());
        }
        else { }
        if (String.Compare(Session["oSub_Profile1_Title"].ToString(), sp1title) != 0)
        {
            string act = "subprofile1 title changed from:" + Session["oSub_Profile1_Title"].ToString() + "To:" + sp1title;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Title Updated", Session["oSub_Profile1_Title"].ToString(), sp1title);
        }
        else { }
        if (String.Compare(Session["oSub_Profile1_Fname"].ToString(), sp1fname) != 0)
        {
            string act = "subprofile1 fname changed from:" + Session["oSub_Profile1_Fname"].ToString() + "To:" + sp1fname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 First Name Updated", Session["oSub_Profile1_Fname"].ToString(), sp1fname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile1_Lname"].ToString(), sp1lname) != 0)
        {
            string act = "subprofile1 lname changed from:" + Session["oSub_Profile1_Lname"].ToString() + "To:" + sp1lname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Last Name Updated", Session["oSub_Profile1_Lname"].ToString(), sp1lname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile1_DOB"].ToString(), sp1dob) != 0)
        {
            string act = "subprofile1 dob changed from:" + Session["oSub_Profile1_DOB"].ToString() + "To:" + sp1dob;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 DOB Updated", Session["oSub_Profile1_DOB"].ToString(), sp1dob);
        }
        else { }
        if (String.Compare(Session["oSub_Profile1_Nationality"].ToString(), sp1nationality) != 0)
        {
            string act = "subprofile1 nationality changed from:" + Session["oSub_Profile1_Nationality"].ToString() + "To:" + sp1nationality;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Nationlaity Updated", Session["oSub_Profile1_Nationality"].ToString(), sp1nationality);
        }
        else { }
        if (String.Compare(Session["osp1age"].ToString(), nsp1age) != 0)
        {
            string act = "subprofile1 age changed from:" + Session["osp1age"].ToString() + "To:" + nsp1age;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Age Updated", Session["osp1age"].ToString(), nsp1age);
        }
        else { }
        if (String.Compare(Session["oSub_Profile1_Country"].ToString(), sp1country) != 0)
        {
            string act = "subprofile1 country changed from:" + Session["oSub_Profile1_Country"].ToString() + "To:" + sp1country;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Country Updated", Session["oSub_Profile1_Country"].ToString(), sp1country);
        }
        else { }
        if (String.Compare(Session["oSubprofile1_CC"].ToString(), Session["sp1cc"].ToString()) != 0)
        {
            string act = "subprofile1 mobile code changed from:" + Session["oSubprofile1_CC"].ToString() + "To:" + Session["sp1cc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Mobile Code Updated", Session["oSubprofile1_CC"].ToString(), Session["sp1cc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile1_Mobile"].ToString(), Session["sp1mobile"].ToString()) != 0)
        {
            string act = "subprofile1 mobile no changed from:" + Session["oSubprofile1_Mobile"].ToString() + "To:" + Session["sp1mobile"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Mobile No Updated", Session["oSubprofile1_Mobile"].ToString(), Session["sp1mobile"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile1_Alt_CC"].ToString(), Session["sp1altcc"].ToString()) != 0)
        {
            string act = "subprofile1 alternate no code changed from:" + Session["oSubprofile1_Alt_CC"].ToString() + "To:" + Session["sp1altcc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Alternate Code Updated", Session["oSubprofile1_Alt_CC"].ToString(), Session["sp1altcc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile1_Alternate"].ToString(), Session["sp1alternate"].ToString()) != 0)
        {
            string act = "subprofile1 alternate changed from:" + Session["oSubprofile1_Alternate"].ToString() + "To:" + Session["sp1alternate"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Alternate No Updated", Session["oSubprofile1_Alternate"].ToString(), Session["sp1alternate"].ToString());
        }
        else { }


        if (String.Compare(Session["oSubprofile1_Email"].ToString(), Session["sp1email"].ToString()) != 0)
        {
            string act = "subprofile1 email changed from:" + Session["oSubprofile1_Email"].ToString() + "To:" + Session["sp1email"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Email1 Updated", Session["oSubprofile1_Email"].ToString(), Session["sp1email"].ToString());
        }
        else { }

        if (String.Compare(Session["oSubprofile1_Email2"].ToString(), Session["sp1email2"].ToString()) != 0)
        {
            string act = "subprofile1 email2 changed from:" + Session["oSubprofile1_Email2"].ToString() + "To:" + Session["sp1email2"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile1 Email2 Updated", Session["oSubprofile1_Email2"].ToString(), Session["sp1email2"].ToString());
        }
        else { }
        if (String.Compare(Session["oSub_Profile2_Title"].ToString(), sp2title) != 0)
        {
            string act = "subprofile2 title changed from:" + Session["oSub_Profile2_Title"].ToString() + "To:" + sp2title;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Title Updated", Session["oSub_Profile2_Title"].ToString(), sp2title);
        }
        else { }
        if (String.Compare(Session["oSub_Profile2_Fname"].ToString(), sp2fname) != 0)
        {
            string act = "subprofile2 fname changed from:" + Session["oSub_Profile2_Fname"].ToString() + "To:" + sp2fname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 First Name Updated", Session["oSub_Profile2_Fname"].ToString(), sp2fname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile2_Lname"].ToString(), sp2lname) != 0)
        {
            string act = "subprofile2 lname changed from:" + Session["oSub_Profile2_Lname"].ToString() + "To:" + sp2lname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Last Name Updated", Session["oSub_Profile2_Lname"].ToString(), sp2lname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile2_DOB"].ToString(), sp2dob) != 0)
        {
            string act = "subprofile2 dob changed from:" + Session["oSub_Profile2_DOB"].ToString() + "To:" + sp2dob;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 DOB Updated", Session["oSub_Profile2_DOB"].ToString(), sp2dob);
        }
        else { }
        if (String.Compare(Session["oSub_Profile2_Nationality"].ToString(), sp2nationality) != 0)
        {
            string act = "subprofile2 nationality changed from:" + Session["oSub_Profile2_Nationality"].ToString() + "To:" + sp2nationality;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Nationlaity Updated", Session["oSub_Profile2_Nationality"].ToString(), sp2nationality);
        }
        else { }
        if (String.Compare(Session["osp2age"].ToString(), nsp2age) != 0)
        {
            string act = "subprofile2 age changed from:" + Session["osp2age"].ToString() + "To:" + nsp2age;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Age Updated", Session["osp2age"].ToString(), nsp2age);
        }
        else { }
        if (String.Compare(Session["oSub_Profile2_Country"].ToString(), sp2country) != 0)

        {
            string act = "subprofile2 country changed from:" + Session["oSub_Profile2_Country"].ToString() + "To:" + sp2country;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Country Updated", Session["oSub_Profile2_Country"].ToString(), sp2country);
        }
        else { }
        if (String.Compare(Session["oSubprofile2_CC"].ToString(), Session["sp2cc"].ToString()) != 0)
        {
            string act = "subprofile2 mobile code changed from:" + Session["oSubprofile2_CC"].ToString() + "To:" + Session["sp2cc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Mobile Code Updated", Session["oSubprofile2_CC"].ToString(), Session["sp2cc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile2_Mobile"].ToString(), Session["sp2mobile"].ToString()) != 0)
        {
            string act = "subprofile2 mobile no changed from:" + Session["oSubprofile2_Mobile"].ToString() + "To:" + Session["sp2mobile"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Mobile No. Updated", Session["oSubprofile2_Mobile"].ToString(), Session["sp2mobile"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile2_Alt_CC"].ToString(), Session["sp2altccc"].ToString()) != 0)
        {
            string act = "subprofile2 alternate no code changed from:" + Session["oSubprofile2_Alt_CC"].ToString() + "To:" + Session["sp2altccc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Alternate Code Updated", Session["oSubprofile2_Alt_CC"].ToString(), Session["sp2altccc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile2_Alternate"].ToString(), Session["sp2alternate"].ToString()) != 0)
        {
            string act = "subprofile2 alternate no changed from:" + Session["oSubprofile2_Alternate"].ToString() + "To:" + Session["sp2alternate"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Alternate No. Updated", Session["oSubprofile2_Alternate"].ToString(), Session["sp2alternate"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile2_Email"].ToString(), Session["sp2email"].ToString()) != 0)
        {
            string act = "subprofile2 email changed from:" + Session["oSubprofile2_Email"].ToString() + "To:" + Session["sp2email"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Email1 Updated", Session["oSubprofile2_Email"].ToString(), Session["sp2email"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile2_Email2"].ToString(), Session["sp2email2"].ToString()) != 0)
        {
            string act = "subprofile2 email2 changed from:" + Session["oSubprofile2_Email2"].ToString() + "To:" + Session["sp2email2"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile2 Email2 Updated", Session["oSubprofile2_Email2"].ToString(), Session["sp2email2"].ToString());
        }
        else { }

        // sub profile 3//
        if (String.Compare(Session["oSub_Profile3_Title"].ToString(), sp3title) != 0)
        {
            string act = "subprofile3 title changed from:" + Session["oSub_Profile3_Title"].ToString() + "To:" + sp3title;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Title Updated", Session["oSub_Profile3_Title"].ToString(), sp3title);
        }
        else { }
        if (String.Compare(Session["oSub_Profile3_Fname"].ToString(), sp3fname) != 0)
        {
            string act = "subprofile3 fname changed from:" + Session["oSub_Profile3_Fname"].ToString() + "To:" + sp3fname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 First Name Updated", Session["oSub_Profile3_Fname"].ToString(), sp3fname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile3_Lname"].ToString(), sp3lname) != 0)
        {
            string act = "subprofile3 lname changed from:" + Session["oSub_Profile3_Lname"].ToString() + "To:" + sp3lname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Last Name Updated", Session["oSub_Profile3_Lname"].ToString(), sp3lname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile3_DOB"].ToString(), sp3dob) != 0)
        {
            string act = "subprofile3 dob changed from:" + Session["oSub_Profile3_DOB"].ToString() + "To:" + sp3dob;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 DOB Updated", Session["oSub_Profile3_DOB"].ToString(), sp3dob);
        }
        else { }
        if (String.Compare(Session["oSub_Profile3_Nationality"].ToString(), sp3nationality) != 0)
        {
            string act = "subprofile3 nationality changed from:" + Session["oSub_Profile3_Nationality"].ToString() + "To:" + sp3nationality;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Nationlaity Updated", Session["oSub_Profile3_Nationality"].ToString(), sp3nationality);
        }
        else { }
        if (String.Compare(Session["osp3age"].ToString(), nsp3age) != 0)
        {
            string act = "subprofile3 age changed from:" + Session["osp3age"].ToString() + "To:" + nsp3age;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Age Updated", Session["osp3age"].ToString(), nsp3age);
        }
        else { }
        if (String.Compare(Session["oSub_Profile3_Country"].ToString(), sp3country) != 0)

        {
            string act = "subprofile3 country changed from:" + Session["oSub_Profile3_Country"].ToString() + "To:" + sp3country;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Country Updated", Session["oSub_Profile3_Country"].ToString(), sp3country);
        }
        else { }
        if (String.Compare(Session["oSubprofile3_CC"].ToString(), Session["sp3cc"].ToString()) != 0)
        {
            string act = "subprofile3 mobile code changed from:" + Session["oSubprofile3_CC"].ToString() + "To:" + Session["sp3cc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Mobile Code Updated", Session["oSubprofile3_CC"].ToString(), Session["sp3cc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile3_Mobile"].ToString(), Session["sp3mobile"].ToString()) != 0)
        {
            string act = "subprofile3 mobile no changed from:" + Session["oSubprofile3_Mobile"].ToString() + "To:" + Session["sp3mobile"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Mobile No. Updated", Session["oSubprofile3_Mobile"].ToString(), Session["sp3mobile"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile3_Alt_CC"].ToString(), Session["sp3altccc"].ToString()) != 0)
        {
            string act = "subprofile3 alternate no code changed from:" + Session["oSubprofile3_Alt_CC"].ToString() + "To:" + Session["sp3altccc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Alternate Code Updated", Session["oSubprofile3_Alt_CC"].ToString(), Session["sp3altccc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile3_Alternate"].ToString(), Session["sp3alternate"].ToString()) != 0)
        {
            string act = "subprofile3 alternate no changed from:" + Session["oSubprofile3_Alternate"].ToString() + "To:" + Session["sp3alternate"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Alternate No. Updated", Session["oSubprofile3_Alternate"].ToString(), Session["sp3alternate"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile3_Email"].ToString(), Session["sp3email"].ToString()) != 0)
        {
            string act = "subprofile3 email changed from:" + Session["oSubprofile3_Email"].ToString() + "To:" + Session["sp3email"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Email1 Updated", Session["oSubprofile3_Email"].ToString(), Session["sp3email"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile3_Email2"].ToString(), Session["sp3email2"].ToString()) != 0)
        {
            string act = "subprofile3 email2 changed from:" + Session["oSubprofile3_Email2"].ToString() + "To:" + Session["sp3email2"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile3 Email2 Updated", Session["oSubprofile3_Email2"].ToString(), Session["sp3email2"].ToString());
        }
        else { }
        // end//



        // sub profile 4//
        if (String.Compare(Session["oSub_Profile4_Title"].ToString(), sp4title) != 0)
        {
            string act = "subprofile4 title changed from:" + Session["oSub_Profile4_Title"].ToString() + "To:" + sp4title;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Title Updated", Session["oSub_Profile4_Title"].ToString(), sp4title);
        }
        else { }
        if (String.Compare(Session["oSub_Profile4_Fname"].ToString(), sp4fname) != 0)
        {
            string act = "subprofile4 fname changed from:" + Session["oSub_Profile4_Fname"].ToString() + "To:" + sp4fname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 First Name Updated", Session["oSub_Profile4_Fname"].ToString(), sp4fname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile4_Lname"].ToString(), sp4lname) != 0)
        {
            string act = "subprofile4 lname changed from:" + Session["oSub_Profile4_Lname"].ToString() + "To:" + sp4lname;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Last Name Updated", Session["oSub_Profile4_Lname"].ToString(), sp4lname);
        }
        else { }
        if (String.Compare(Session["oSub_Profile4_DOB"].ToString(), sp4dob) != 0)
        {
            string act = "subprofile4 dob changed from:" + Session["oSub_Profile4_DOB"].ToString() + "To:" + sp4dob;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 DOB Updated", Session["oSub_Profile4_DOB"].ToString(), sp4dob);
        }
        else { }
        if (String.Compare(Session["oSub_Profile4_Nationality"].ToString(), sp4nationality) != 0)
        {
            string act = "subprofile4 nationality changed from:" + Session["oSub_Profile4_Nationality"].ToString() + "To:" + sp4nationality;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Nationality Updated", Session["oSub_Profile4_Nationality"].ToString(), sp4nationality);
        }
        else { }
        if (String.Compare(Session["osp4age"].ToString(), nsp4age) != 0)
        {
            string act = "subprofile4 age changed from:" + Session["osp4age"].ToString() + "To:" + nsp4age;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Age Updated", Session["osp4age"].ToString(), nsp4age);
        }
        else { }
        if (String.Compare(Session["oSub_Profile4_Country"].ToString(), sp4country) != 0)

        {
            string act = "subprofile4 country changed from:" + Session["oSub_Profile4_Country"].ToString() + "To:" + sp4country;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Country Updated", Session["oSub_Profile4_Country"].ToString(), sp4country);
        }
        else { }
        if (String.Compare(Session["oSubprofile4_CC"].ToString(), Session["sp4cc"].ToString()) != 0)
        {
            string act = "subprofile4 mobile code changed from:" + Session["oSubprofile4_CC"].ToString() + "To:" + Session["sp4cc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Mobile Code Updated", Session["oSubprofile4_CC"].ToString(), Session["sp4cc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile4_Mobile"].ToString(), Session["sp4mobile"].ToString()) != 0)
        {
            string act = "subprofile4 mobile no changed from:" + Session["oSubprofile4_Mobile"].ToString() + "To:" + Session["sp4mobile"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Mobile No. Updated", Session["oSubprofile4_Mobile"].ToString(), Session["sp4mobile"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile4_Alt_CC"].ToString(), Session["sp4altccc"].ToString()) != 0)
        {
            string act = "subprofile4 alternate no code changed from:" + Session["oSubprofile4_Alt_CC"].ToString() + "To:" + Session["sp4altccc"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Alternate Code Updated", Session["oSubprofile4_Alt_CC"].ToString(), Session["sp4altccc"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile4_Alternate"].ToString(), Session["sp4alternate"].ToString()) != 0)
        {
            string act = "subprofile4 alternate no changed from:" + Session["oSubprofile4_Alternate"].ToString() + "To:" + Session["sp4alternate"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Alternate No. Updated", Session["oSubprofile4_Alternate"].ToString(), Session["sp4alternate"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile4_Email"].ToString(), Session["sp4email"].ToString()) != 0)
        {
            string act = "subprofile4 email changed from:" + Session["oSubprofile4_Email"].ToString() + "To:" + Session["sp4email"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Email1 Updated", Session["oSubprofile4_Email"].ToString(), Session["sp4email"].ToString());
        }
        else { }
        if (String.Compare(Session["oSubprofile4_Email2"].ToString(), Session["sp4email2"].ToString()) != 0)
        {
            string act = "subprofile4 email2 changed from:" + Session["oSubprofile4_Email2"].ToString() + "To:" + Session["sp4email2"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Profile4 Email2 Updated", Session["oSubprofile4_Email2"].ToString(), Session["sp4email2"].ToString());
        }
        else { }
        // end//

        if (String.Compare(Session["oProfile_Address_Line1"].ToString(), address1) != 0)

        {
            string act = "address1 changed from:" + Session["oProfile_Address_Line1"].ToString() + "To:" + address1;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Address Line 1 Updated", Session["oProfile_Address_Line1"].ToString(), address1);
        }
        else { }
        if (String.Compare(Session["oProfile_Address_Line2"].ToString(), address2) != 0)
        {
            string act = "address2 changed from:" + Session["oProfile_Address_Line2"].ToString() + "To:" + address2;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Address Line 2 Updated", Session["oProfile_Address_Line2"].ToString(), address2);
        }
        else { }
        if (String.Compare(Session["oProfile_Address_State"].ToString(), state) != 0)
        {
            string act = "state changed from:" + Session["oProfile_Address_State"].ToString() + "To:" + state;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "State Updated", Session["oProfile_Address_State"].ToString(), state);
        }
        else { }
        if (String.Compare(Session["oProfile_Address_city"].ToString(), city) != 0)
        {
            string act = "city changed from:" + Session["oProfile_Address_city"].ToString() + "To:" + city;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "City Updated", Session["oProfile_Address_city"].ToString(), city);
        }
        else { }
        if (String.Compare(Session["oProfile_Address_Postcode"].ToString(), pincode) != 0)
        {
            string act = "pincode changed from:" + Session["oProfile_Address_Postcode"].ToString() + "To:" + pincode;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Postal Code Updated", Session["oProfile_Address_Postcode"].ToString(), pincode);
        }
        else { }
        if (String.Compare(Session["oProfile_Address_Country"].ToString(), acountry) != 0)
        {
            string act = "Address Country changed from:" + Session["oProfile_Address_Country"].ToString() + "To:" + acountry;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Country Updated", Session["oProfile_Address_Country"].ToString(), acountry);
        }
        else { }
        if (String.Compare(Session["oProfile_Employment_status"].ToString(), employmentstatus) != 0)
        {
            string act = "employment status changed from:" + Session["oProfile_Employment_status"].ToString() + "To:" + employmentstatus;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Primary Employment status Updated", Session["oProfile_Employment_status"].ToString(), employmentstatus);
        }
        else { }
        if (String.Compare(Session["oProfile_Marital_status"].ToString(), maritalstatus) != 0)
        {
            string act = "marital status changed from:" + Session["oProfile_Marital_status"].ToString() + "To:" + maritalstatus;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Martial Status Updated", Session["oProfile_Marital_status"].ToString(), maritalstatus);
        }
        else { }
        if (String.Compare(Session["oProfile_NOY_Living_as_couple"].ToString(), livingyrs) != 0)
        {
            string act = "livingyrs changed from:" + Session["oProfile_NOY_Living_as_couple"].ToString() + "To:" + livingyrs;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Living Years Updated", Session["oProfile_NOY_Living_as_couple"].ToString(), livingyrs);
        }
        else { }
        if (String.Compare(Session["oProfile_Stay_Resort_Name"].ToString(), resort) != 0)
        {
            string act = "resort changed from:" + Session["oProfile_Stay_Resort_Name"].ToString() + "To:" + resort;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Resort Name Updated", Session["oProfile_Stay_Resort_Name"].ToString(), resort);
        }
        else { }
        if (String.Compare(Session["oProfile_Stay_Resort_Room_Number"].ToString(), roomno) != 0)
        {
            string act = "roomno changed from:" + Session["oProfile_Stay_Resort_Room_Number"].ToString() + "To:" + roomno;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Resort Room No Updated", Session["oProfile_Stay_Resort_Room_Number"].ToString(), roomno);
        }
        else { }
        if (String.Compare(Session["oProfile_Stay_Arrival_Date"].ToString(), arrivaldate) != 0)
        {
            string act = "arrival date changed from:" + Session["oProfile_Stay_Arrival_Date"].ToString() + "To:" + arrivaldate;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Arrival Date Updated", Session["oProfile_Stay_Arrival_Date"].ToString(), arrivaldate);
        }
        else { }
        if (String.Compare(Session["oProfile_Stay_Departure_Date"].ToString(), departuredate) != 0)
        {
            string act = "departure date changed from:" + Session["oProfile_Stay_Departure_Date"].ToString() + "To:" + departuredate;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Departure Date Updated", Session["oProfile_Stay_Departure_Date"].ToString(), departuredate);
        }
        else { }
        if (String.Compare(Session["oTour_Details_Guest_Status"].ToString(), gueststatus) != 0)
        {
            string act = "guest status changed from:" + Session["oTour_Details_Guest_Status"].ToString() + "To:" + gueststatus;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Guest Status Updated", Session["oTour_Details_Guest_Status"].ToString(), gueststatus);
        }
        else { }
        if (String.Compare(Session["oTour_Details_Guest_Sales_Rep"].ToString(), salesrep) != 0)

        {
            string act = "salesrep changed from:" + Session["oTour_Details_Guest_Sales_Rep"].ToString() + "To:" + salesrep;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sales Rep Updated", Session["oTour_Details_Guest_Sales_Rep"].ToString(), salesrep);
        }
        else { }
        if (String.Compare(Session["oTour_Details_Sales_Deck_Check_In"].ToString(), timeIn) != 0)
        {
            string act = "time In changed from:" + Session["oTour_Details_Sales_Deck_Check_In"].ToString() + "To:" + timeIn;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "CheckIn Time Updated", Session["oTour_Details_Sales_Deck_Check_In"].ToString(), timeIn);
        }
        else { }

        if (String.Compare(Session["oTour_Details_Sales_Deck_Check_Out"].ToString(), timeOut) != 0)
        {
            string act = "time Out changed from:" + Session["oTour_Details_Sales_Deck_Check_Out"].ToString() + "To:" + timeOut;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "CheckOut Time Updated", Session["oTour_Details_Sales_Deck_Check_Out"].ToString(), timeOut);
        }
        else { }
        if (String.Compare(Session["oTour_Details_Tour_Date"].ToString(), tourdate) != 0)
        {
            string act = "tour date changed from:" + Session["oTour_Details_Tour_Date"].ToString() + "To:" + tourdate;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Tour Date Updated", Session["oTour_Details_Tour_Date"].ToString(), tourdate);
        }
        else { }
        if (String.Compare(Session["tourweekno"].ToString(), wkno.ToString()) != 0)
        {
            string act = "week num changed from:" + Session["tourweekno"].ToString() + "To:" + wkno.ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Week No. Updated", Session["tourweekno"].ToString(), wkno.ToString());
        }
        else { }
        if (String.Compare(Session["oTour_Details_Taxi_In_Price"].ToString(), taxin) != 0)
        {
            string act = "taxi in price changed from:" + Session["oTour_Details_Taxi_In_Price"].ToString() + "To:" + taxin;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Taxi In Price Updated", Session["oTour_Details_Taxi_In_Price"].ToString(), taxin);
        }
        else { }
        if (String.Compare(Session["oTour_Details_Taxi_In_Ref"].ToString(), taxirefin) != 0)
        {
            string act = "taxi reference in changed from:" + Session["oTour_Details_Taxi_In_Ref"].ToString() + "To:" + taxirefin;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Taxi In Ref Updated", Session["oTour_Details_Taxi_In_Ref"].ToString(), taxirefin);
        }
        else { }
        if (String.Compare(Session["oTour_Details_Taxi_Out_Price"].ToString(), taxiout) != 0)
        {
            string act = "taxi outprice changed from:" + Session["oTour_Details_Taxi_Out_Price"].ToString() + "To:" + taxiout;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Taxi Out Price Updated", Session["oTour_Details_Taxi_Out_Price"].ToString(), taxiout);
        }
        else { }

        if (String.Compare(Session["oTour_Details_Taxi_Out_Ref"].ToString(), taxirefout) != 0)
        {
            string act = "taxi reference out changed from:" + Session["oTour_Details_Taxi_Out_Ref"].ToString() + "To:" + taxirefout;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Taxi Out Ref Updated", Session["oTour_Details_Taxi_Out_Ref"].ToString(), taxirefout);
        }
        else { }

        if (String.Compare(Session["oComments"].ToString(), ProComments) != 0)
        {
            string act = "Profile Comments changed from:" + Session["oComments"].ToString() + "To:" + ProComments;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Comments Updated", Session["oComments"].ToString(), ProComments);
        }
        else { }


        if (String.Compare(Session["ocomment2"].ToString(), Procomment2) != 0)
        {
            string act = "Profile Comment2 changed from:" + Session["ocomment2"].ToString() + "To:" + Procomment2;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Comments2 Updated", Session["ocomment2"].ToString(), Procomment2);
        }
        else { }

        if (String.Compare(Session["oregTerms"].ToString(), Session["regTerms"].ToString()) != 0)
        {
            string act = "Registration Terms changed from:" + Session["oregTerms"].ToString() + "To:" + Session["regTerms"].ToString();
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Reg Terms1 Updated", Session["oregTerms"].ToString(), Session["regTerms"].ToString());
        }
        else { }
        
            if (String.Compare(Session["SubVenue"].ToString(), subVenue) != 0)
        {
            string act = "Sub Venue changed from:" + Session["SubVenue"].ToString() + "To:" + subVenue;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Lead Source Updated", Session["Lead_Source"].ToString(), subVenue);
        }
        else { }
        if (String.Compare(Session["Lead_Source"].ToString(), guestRelations) != 0)
        {
            string act = "Lead Source changed from:" + Session["Lead_Source"].ToString() + "To:" + guestRelations;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Lead Source Updated", Session["Lead_Source"].ToString(), guestRelations);
        }
        else { }

        if (String.Compare(Session["Sub_Venue_Group"].ToString(), subVenueGroup) != 0)
        {
            string act = "Sub Venue Group changed from:" + Session["Sub_Venue_Group"].ToString() + "To:" + subVenueGroup;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Sub Venue Group Updated", Session["Sub_Venue_Group"].ToString(), subVenueGroup);
        }
        else { }
        if (String.Compare(Session["leadOffice"].ToString(), leadOffice) != 0)
        {
            string act = "Lead Office changed from:" + Session["leadOffice"].ToString() + "To:" + leadOffice;
            int insertlog1 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", act, user, DateTime.Now.ToString(), "Indian_contracts.aspx", "Lead Office Updated", Session["leadOffice"].ToString(), leadOffice);
        }
        else { }


        if (GroupVenueDropDownList.SelectedItem.Text=="Coldline")
        {
           
        }
      else
        {
            //update profile
            int updateprofile = Queries.UpdateProfile(profile, venuecountry, venue, venuegroup, mktg, agents, agentcode, membertype1, memno1, membertype2, memno2, employmentstatus, maritalstatus, livingyrs, mgr, photoidentity, card, ProComments, "", subVenue, Session["regTerms"].ToString(), "", Procomment2, subVenueGroup, leadOffice);
            int updateLeadSource = Queries.leadSource(profile, guestRelations);
            // int tour = Queries.UpdateTourDetails(profile, gueststatus, salesrep, tourdate, timeIn, timeOut, taxin, taxirefin, taxiout, taxirefout, "", wkno);
            int tour = Queries.UpdateTourDetailsInhouse(profile, gueststatus, salesrep, tourdate, timeIn, timeOut, wkno);

        }

    
        int primary = Queries.UpdateProfilePrimary(profile, primarytitle, primaryfname, primaylname, primarydob, primarynationality, primarycountry, npage, npdesg, primarylanguage);
        string secondarypnote1 = "Secondary Profile Details Added";
        string sp1note1 = "Sub Profile1 Details Added"; string sp2note1 = "Sub Profile2 Details Added";
        string sp3note1 = "Sub Profile3 Details Added"; string sp4note1 = "Sub Profile4 Details Added";
        if (secondarytitle == "")
        {
          
        }
        else
        {
            string connn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
            SqlConnection sqlcon = new SqlConnection(connn);

            string query = "select * from Profile_Secondary where Profile_ID = '" + Session["ProfileID"].ToString() + "'";
            sqlcon.Open();
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            SqlDataReader reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                int secondary = Queries.UpdateProfileSecondary(profile, secondarytitle, secondaryfname, secondarylname, secondarydob, secondarynationality, secondarycountry, nsage, nsdesg, secondarylanguage);
            }
            else
            {
                int year = DateTime.Now.Year;
                string secondaryprofileid = Queries.GetSecondaryProfileID(office);
                int secondary = Queries.InsertSecondaryProfile(secondaryprofileid, secondarytitle, secondaryfname, secondarylname, secondarydob, secondarynationality, secondarycountry, Session["ProfileID"].ToString(), nsage, nsdesg, secondarylanguage);
                int updates = Queries.UpdateSecondaryValue(office, year);

                string log3 = "secondary details:" +   "secondary id:" + secondaryprofileid +  "," + "title:" + secondarytitle +  "," + "Fname:" + secondaryfname +  "," + "Lname:" + secondarylname +  "," + "DOB:" + secondarydob +  "," + "nationality:" + secondarynationality +  "," +
                   "Country:" + secondarycountry +  "," + "Profile ID:" + Session["ProfileID"].ToString() +  "," + "Age:" + nsage +  "," + "Designation:" + nsdesg +  "," + "Languages spoken:" + secondarylanguage;
                int insertlog3 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log3, user, DateTime.Now.ToString(), "Indian_contracts.aspx", secondarypnote1, "", log3);

            }
            reader.Close();
            sqlcon.Close();
         

        }

       
        if (sp1title == "")
        {

        }else
        {
            string connn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
            SqlConnection sqlcon = new SqlConnection(connn);

            string query = "select * from Sub_Profile1 where Profile_ID = '" + Session["ProfileID"].ToString() + "'";
            sqlcon.Open();
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            SqlDataReader reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                int sp1 = Queries.UpdateSubProfile1(profile, sp1title, sp1fname, sp1lname, sp1dob, sp1nationality, sp1country, nsp1age);
            }
            else
            {
                int year = DateTime.Now.Year;
                string subprofile1id = Queries.GetSubProfile1ID(office);
                int subprofielid = Queries.InsertSub_Profile1(subprofile1id, sp1title, sp1fname, sp1lname, sp1dob, sp1nationality, sp1country, Session["ProfileID"].ToString(), nsp1age);
                int updatesp1 = Queries.UpdateSubprofile1Value(office, year);


                string log5 = "sub profile1 details:" +   "sp1 id:" + subprofile1id +  "," + "title:" + sp1title +  "," + "Fname:" + sp1fname +  "," +
                    "Lname:" + sp1lname +  "," + "DOB:" + sp1dob +  "," + "nationality:" + sp1nationality +  "," + "Country:" + sp1country +  "," + "Profile ID:" + Session["ProfileID"].ToString();
                int insertlog5 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log5, user, DateTime.Now.ToString(), "Indian_contracts.aspx", sp1note1, "", log5);
            }
            reader.Close();
            sqlcon.Close();
            

        }


        if (sp2title=="")
        {

        }else
        {
            string connn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
            SqlConnection sqlcon = new SqlConnection(connn);

            string query = "select * from Sub_Profile2 where Profile_ID = '" + Session["ProfileID"].ToString() + "'";
            sqlcon.Open();
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            SqlDataReader reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                int sp2 = Queries.UpdateSubProfile2(profile, sp2title, sp2fname, sp2lname, sp2dob, sp2nationality, sp2country, nsp2age);
            }
            else
            {
                int year = DateTime.Now.Year;
                string subprofile2id = Queries.GetSubProfile2ID(office);
                int subprofielid2 = Queries.InsertSub_Profile2(subprofile2id, sp2title, sp2fname, sp2lname, sp2dob, sp2nationality, sp2country, Session["ProfileID"].ToString(), nsp2age);
                int updatesp2 = Queries.UpdateSubprofile2Value(office, year);

                string log6 = "sub profile2 details:"  + "sp2 id:" + subprofile2id +  "," + "title:" + sp2title +  "," + "Fname:" + sp2fname +  "," + "Lname:" + sp2lname +  "," +
                  "DOB:" + sp2dob +  "," + "nationality:" + sp2nationality +  "," + "Country:" + sp2country +  "," + "Profile ID:" + Session["ProfileID"].ToString();
                int insertlog6 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log6, user, DateTime.Now.ToString(), "Indian_contracts.aspx", sp2note1, "", log6);
            }
            reader.Close();
            sqlcon.Close();
            
        }

        if (sp3title == "")
        {

        }
        else
        {
            string connn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
            SqlConnection sqlcon = new SqlConnection(connn);

            string query = "select * from Sub_Profile3 where Profile_ID = '" + Session["ProfileID"].ToString() + "'";
            sqlcon.Open();
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            SqlDataReader reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                int sp3 = Queries.UpdateSubProfile3(profile, sp3title, sp3fname, sp3lname, sp3dob, sp3nationality, sp3country, nsp3age);

            }
            else
            {
                int year = DateTime.Now.Year;
                string subprofile3id = Queries.GetSubProfile3ID(office);
                int subprofielid3 = Queries.InsertSub_Profile3(subprofile3id, sp3title, sp3fname, sp3lname, sp3dob, sp3nationality, sp3country, Session["ProfileID"].ToString(), nsp3age);
                int updatesp3 = Queries2.UpdateSubprofile3Value(office, year);

                string log12 = "sub profile3 details:" +   "sp3 id:" + subprofile3id +  "," + "title:" + sp3title +  "," + "Fname:" + sp3fname +  "," + "Lname:" + sp3lname +  "," + "DOB:" + sp3dob +  "," + "nationality:" + sp3nationality +  "," + "Country:" + sp3country +  "," + "Profile ID:" + Session["ProfileID"].ToString();
                int insertlog12 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log12, user, DateTime.Now.ToString(), "Indian_contracts.aspx", sp3note1, "", log12);
            }
            reader.Close();
            sqlcon.Close();

         
        }

        if (sp4title == "")
        {

        }
        else
        {
            string connn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
            SqlConnection sqlcon = new SqlConnection(connn);

            string query = "select * from Sub_Profile4 where Profile_ID = '" + Session["ProfileID"].ToString() + "'";
            sqlcon.Open();
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            SqlDataReader reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                int sp4 = Queries.UpdateSubProfile4(profile, sp4title, sp4fname, sp4lname, sp4dob, sp4nationality, sp4country, nsp4age);
            }
            else
            {
                int year = DateTime.Now.Year;
                string subprofile4id = Queries.GetSubProfile4ID(office);
                int subprofielid4 = Queries.InsertSub_Profile4(subprofile4id, sp4title, sp4fname, sp4lname, sp4dob, sp4nationality, sp4country, Session["ProfileID"].ToString(), nsp4age);
                int updatesp4 = Queries2.UpdateSubprofile4Value(office, year);


                string log13 = "sub profile4 details:" +  "sp4 id:" + subprofile4id +  "," + "title:" + sp4title +  "," + "Fname:" + sp4fname +  "," + "Lname:" + sp4lname +  "," + "DOB:" + sp4dob +  "," + "nationality:" + sp4nationality +  "," + "Country:" + sp4country +  "," + "Profile ID:" + Session["ProfileID"].ToString();
                int insertlog13 = Queries.InsertContractLogs_India(Session["ProfileID"].ToString(), "", log13, user, DateTime.Now.ToString(), "Indian_contracts.aspx", sp4note1, "", log13);
            }
            reader.Close();
            sqlcon.Close();
          
        }
        int address = Queries.UpdateProfileAddress(profile, address1, address2, state, city, pincode, acountry);
        int phone = Queries.UpdatePhone(profile, Session["pcc"].ToString(), Session["pmobile"].ToString(), Session["paltrcc"].ToString(), Session["palternate"].ToString(), Session["scc"].ToString(), Session["smobile"].ToString(), Session["saltcc"].ToString(), Session["salternate"].ToString(), Session["sp1cc"].ToString(), Session["sp1mobile"].ToString(), Session["sp1altcc"].ToString(), Session["sp1alternate"].ToString(), Session["sp2cc"].ToString(), Session["sp2mobile"].ToString(), Session["sp2altccc"].ToString(), Session["sp2alternate"].ToString(), Session["sp3cc"].ToString(), Session["sp3mobile"].ToString(), Session["sp4cc"].ToString(), Session["sp4mobile"].ToString(), Session["sp3altccc"].ToString(), Session["sp3alternate"].ToString(), Session["sp4altccc"].ToString(), Session["sp4alternate"].ToString(), Session["priOfficecc"].ToString(), Session["priOfficeno"].ToString(), Session["secOfficecc"].ToString(), Session["secOfficeno"].ToString(), Session["priHomecc"].ToString(), Session["prihomeno"].ToString(), Session["sechomecc"].ToString(), Session["sechomeno"].ToString());
        int email = Queries.UpdateEmail(profile, Session["pemail"].ToString(), Session["semail"].ToString(), Session["sp1email"].ToString(), Session["sp2email"].ToString(), Session["pemail2"].ToString(), Session["semail2"].ToString(), Session["sp1email2"].ToString(), Session["sp2email2"].ToString(), Session["sp3email"].ToString(), Session["sp3email2"].ToString(), Session["sp4email"].ToString(), Session["sp4email2"].ToString());
        int stay = Queries.UpdateProfileStay(profile, resort, roomno, arrivaldate, departuredate);
      



        //int address = Queries.UpdateProfileAddress(profile, address1, address2, state, city, pincode, acountry);
        //int phone = Queries.UpdatePhone(profile, pcc, pmobile, paltrcc, palternate, scc, smobile, saltcc, salternate, sp1cc, sp1mobile, sp1altcc, sp1alternate, sp2cc, sp2mobile, sp2altccc, sp2alternate,sp3cc,sp3mobile, sp4cc, sp4mobile, sp3altccc, sp3alternate, sp4altccc, sp4alternate,priOfficecc,priOfficeno,secOfficecc,secOfficeno);
        //int email = Queries.UpdateEmail(profile, pemail, semail, sp1email, sp2email,"","","","", sp3email, "", sp4email, "");
        //int stay = Queries.UpdateProfileStay(profile, resort, roomno, arrivaldate, departuredate);
        //int tour = Queries.UpdateTourDetails(profile, gueststatus, salesrep, tourdate, timeIn, timeOut, taxin, taxirefin, taxiout, taxirefout,"",wkno);


        Response.Redirect(Request.RawUrl);
        //   string msg = "Details updated for Profile :" + " " + profile;
        //   Page.ClientScript.RegisterStartupScript(GetType(), "popup", "alert('" + msg + "');", true);
        //  Response.Write("<script>alert(' successfully')</script>");
        //Response.Write(@"<script alert('Record successful.'); window.location = '" + Request.RawUrl + @"'; </script>");
    }
    
    [WebMethod]
    public static string primaryl(string prid)
    {
        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        string JSON = "{\n \"names\":[";
        sqlcon.Open();

        //string query = "SELECT Primary_Language FROM Profile_Primary WHERE Profile_ID ='"+ '""
        //   SqlCommand sql = new SqlCommand(query, sqlcon);

        //SqlDataReader reader = sql.ExecuteReader();
        SqlDataReader reader = Queries.LoadPrimaryLang(prid);
        if (reader.HasRows)
        {
            
        while (reader.Read())
        {
            string name = reader.GetString(0);

            string[] arr = name.Split(',');
            for (int i = 0; i < arr.Length; i++)
            {

                JSON += "[\"" + arr[i] + "\"],";
            }
        }
        JSON = JSON.Substring(0, JSON.Length - 1);
        JSON += "] \n}";
        }else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";

        }

        return JSON;
    }

    [WebMethod]
    public static string Secondarylang(string prid)
    {

        string JSON = "{\n \"names\":[";
        SqlDataReader reader = Queries.LoadSecLang(prid);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string name = reader.GetString(0);

                string[] arr = name.Split(',');
                for (int i = 0; i < arr.Length; i++)
                {

                    JSON += "[\"" + arr[i] + "\"],";
                }
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }

        return JSON;
    }


    [WebMethod]
    public static string PhotoIdentity(string prid)
    {

        string JSON = "{\n \"names\":[";
        SqlDataReader reader = Queries.LoadPhotoID(prid);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string name = reader.GetString(0);

                string[] arr = name.Split(',');
                for (int i = 0; i < arr.Length; i++)
                {

                    JSON += "[\"" + arr[i] + "\"],";
                }
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
       

        return JSON;
    }
    [WebMethod]
    public static string CardType(string prid)
    {

        string JSON = "{\n \"names\":[";
        SqlDataReader reader = Queries.LoadCardType(prid);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string name = reader.GetString(0);

                string[] arr = name.Split(',');
                for (int i = 0; i < arr.Length; i++)
                {

                    JSON += "[\"" + arr[i] + "\"],";
                }
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
      
        return JSON;
    }

    [WebMethod]
    public static string loadsubVenueGroup(string prid)
    {

        string JSON = "{\n \"names\":[";
        SqlDataReader reader = Queries.LoadSubVenueGroup(prid);
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string name = reader.GetString(0);
                
                    JSON += "[\"" + name + "\"],";
               
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }

        return JSON;
    }

    [WebMethod]
    public static string getMarketingProgram(string venue, string venueGroup, string profileID)
    {

        if (venueGroup == "Coldline" || venueGroup == "COLDLINE")
        {
            String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
            SqlConnection sqlcon = new SqlConnection(conn);
            string JSON = "{\n \"names\":[";
            sqlcon.Open();

            string query = "select distinct Marketing_Program_Name from Marketing_Program join Venue_Group vg on vg.Venue_group_ID=Marketing_Program.Venue_Group_ID join venue v on v.Venue_ID= vg.Venue_ID where Marketing_Program_Status = 'active' and Marketing_Program_Name not in(select Profile_Marketing_Program   from Profile where Profile_ID ='" + profileID + "' ) and vg.Venue_Group_Name='" + venueGroup + "' and v.Venue_Name= '" + venue + "'";
            SqlCommand sql = new SqlCommand(query, sqlcon);

            SqlDataReader reader = sql.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    string name = reader.GetString(0);
                    JSON += "[\"" + name + "\",\"" + name + "\"],";
                }
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }
            else
            {
                JSON += "[\"" + "" + "\"],";
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }

            sqlcon.Close();
            return JSON;
        }
        else
        {


            String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
            SqlConnection sqlcon = new SqlConnection(conn);
            string JSON = "{\n \"names\":[";
            sqlcon.Open();

            string query = "select distinct Marketing_Program_Name,Marketing_Program_abbrv from Marketing_Program join Venue_Group vg on vg.Venue_group_ID=Marketing_Program.Venue_Group_ID join venue v on v.Venue_ID= vg.Venue_ID where Marketing_Program_Status = 'active' and Marketing_Program_Name not in(select Profile_Marketing_Program   from Profile where Profile_ID ='" + profileID + "' ) and vg.Venue_Group_Name='" + venueGroup + "' and v.Venue_Name= '" + venue + "'";
            SqlCommand sql = new SqlCommand(query, sqlcon);

            SqlDataReader reader = sql.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    string name = reader.GetString(0);
                    string Marketing_Program_abbrv = reader.GetString(1);
                    JSON += "[\"" + name + "\",\"" + Marketing_Program_abbrv + "\"],";
                }
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }
            else
            {
                JSON += "[\"" + "" + "\"],";
                JSON = JSON.Substring(0, JSON.Length - 1);
                JSON += "] \n}";
            }

            sqlcon.Close();
            return JSON;
        }



    }


    [WebMethod]
    public static string LoadAgentsOnVenuegrp(string venue, string vgrp)
    {

        string JSON = "{\n \"names\":[";

        if (vgrp == "Coldline")
        {
            SqlDataReader reader = Queries.LoadAgentsOnVenue1(venue,office);
            while (reader.Read())
            {
                string ag = reader.GetString(0);

                JSON += "[\"" + ag + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            SqlDataReader reader = Queries.GetSalesRepOnlyVenue(venue);
            while (reader.Read())
            {
                string ag = reader.GetString(0);

                JSON += "[\"" + ag + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }

        return JSON;
    }


    [WebMethod]
    public static string LoadTOOnVenueNVGrp(string venue, string vgrp)
    {

        string JSON = "{\n \"names\":[";

        if (vgrp == "Coldline")
        {
            SqlDataReader reader = Queries.LoadTOOPCOnVenue1(venue,office);
            while (reader.Read())
            {
                string tom = reader.GetString(0);

                JSON += "[\"" + tom + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";

            return JSON;
        }
        else
        {
            SqlDataReader reader = Queries.LoadTOOPCOnVenueNGrp(venue);
            while (reader.Read())
            {
                string tom = reader.GetString(0);

                JSON += "[\"" + tom + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";

            return JSON;

        }
    }
    [WebMethod]
    public static string LoadCountryCode(string country)
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        String JSON = "{\n \"names\":[";
        string query = " select Country_Code from Country  where country_name ='" + country + "' union all select Country_Code from Country  where country_name !='" + country + "';";
        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        while (reader.Read())
        {

            string countryCode = reader.GetString(0);



            JSON += "[\"" + countryCode + "\"],";


        }
        JSON = JSON.Substring(0, JSON.Length - 1);
        JSON += "] \n}";
        sqlcon.Close();
        return JSON;



    }
    [WebMethod]
    public static string LoadAllCountryCode(string country)
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        String JSON = "{\n \"names\":[";
        string query = " select Country_Code from Country  where country_name ='" + country + "' union all select Country_Code from Country  where country_name !='" + country + "';";
        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        while (reader.Read())
        {

            string countryCode = reader.GetString(0);



            JSON += "[\"" + countryCode + "\"],";


        }
        JSON = JSON.Substring(0, JSON.Length - 1);
        JSON += "] \n}";
        sqlcon.Close();
        return JSON;



    }

    [WebMethod]
    public static string LoadStates(string country)
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        String JSON = "{\n \"names\":[";
        string query = "select s.State_Name from state s join Country c on s.State_Country=c.Country_Name where c.Country_Name='" + country.Trim() + "'";

        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {

                string stateName = reader.GetString(0);



                JSON += "[\"" + stateName + "\"],";


            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
       
        sqlcon.Close();
        return JSON;





    }


    [WebMethod]
    public static string loadRegTerms()
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        String JSON = "{\n \"names\":[";
        string query = "select RegTerms from profile p where Profile_ID='" + HttpContext.Current.Session["ProfileID"].ToString() + "';";
        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {

                string RegTerms = reader.GetString(0);
                JSON += "[\"" + RegTerms + "\"],";


            }
        
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
       
        sqlcon.Close();
        return JSON;



    }

    protected void Button7_Click(object sender, EventArgs e)
    {
        DataSet dsct = Queries.LoadContractNoDetails(contractnoTextBox.Text);
      string   ContractdetailsID  = dsct.Tables[0].Rows[0]["ContractDetails_ID"].ToString();
        SOR_AdditionalName(ContractdetailsID);
        
        DataSet dsfd = Queries.LoadFinanceContractDetails(ContractdetailsID);
        string Finance_Details = dsfd.Tables[0].Rows[0]["Finance_Method"].ToString();
        DataSet ds = Queries.LoadProfielDetailsFull(Session["ProfileID"].ToString());
        string aftype= dsfd.Tables[0].Rows[0]["Affiliate_Type"].ToString();
        string mc= dsct.Tables[0].Rows[0]["MCWaiver"].ToString();
        string canxcontno= dsct.Tables[0].Rows[0]["CanxContractNo"].ToString();
        string companyname = ds.Tables[0].Rows[0]["Company_Name"].ToString().ToUpper();
        string statename = ds.Tables[0].Rows[0]["Profile_Address_State"].ToString();
        office = Queries.GetOfficeFromCountry(Session["ProfileID"].ToString());
        LoadDocuments(ContractdetailsID, office, Finance_Details, contracttypeDropDownList.SelectedItem.Text, aftype, mc, canxcontno, companyname, statename);
        string script = "<script> $(function() {$('#tabs').tabs({ disabled: [5] });  $( '#tabs' ).tabs({ active: 4 }); });</script> ";
        ScriptManager.RegisterStartupScript(this, typeof(Page), "alert", script, false);

    }




    protected void Button1_Click(object sender, EventArgs e)
    {
        DataTable datatable = Queries.loadClientDetails(Session["ProfileID"].ToString());// profileidTextBox.Text);
        var printr = "";
        ReportDocument crystalReport = new ReportDocument(); // creating object of crystal report
        crystalReport.Load(Server.MapPath("~/ireports/Client_Details.rpt")); // path of report       
        crystalReport.SetDataSource(datatable);

        System.IO.FileStream fs = null;
        long FileSize = 0;
        DiskFileDestinationOptions oDest = new DiskFileDestinationOptions();
        string ExportFileName = Server.MapPath("~/ireports/" + printr + ".rpt") + "Export";
        crystalReport.ExportOptions.ExportDestinationType = ExportDestinationType.DiskFile;
        crystalReport.ExportOptions.ExportFormatType = ExportFormatType.PortableDocFormat;
        oDest.DiskFileName = ExportFileName;
        crystalReport.ExportOptions.DestinationOptions = oDest;
        crystalReport.Export();
        Response.Clear();
        Response.Buffer = true;
        Response.AddHeader("Content-Type", "application/pdf");
       // string fn = profileidTextBox.Text + "Client_Details" + ".pdf";
        string fn = Session["ProfileID"].ToString() + "Client_Details" + ".pdf";
        
        Response.AddHeader("Content-Disposition", "attachment;filename=" + fn + ";");

        fs = new System.IO.FileStream(ExportFileName, FileMode.Open);
        FileSize = fs.Length;
        byte[] bBuffer = new byte[Convert.ToInt32(FileSize) + 1];
        fs.Read(bBuffer, 0, Convert.ToInt32(FileSize));
        fs.Close();
        Response.BinaryWrite(bBuffer);
        Response.Flush();
    }


    public string loadGifts()
    {
        string htmlstr = "";
        string conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        string query = "select * from Gift_Option  where Gift_Option_Status='Active' and office='hml'";
        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        while (reader.Read())
        {

            string giftname = reader.GetString(1);
            string giftItem = reader.GetString(5);
            htmlstr += "<option value='" + giftname + "-" + giftItem + "'>" + giftname + "-" + giftItem + "</option>";
        }
        sqlcon.Close();
        return htmlstr;

    }

    [WebMethod]
    public static string loadgiftdata()
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        String JSON = "{\n \"names\":[";
        string query = "select Gift_ID_Option+'-'+GiftItem from Gift where Profile_ID='" + HttpContext.Current.Session["ProfileID"].ToString() + "'";
        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        if (reader.HasRows)
        {

            while (reader.Read())
            {

                string gift = reader.GetString(0);



                JSON += "[\"" + gift + "\"],";


            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }

        sqlcon.Close();
        return JSON;



    }
    [WebMethod]
    public static string LoadCoressCountry()
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        String JSON = "{\n \"names\":[";
        string query = "select distinct country_name   from country order by 1;";
        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {

                string country_name = reader.GetString(0);
                JSON += "[\"" + country_name + "\"],";


            }

            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }

        sqlcon.Close();
        return JSON;



    }


    [WebMethod]
    public static string getSubVenue(string venue,string venueGroup)
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        String JSON = "{\n \"names\":[";
        string query = "select svi.SVenue_India_Name from sub_venue_india svi join Venue_Group vg on vg.Venue_Group_ID = svi.GroupVenue_ID join venue v on v.Venue_ID = vg.Venue_ID where vg.Venue_Group_Name = '"+venueGroup+"' and v.Venue_Name = '"+venue+"' and svi.SVenue_India_Status = 'Active' order by 1; ";
        sqlcon.Open();
        SqlCommand cmd = new SqlCommand(query, sqlcon);
        SqlDataReader reader = cmd.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string SVenue_India_Name = reader.GetString(0);
                JSON += "[\"" + SVenue_India_Name + "\"],";


            }

            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }

        sqlcon.Close();
        return JSON;



    }
    [WebMethod]
    public static string getCurrentEuroRate(string finance)
    {

        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        sqlcon.Open();
        string JSON = "{\n \"names\":[";
        // string query = " select ERates_EUR from exchange_rate where ERates_Status='Active' and office='IVO';";
        string query = "select case when( ERates_EUR='' or ERates_EUR=null) then '0.87624' else  ERates_EUR end as ERates_EUR from exchange_rate where ERates_Status='Active' and office='IVO'";
        SqlCommand sql = new SqlCommand(query, sqlcon);

        SqlDataReader reader = sql.ExecuteReader();
        while (reader.Read())
        {
            double eurorate = reader.GetDouble(0);         
            JSON += "[\"" + eurorate + "\"],";
        }
        JSON = JSON.Substring(0, JSON.Length - 1);
        JSON += "] \n}";

        return JSON;

    }

    [WebMethod]
    public static string GetContractVenue(string cvenue,string venue)
    {
        String conn = ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        SqlConnection sqlcon = new SqlConnection(conn);
        string JSON = "{\n \"names\":[";
        sqlcon.Open();

        string query = "select Contract_Venue_Name from Contract_Venue cv join Contract_Group cg on cg.Contract_Group_ID = cv.Contract_Group_ID join venue v on v.venue_id = cv.venue_id where Contract_Venue_Status = 'Active' and cg.Contract_Group_Name = '" + cvenue + "' and v.venue_name = '" + venue + "'";
            SqlCommand sql = new SqlCommand(query, sqlcon);

        SqlDataReader reader = sql.ExecuteReader();
        if (reader.HasRows)
        {
            while (reader.Read())
            {
                string name = reader.GetString(0);
                JSON += "[\"" + name + "\"],";
            }
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";
        }
        else
        {
            JSON += "[\"" + "" + "\"],";
            JSON = JSON.Substring(0, JSON.Length - 1);
            JSON += "] \n}";

        }
        sqlcon.Close();
        return JSON;
    }
}



